@prefix fn: <http://www.w3.org/2005/xpath-functions#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rule: <http://w3id.org/sepses/vocab/rule#> .
@prefix sesame: <http://www.openrdf.org/schema/sesame#> .
@prefix sigma: <http://w3id.org/sepses/vocab/rule/sigma#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://w3id.org/sepses/resource/sigma/sigma-17eb8e57-9983-420d-ad8a-2c4976c22eb8>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/12/12";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects process injection using the signed Windows tool Mavinject32.exe";
  <http://purl.org/dc/terms/id> "17eb8e57-9983-420d-ad8a-2c4976c22eb8";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "MavInject Process Injection";
  rule:hasDetectedRule "attack.t1055", "attack.t1055.001", "attack.t1218";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /INJECTRUNNING .*\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://reaqta.com/2017/12/mavinject-microsoft-injector/", "https://twitter.com/Hexacorn/status/776122138063409152",
    "https://twitter.com/gN3mes1s/status/941315826107510784" .

<http://w3id.org/sepses/resource/sigma/sigma-6ba5a05f-b095-4f0a-8654-b825f4f16334>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/01/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects RDP session hijacking by using MSTSC shadowing";
  <http://purl.org/dc/terms/id> "6ba5a05f-b095-4f0a-8654-b825f4f16334";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "MSTSC Shadowing";
  rule:hasDetectedRule "attack.lateral_movement", "attack.t1563.002";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"noconsentprompt\")
|| regex(str(?cmdLine),\"shadow:\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/kmkz/Pentesting/blob/master/Post-Exploitation-Cheat-Sheet",
    "https://twitter.com/kmkz_security/status/1220694202301976576" .

<http://w3id.org/sepses/resource/sigma/sigma-62510e69-616b-4078-b371-847da438cc03>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/10/30";
  <http://purl.org/dc/terms/creator> "Endgame, JHasenbusch (ported for oscd.community)";
  <http://purl.org/dc/terms/description> "Identifies attempts to enumerate hosts in a network using the built-in Windows net.exe tool.";
  <http://purl.org/dc/terms/id> "62510e69-616b-4078-b371-847da438cc03";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "Windows Network Enumeration";
  rule:hasDetectedRule "attack.discovery", "attack.t1018";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Legitimate use of net.exe utility by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"view\")
FILTER (regex(str(?cmdLine),\"\\\\net.exe\")
|| regex(str(?cmdLine),\"\\\\net1.exe\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/b8a94d2f-dc75-4630-9d73-1edc6bd26fff.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1018/T1018.yaml" .

<http://w3id.org/sepses/resource/sigma/sigma-3d4aebe0-6d29-45b2-a8a4-3dfde586a26d>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/06/03";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Archer malware invocation via rundll32";
  <http://purl.org/dc/terms/id> "3d4aebe0-6d29-45b2-a8a4-3dfde586a26d";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Fireball Archer Install";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/06/03";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Archer malware invocation via rundll32";
  <http://purl.org/dc/terms/id> "3d4aebe0-6d29-45b2-a8a4-3dfde586a26d";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Fireball Archer Install";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"rundll32.exe .*,InstallArcherSvc\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/9b4971349ae85aa09c0a69852ed3e626c954954a3927b3d1b6646f139b930022?environmentId=100",
    "https://www.virustotal.com/en/file/9b4971349ae85aa09c0a69852ed3e626c954954a3927b3d1b6646f139b930022/analysis/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/06/03";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Archer malware invocation via rundll32";
  <http://purl.org/dc/terms/id> "3d4aebe0-6d29-45b2-a8a4-3dfde586a26d";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Fireball Archer Install";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"rundll32.exe .*,InstallArcherSvc\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/9b4971349ae85aa09c0a69852ed3e626c954954a3927b3d1b6646f139b930022?environmentId=100",
    "https://www.virustotal.com/en/file/9b4971349ae85aa09c0a69852ed3e626c954954a3927b3d1b6646f139b930022/analysis/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011" .

<http://w3id.org/sepses/resource/sigma/sigma-2158f96f-43c2-43cb-952a-ab4580f32382>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/12";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "The psr.exe captures desktop screenshots and saves them on the local machine";
  <http://purl.org/dc/terms/id> "2158f96f-43c2-43cb-952a-ab4580f32382";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Psr.exe Capture Screenshots";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"/start\")
FILTER regex(str(?cmdLine),\"\\\\Psr.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/LOLUtilz/OSBinaries/Psr.yml",
    "https://www.sans.org/summit-archives/file/summit-archive-1493861893.pdf";
  rule:hasDetectedRule "attack.collection", "attack.t1113";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/12";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "The psr.exe captures desktop screenshots and saves them on the local machine";
  <http://purl.org/dc/terms/id> "2158f96f-43c2-43cb-952a-ab4580f32382";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Psr.exe Capture Screenshots";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"/start\")
FILTER regex(str(?cmdLine),\"\\\\Psr.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/LOLUtilz/OSBinaries/Psr.yml",
    "https://www.sans.org/summit-archives/file/summit-archive-1493861893.pdf";
  rule:hasDetectedRule "attack.collection", "attack.t1113" .

<http://w3id.org/sepses/resource/sigma/sigma-b236190c-1c61-41e9-84b3-3fe03f6d76b0>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/07/13";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a flag anomaly in which regsvr32.exe uses a /i flag without using a /n flag at the same time";
  <http://purl.org/dc/terms/id> "b236190c-1c61-41e9-84b3-3fe03f6d76b0";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Regsvr32 Flags Anomaly";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\" /i:\")
FILTER regex(str(?cmdLine),\"\\\\regsvr32.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/sbousseaden/status/1282441816986484737?s=12";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1117", "attack.t1218.010";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/07/13";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a flag anomaly in which regsvr32.exe uses a /i flag without using a /n flag at the same time";
  <http://purl.org/dc/terms/id> "b236190c-1c61-41e9-84b3-3fe03f6d76b0";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Regsvr32 Flags Anomaly";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\" /i:\")
FILTER regex(str(?cmdLine),\"\\\\regsvr32.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/sbousseaden/status/1282441816986484737?s=12";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1117", "attack.t1218.010";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/07/13";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a flag anomaly in which regsvr32.exe uses a /i flag without using a /n flag at the same time";
  <http://purl.org/dc/terms/id> "b236190c-1c61-41e9-84b3-3fe03f6d76b0";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Regsvr32 Flags Anomaly";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\" /i:\")
FILTER regex(str(?cmdLine),\"\\\\regsvr32.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/sbousseaden/status/1282441816986484737?s=12";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1117", "attack.t1218.010" .

<http://w3id.org/sepses/resource/sigma/sigma-92626ddd-662c-49e3-ac59-f6535f12d189>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the creation of scheduled tasks in user session";
  <http://purl.org/dc/terms/id> "92626ddd-662c-49e3-ac59-f6535f12d189";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Scheduled Task Creation";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Administrative activity", "Software installation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /create .*\")
FILTER regex(str(?cmdLine),\"schtasks.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.privilege_escalation",
    "attack.s0111", "attack.t1053", "attack.t1053.005", "car.2013-08-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the creation of scheduled tasks in user session";
  <http://purl.org/dc/terms/id> "92626ddd-662c-49e3-ac59-f6535f12d189";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Scheduled Task Creation";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Administrative activity", "Software installation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /create .*\")
FILTER regex(str(?cmdLine),\"schtasks.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.privilege_escalation",
    "attack.s0111", "attack.t1053", "attack.t1053.005", "car.2013-08-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the creation of scheduled tasks in user session";
  <http://purl.org/dc/terms/id> "92626ddd-662c-49e3-ac59-f6535f12d189";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Scheduled Task Creation";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Administrative activity", "Software installation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /create .*\")
FILTER regex(str(?cmdLine),\"schtasks.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.privilege_escalation",
    "attack.s0111", "attack.t1053", "attack.t1053.005", "car.2013-08-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the creation of scheduled tasks in user session";
  <http://purl.org/dc/terms/id> "92626ddd-662c-49e3-ac59-f6535f12d189";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Scheduled Task Creation";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Administrative activity", "Software installation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /create .*\")
FILTER regex(str(?cmdLine),\"schtasks.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.privilege_escalation",
    "attack.s0111", "attack.t1053", "attack.t1053.005", "car.2013-08-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the creation of scheduled tasks in user session";
  <http://purl.org/dc/terms/id> "92626ddd-662c-49e3-ac59-f6535f12d189";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Scheduled Task Creation";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Administrative activity", "Software installation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /create .*\")
FILTER regex(str(?cmdLine),\"schtasks.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.privilege_escalation",
    "attack.s0111", "attack.t1053", "attack.t1053.005", "car.2013-08-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the creation of scheduled tasks in user session";
  <http://purl.org/dc/terms/id> "92626ddd-662c-49e3-ac59-f6535f12d189";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Scheduled Task Creation";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Administrative activity", "Software installation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /create .*\")
FILTER regex(str(?cmdLine),\"schtasks.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.privilege_escalation",
    "attack.s0111", "attack.t1053", "attack.t1053.005", "car.2013-08-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the creation of scheduled tasks in user session";
  <http://purl.org/dc/terms/id> "92626ddd-662c-49e3-ac59-f6535f12d189";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Scheduled Task Creation";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Administrative activity", "Software installation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /create .*\")
FILTER regex(str(?cmdLine),\"schtasks.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.privilege_escalation",
    "attack.s0111", "attack.t1053", "attack.t1053.005", "car.2013-08-001" .

<http://w3id.org/sepses/resource/sigma/sigma-7fe71fc9-de3b-432a-8d57-8c809efc10ab>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Detects creation of a new service";
  <http://purl.org/dc/terms/id> "7fe71fc9-de3b-432a-8d57-8c809efc10ab";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "New Service Creation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator or user creates a service for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"new-service\")
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1050/T1050.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1050",
    "attack.t1543.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Detects creation of a new service";
  <http://purl.org/dc/terms/id> "7fe71fc9-de3b-432a-8d57-8c809efc10ab";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "New Service Creation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator or user creates a service for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"new-service\")
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1050/T1050.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1050",
    "attack.t1543.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Detects creation of a new service";
  <http://purl.org/dc/terms/id> "7fe71fc9-de3b-432a-8d57-8c809efc10ab";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "New Service Creation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator or user creates a service for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"new-service\")
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1050/T1050.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1050",
    "attack.t1543.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Detects creation of a new service";
  <http://purl.org/dc/terms/id> "7fe71fc9-de3b-432a-8d57-8c809efc10ab";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "New Service Creation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator or user creates a service for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"new-service\")
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1050/T1050.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1050",
    "attack.t1543.003" .

<http://w3id.org/sepses/resource/sigma/sigma-7b544661-69fc-419f-9a59-82ccc328f205>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/18";
  <http://purl.org/dc/terms/creator> "Markus Neis, Swisscom";
  <http://purl.org/dc/terms/description> "Detects Registry modifcations performaed by Ke3chang malware in campaigns running in 2019 and 2020";
  <http://purl.org/dc/terms/id> "7b544661-69fc-419f-9a59-82ccc328f205";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Ke3chang Registry Key Modifications";
  sigma:detectionCondition "selection1";
  sigma:falsePositive "Will need to be looked for combinations of those processes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"-Property DWORD -name DisableFirstRunCustomize -value 2 -Force\")
|| regex(str(?cmdLine),\"-Property String -name Check_Associations -value\")
|| regex(str(?cmdLine),\"-Property DWORD -name IEHarden -value 0 -Force\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/operation-ke3chang-resurfaces-with-new-tidepool-malware/",
    "https://www.verfassungsschutz.de/embed/broschuere-2020-06-bfv-cyber-brief-2020-01.pdf";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1089", "attack.t1562.001",
    "attack.g0004";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/18";
  <http://purl.org/dc/terms/creator> "Markus Neis, Swisscom";
  <http://purl.org/dc/terms/description> "Detects Registry modifcations performaed by Ke3chang malware in campaigns running in 2019 and 2020";
  <http://purl.org/dc/terms/id> "7b544661-69fc-419f-9a59-82ccc328f205";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Ke3chang Registry Key Modifications";
  sigma:detectionCondition "selection1";
  sigma:falsePositive "Will need to be looked for combinations of those processes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"-Property DWORD -name DisableFirstRunCustomize -value 2 -Force\")
|| regex(str(?cmdLine),\"-Property String -name Check_Associations -value\")
|| regex(str(?cmdLine),\"-Property DWORD -name IEHarden -value 0 -Force\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/operation-ke3chang-resurfaces-with-new-tidepool-malware/",
    "https://www.verfassungsschutz.de/embed/broschuere-2020-06-bfv-cyber-brief-2020-01.pdf";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1089", "attack.t1562.001",
    "attack.g0004";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/18";
  <http://purl.org/dc/terms/creator> "Markus Neis, Swisscom";
  <http://purl.org/dc/terms/description> "Detects Registry modifcations performaed by Ke3chang malware in campaigns running in 2019 and 2020";
  <http://purl.org/dc/terms/id> "7b544661-69fc-419f-9a59-82ccc328f205";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Ke3chang Registry Key Modifications";
  sigma:detectionCondition "selection1";
  sigma:falsePositive "Will need to be looked for combinations of those processes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"-Property DWORD -name DisableFirstRunCustomize -value 2 -Force\")
|| regex(str(?cmdLine),\"-Property String -name Check_Associations -value\")
|| regex(str(?cmdLine),\"-Property DWORD -name IEHarden -value 0 -Force\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/operation-ke3chang-resurfaces-with-new-tidepool-malware/",
    "https://www.verfassungsschutz.de/embed/broschuere-2020-06-bfv-cyber-brief-2020-01.pdf";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1089", "attack.t1562.001",
    "attack.g0004";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/18";
  <http://purl.org/dc/terms/creator> "Markus Neis, Swisscom";
  <http://purl.org/dc/terms/description> "Detects Registry modifcations performaed by Ke3chang malware in campaigns running in 2019 and 2020";
  <http://purl.org/dc/terms/id> "7b544661-69fc-419f-9a59-82ccc328f205";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Ke3chang Registry Key Modifications";
  sigma:detectionCondition "selection1";
  sigma:falsePositive "Will need to be looked for combinations of those processes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"-Property DWORD -name DisableFirstRunCustomize -value 2 -Force\")
|| regex(str(?cmdLine),\"-Property String -name Check_Associations -value\")
|| regex(str(?cmdLine),\"-Property DWORD -name IEHarden -value 0 -Force\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/operation-ke3chang-resurfaces-with-new-tidepool-malware/",
    "https://www.verfassungsschutz.de/embed/broschuere-2020-06-bfv-cyber-brief-2020-01.pdf";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1089", "attack.t1562.001",
    "attack.g0004" .

<http://w3id.org/sepses/resource/sigma/sigma-fdb62a13-9a81-4e5c-a38f-ea93a16f6d7c>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/08/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a base64 encoded FromBase64String keyword in a process command line";
  <http://purl.org/dc/terms/id> "fdb62a13-9a81-4e5c-a38f-ea93a16f6d7c";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Encoded FromBase64String";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"::FromBase64String\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1140";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/08/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a base64 encoded FromBase64String keyword in a process command line";
  <http://purl.org/dc/terms/id> "fdb62a13-9a81-4e5c-a38f-ea93a16f6d7c";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Encoded FromBase64String";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"::FromBase64String\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1140";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/08/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a base64 encoded FromBase64String keyword in a process command line";
  <http://purl.org/dc/terms/id> "fdb62a13-9a81-4e5c-a38f-ea93a16f6d7c";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Encoded FromBase64String";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"::FromBase64String\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1140";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/08/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a base64 encoded FromBase64String keyword in a process command line";
  <http://purl.org/dc/terms/id> "fdb62a13-9a81-4e5c-a38f-ea93a16f6d7c";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Encoded FromBase64String";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"::FromBase64String\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1140";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/08/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a base64 encoded FromBase64String keyword in a process command line";
  <http://purl.org/dc/terms/id> "fdb62a13-9a81-4e5c-a38f-ea93a16f6d7c";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Encoded FromBase64String";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"::FromBase64String\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1140" .

<http://w3id.org/sepses/resource/sigma/sigma-45a594aa-1fbd-4972-a809-ff5a99dd81b8>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/30";
  <http://purl.org/dc/terms/creator> "Sergey Soldatov, Kaspersky Lab, oscd.community";
  <http://purl.org/dc/terms/description> "Detects PowerShell script execution from Alternate Data Stream (ADS)";
  <http://purl.org/dc/terms/id> "45a594aa-1fbd-4972-a809-ff5a99dd81b8";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Run PowerShell Script from ADS";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"Get-Content\")
|| regex(str(?cmdLine),\"-Stream\")
)
FILTER regex(str(?ParentImage),\"\\\\powershell.exe\")
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/p0shkatz/Get-ADS/blob/master/Get-ADS.ps1";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1096", "attack.t1564.004";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/30";
  <http://purl.org/dc/terms/creator> "Sergey Soldatov, Kaspersky Lab, oscd.community";
  <http://purl.org/dc/terms/description> "Detects PowerShell script execution from Alternate Data Stream (ADS)";
  <http://purl.org/dc/terms/id> "45a594aa-1fbd-4972-a809-ff5a99dd81b8";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Run PowerShell Script from ADS";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"Get-Content\")
|| regex(str(?cmdLine),\"-Stream\")
)
FILTER regex(str(?ParentImage),\"\\\\powershell.exe\")
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/p0shkatz/Get-ADS/blob/master/Get-ADS.ps1";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1096", "attack.t1564.004";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/30";
  <http://purl.org/dc/terms/creator> "Sergey Soldatov, Kaspersky Lab, oscd.community";
  <http://purl.org/dc/terms/description> "Detects PowerShell script execution from Alternate Data Stream (ADS)";
  <http://purl.org/dc/terms/id> "45a594aa-1fbd-4972-a809-ff5a99dd81b8";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Run PowerShell Script from ADS";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"Get-Content\")
|| regex(str(?cmdLine),\"-Stream\")
)
FILTER regex(str(?ParentImage),\"\\\\powershell.exe\")
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/p0shkatz/Get-ADS/blob/master/Get-ADS.ps1";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1096", "attack.t1564.004" .

<http://w3id.org/sepses/resource/sigma/sigma-2afafd61-6aae-4df4-baed-139fa1f4c345>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)";
  <http://purl.org/dc/terms/id> "2afafd61-6aae-4df4-baed-139fa1f4c345";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)";
  sigma:detectionCondition "selection";
  sigma:falsePositive "NTDS maintenance";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"ntdsutil.*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://jpcertcc.github.io/ToolAnalysisResultSheet/details/ntdsutil.htm";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)";
  <http://purl.org/dc/terms/id> "2afafd61-6aae-4df4-baed-139fa1f4c345";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)";
  sigma:detectionCondition "selection";
  sigma:falsePositive "NTDS maintenance";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"ntdsutil.*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://jpcertcc.github.io/ToolAnalysisResultSheet/details/ntdsutil.htm";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)";
  <http://purl.org/dc/terms/id> "2afafd61-6aae-4df4-baed-139fa1f4c345";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)";
  sigma:detectionCondition "selection";
  sigma:falsePositive "NTDS maintenance";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"ntdsutil.*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://jpcertcc.github.io/ToolAnalysisResultSheet/details/ntdsutil.htm";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.003" .

<http://w3id.org/sepses/resource/sigma/sigma-58bf96d9-ff5f-44bd-8dcc-1c4f79bf3a27>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/11/26";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Trickbot malware process tree pattern in which rundll32.exe is parent of wermgr.exe";
  <http://purl.org/dc/terms/id> "58bf96d9-ff5f-44bd-8dcc-1c4f79bf3a27";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Trickbot Malware Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentcmdLine),\"DllRegisterServer\")
)
FILTER (regex(str(?ParentImage),\"\\\\rundll32.exe\")
)
FILTER (regex(str(?cmdLine),\"\\\\wermgr.exe\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/f74c5157-8508-4ac6-9805-d63fe7b0d399/",
    "https://twitter.com/swisscom_csirt/status/1331634525722521602?s=20";
  rule:hasDetectedRule "attack.execution" .

<http://w3id.org/sepses/resource/sigma/sigma-37ae075c-271b-459b-8d7b-55ad5f993dd8>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/23";
  <http://purl.org/dc/terms/creator> "Jakob Weinzettl, oscd.community";
  <http://purl.org/dc/terms/description> "Detects a file or folder permissions modifications";
  <http://purl.org/dc/terms/id> "37ae075c-271b-459b-8d7b-55ad5f993dd8";
  <http://purl.org/dc/terms/modified> "2019/11/08";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "File or Folder Permissions Modifications";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Users interacting with the files on their own (unlikely unless power users)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"-r\")
FILTER regex(str(?cmdLine),\"\\\\attrib.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1222/T1222.yaml";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1222";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/23";
  <http://purl.org/dc/terms/creator> "Jakob Weinzettl, oscd.community";
  <http://purl.org/dc/terms/description> "Detects a file or folder permissions modifications";
  <http://purl.org/dc/terms/id> "37ae075c-271b-459b-8d7b-55ad5f993dd8";
  <http://purl.org/dc/terms/modified> "2019/11/08";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "File or Folder Permissions Modifications";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Users interacting with the files on their own (unlikely unless power users)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"-r\")
FILTER regex(str(?cmdLine),\"\\\\attrib.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1222/T1222.yaml";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1222" .

<http://w3id.org/sepses/resource/sigma/sigma-2d117e49-e626-4c7c-bd1f-c3c0147774c8>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/11/17";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Base64 encoded Shellcode";
  <http://purl.org/dc/terms/id> "2d117e49-e626-4c7c-bd1f-c3c0147774c8";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Base64 Encoded Shellcode";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*OiCAAAAYInlM.*\")
|| regex(str(?cmdLine),\".*OiJAAAAYInlM.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/cyb3rops/status/1063072865992523776";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/11/17";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Base64 encoded Shellcode";
  <http://purl.org/dc/terms/id> "2d117e49-e626-4c7c-bd1f-c3c0147774c8";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Base64 Encoded Shellcode";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*OiCAAAAYInlM.*\")
|| regex(str(?cmdLine),\".*OiJAAAAYInlM.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/cyb3rops/status/1063072865992523776";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1027" .

<http://w3id.org/sepses/resource/sigma/sigma-c9192ad9-75e5-43eb-8647-82a0a5b493e3>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/08/13";
  <http://purl.org/dc/terms/creator> "Cian Heasley";
  <http://purl.org/dc/terms/description> "In Kaspersky's 2020 Incident Response Analyst Report they listed legitimate tool \"Mouse Lock\" as being used for both credential access and collection in security incidents.";
  <http://purl.org/dc/terms/id> "c9192ad9-75e5-43eb-8647-82a0a5b493e3";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Mouse Lock Credential Gathering";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate uses of Mouse Lock software";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"Mouse Lock_\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/klsecservices/Publications/blob/master/Incident-Response-Analyst-Report-2020.pdf",
    "https://sourceforge.net/projects/mouselock/";
  rule:hasDetectedRule "attack.credential_access", "attack.collection", "attack.t1056.002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/08/13";
  <http://purl.org/dc/terms/creator> "Cian Heasley";
  <http://purl.org/dc/terms/description> "In Kaspersky's 2020 Incident Response Analyst Report they listed legitimate tool \"Mouse Lock\" as being used for both credential access and collection in security incidents.";
  <http://purl.org/dc/terms/id> "c9192ad9-75e5-43eb-8647-82a0a5b493e3";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Mouse Lock Credential Gathering";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate uses of Mouse Lock software";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"Mouse Lock_\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/klsecservices/Publications/blob/master/Incident-Response-Analyst-Report-2020.pdf",
    "https://sourceforge.net/projects/mouselock/";
  rule:hasDetectedRule "attack.credential_access", "attack.collection", "attack.t1056.002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/08/13";
  <http://purl.org/dc/terms/creator> "Cian Heasley";
  <http://purl.org/dc/terms/description> "In Kaspersky's 2020 Incident Response Analyst Report they listed legitimate tool \"Mouse Lock\" as being used for both credential access and collection in security incidents.";
  <http://purl.org/dc/terms/id> "c9192ad9-75e5-43eb-8647-82a0a5b493e3";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Mouse Lock Credential Gathering";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate uses of Mouse Lock software";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"Mouse Lock_\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/klsecservices/Publications/blob/master/Incident-Response-Analyst-Report-2020.pdf",
    "https://sourceforge.net/projects/mouselock/";
  rule:hasDetectedRule "attack.credential_access", "attack.collection", "attack.t1056.002" .

<http://w3id.org/sepses/resource/sigma/sigma-d95de845-b83c-4a9a-8a6a-4fc802ebf6c0>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, omkar72";
  <http://purl.org/dc/terms/description> "Detects suspicious command line activity on Windows systems";
  <http://purl.org/dc/terms/id> "d95de845-b83c-4a9a-8a6a-4fc802ebf6c0";
  <http://purl.org/dc/terms/modified> "2020/10/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Reconnaissance Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity", "Inventory tool runs", "Penetration tests";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"net group \\\"domain admins\\\" /domain\")
|| regex(str(?cmdLine),\"net localgroup administrators\")
|| regex(str(?cmdLine),\"net group \\\"enterprise admins\\\" /domain\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://redcanary.com/blog/how-one-hospital-thwarted-a-ryuk-ransomware-outbreak/",
    "https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/";
  rule:hasDetectedRule "attack.discovery", "attack.t1087", "attack.t1087.001", "attack.t1087.002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, omkar72";
  <http://purl.org/dc/terms/description> "Detects suspicious command line activity on Windows systems";
  <http://purl.org/dc/terms/id> "d95de845-b83c-4a9a-8a6a-4fc802ebf6c0";
  <http://purl.org/dc/terms/modified> "2020/10/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Reconnaissance Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity", "Inventory tool runs", "Penetration tests";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"net group \\\"domain admins\\\" /domain\")
|| regex(str(?cmdLine),\"net localgroup administrators\")
|| regex(str(?cmdLine),\"net group \\\"enterprise admins\\\" /domain\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://redcanary.com/blog/how-one-hospital-thwarted-a-ryuk-ransomware-outbreak/",
    "https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/";
  rule:hasDetectedRule "attack.discovery", "attack.t1087", "attack.t1087.001", "attack.t1087.002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, omkar72";
  <http://purl.org/dc/terms/description> "Detects suspicious command line activity on Windows systems";
  <http://purl.org/dc/terms/id> "d95de845-b83c-4a9a-8a6a-4fc802ebf6c0";
  <http://purl.org/dc/terms/modified> "2020/10/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Reconnaissance Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity", "Inventory tool runs", "Penetration tests";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"net group \\\"domain admins\\\" /domain\")
|| regex(str(?cmdLine),\"net localgroup administrators\")
|| regex(str(?cmdLine),\"net group \\\"enterprise admins\\\" /domain\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://redcanary.com/blog/how-one-hospital-thwarted-a-ryuk-ransomware-outbreak/",
    "https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/";
  rule:hasDetectedRule "attack.discovery", "attack.t1087", "attack.t1087.001", "attack.t1087.002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, omkar72";
  <http://purl.org/dc/terms/description> "Detects suspicious command line activity on Windows systems";
  <http://purl.org/dc/terms/id> "d95de845-b83c-4a9a-8a6a-4fc802ebf6c0";
  <http://purl.org/dc/terms/modified> "2020/10/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Reconnaissance Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity", "Inventory tool runs", "Penetration tests";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"net group \\\"domain admins\\\" /domain\")
|| regex(str(?cmdLine),\"net localgroup administrators\")
|| regex(str(?cmdLine),\"net group \\\"enterprise admins\\\" /domain\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://redcanary.com/blog/how-one-hospital-thwarted-a-ryuk-ransomware-outbreak/",
    "https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/";
  rule:hasDetectedRule "attack.discovery", "attack.t1087", "attack.t1087.001", "attack.t1087.002" .

<http://w3id.org/sepses/resource/sigma/sigma-033fe7d6-66d1-4240-ac6b-28908009c71f>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/12/04";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "This method detects a suspicious powershell command line combination as used by APT29 in a campaign against US think tanks";
  <http://purl.org/dc/terms/id> "033fe7d6-66d1-4240-ac6b-28908009c71f";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/title> "APT29";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*-noni -ep bypass $.*\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://cloudblogs.microsoft.com/microsoftsecure/2018/12/03/analysis-of-cyberattack-on-u-s-think-tanks-non-profits-public-sector-by-unidentified-attackers/";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.g0016",
    "attack.t1059";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/12/04";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "This method detects a suspicious powershell command line combination as used by APT29 in a campaign against US think tanks";
  <http://purl.org/dc/terms/id> "033fe7d6-66d1-4240-ac6b-28908009c71f";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/title> "APT29";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*-noni -ep bypass $.*\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://cloudblogs.microsoft.com/microsoftsecure/2018/12/03/analysis-of-cyberattack-on-u-s-think-tanks-non-profits-public-sector-by-unidentified-attackers/";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.g0016",
    "attack.t1059";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/12/04";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "This method detects a suspicious powershell command line combination as used by APT29 in a campaign against US think tanks";
  <http://purl.org/dc/terms/id> "033fe7d6-66d1-4240-ac6b-28908009c71f";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/title> "APT29";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*-noni -ep bypass $.*\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://cloudblogs.microsoft.com/microsoftsecure/2018/12/03/analysis-of-cyberattack-on-u-s-think-tanks-non-profits-public-sector-by-unidentified-attackers/";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.g0016",
    "attack.t1059";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/12/04";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "This method detects a suspicious powershell command line combination as used by APT29 in a campaign against US think tanks";
  <http://purl.org/dc/terms/id> "033fe7d6-66d1-4240-ac6b-28908009c71f";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/title> "APT29";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*-noni -ep bypass $.*\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://cloudblogs.microsoft.com/microsoftsecure/2018/12/03/analysis-of-cyberattack-on-u-s-think-tanks-non-profits-public-sector-by-unidentified-attackers/";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.g0016",
    "attack.t1059";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/12/04";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "This method detects a suspicious powershell command line combination as used by APT29 in a campaign against US think tanks";
  <http://purl.org/dc/terms/id> "033fe7d6-66d1-4240-ac6b-28908009c71f";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/title> "APT29";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*-noni -ep bypass $.*\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://cloudblogs.microsoft.com/microsoftsecure/2018/12/03/analysis-of-cyberattack-on-u-s-think-tanks-non-profits-public-sector-by-unidentified-attackers/";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.g0016",
    "attack.t1059" .

<http://w3id.org/sepses/resource/sigma/sigma-6812a10b-60ea-420c-832f-dfcc33b646ba>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/08/25";
  <http://purl.org/dc/terms/creator> "Markus Neis";
  <http://purl.org/dc/terms/description> "Detects PowerShell Strings applied to rundll as seen in PowerShdll.dll";
  <http://purl.org/dc/terms/id> "6812a10b-60ea-420c-832f-dfcc33b646ba";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Detection of PowerShell Execution via DLL";
  sigma:detectionCondition "(selection1 or selection2) and selection3";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*Default.GetString.*\")
|| regex(str(?cmdLine),\".*FromBase64String.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/p3nt4/PowerShdll/blob/master/README.md";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1085", "attack.t1218.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/08/25";
  <http://purl.org/dc/terms/creator> "Markus Neis";
  <http://purl.org/dc/terms/description> "Detects PowerShell Strings applied to rundll as seen in PowerShdll.dll";
  <http://purl.org/dc/terms/id> "6812a10b-60ea-420c-832f-dfcc33b646ba";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Detection of PowerShell Execution via DLL";
  sigma:detectionCondition "(selection1 or selection2) and selection3";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*Default.GetString.*\")
|| regex(str(?cmdLine),\".*FromBase64String.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/p3nt4/PowerShdll/blob/master/README.md";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1085", "attack.t1218.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/08/25";
  <http://purl.org/dc/terms/creator> "Markus Neis";
  <http://purl.org/dc/terms/description> "Detects PowerShell Strings applied to rundll as seen in PowerShdll.dll";
  <http://purl.org/dc/terms/id> "6812a10b-60ea-420c-832f-dfcc33b646ba";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Detection of PowerShell Execution via DLL";
  sigma:detectionCondition "(selection1 or selection2) and selection3";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*Default.GetString.*\")
|| regex(str(?cmdLine),\".*FromBase64String.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/p3nt4/PowerShdll/blob/master/README.md";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1085", "attack.t1218.011" .

<http://w3id.org/sepses/resource/sigma/sigma-7ec2c172-dceb-4c10-92c9-87c1881b7e18>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/12/19";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects command line parameters used by Rubeus hack tool";
  <http://purl.org/dc/terms/id> "7ec2c172-dceb-4c10-92c9-87c1881b7e18";
  <http://purl.org/dc/terms/title> "Rubeus Hack Tool";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* asreproast .*\")
|| regex(str(?cmdLine),\".* dump /service:krbtgt .*\")
|| regex(str(?cmdLine),\".* kerberoast .*\")
|| regex(str(?cmdLine),\".* createnetonly /program:.*\")
|| regex(str(?cmdLine),\".* ptt /ticket:.*\")
|| regex(str(?cmdLine),\".* /impersonateuser:.*\")
|| regex(str(?cmdLine),\".* renew /ticket:.*\")
|| regex(str(?cmdLine),\".* asktgt /user:.*\")
|| regex(str(?cmdLine),\".* harvest /interval:.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.harmj0y.net/blog/redteaming/from-kekeo-to-rubeus/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.lateral_movement",
    "attack.t1097", "attack.t1550.003", "attack.t1558", "attack.t1558.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/12/19";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects command line parameters used by Rubeus hack tool";
  <http://purl.org/dc/terms/id> "7ec2c172-dceb-4c10-92c9-87c1881b7e18";
  <http://purl.org/dc/terms/title> "Rubeus Hack Tool";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* asreproast .*\")
|| regex(str(?cmdLine),\".* dump /service:krbtgt .*\")
|| regex(str(?cmdLine),\".* kerberoast .*\")
|| regex(str(?cmdLine),\".* createnetonly /program:.*\")
|| regex(str(?cmdLine),\".* ptt /ticket:.*\")
|| regex(str(?cmdLine),\".* /impersonateuser:.*\")
|| regex(str(?cmdLine),\".* renew /ticket:.*\")
|| regex(str(?cmdLine),\".* asktgt /user:.*\")
|| regex(str(?cmdLine),\".* harvest /interval:.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.harmj0y.net/blog/redteaming/from-kekeo-to-rubeus/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.lateral_movement",
    "attack.t1097", "attack.t1550.003", "attack.t1558", "attack.t1558.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/12/19";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects command line parameters used by Rubeus hack tool";
  <http://purl.org/dc/terms/id> "7ec2c172-dceb-4c10-92c9-87c1881b7e18";
  <http://purl.org/dc/terms/title> "Rubeus Hack Tool";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* asreproast .*\")
|| regex(str(?cmdLine),\".* dump /service:krbtgt .*\")
|| regex(str(?cmdLine),\".* kerberoast .*\")
|| regex(str(?cmdLine),\".* createnetonly /program:.*\")
|| regex(str(?cmdLine),\".* ptt /ticket:.*\")
|| regex(str(?cmdLine),\".* /impersonateuser:.*\")
|| regex(str(?cmdLine),\".* renew /ticket:.*\")
|| regex(str(?cmdLine),\".* asktgt /user:.*\")
|| regex(str(?cmdLine),\".* harvest /interval:.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.harmj0y.net/blog/redteaming/from-kekeo-to-rubeus/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.lateral_movement",
    "attack.t1097", "attack.t1550.003", "attack.t1558", "attack.t1558.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/12/19";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects command line parameters used by Rubeus hack tool";
  <http://purl.org/dc/terms/id> "7ec2c172-dceb-4c10-92c9-87c1881b7e18";
  <http://purl.org/dc/terms/title> "Rubeus Hack Tool";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* asreproast .*\")
|| regex(str(?cmdLine),\".* dump /service:krbtgt .*\")
|| regex(str(?cmdLine),\".* kerberoast .*\")
|| regex(str(?cmdLine),\".* createnetonly /program:.*\")
|| regex(str(?cmdLine),\".* ptt /ticket:.*\")
|| regex(str(?cmdLine),\".* /impersonateuser:.*\")
|| regex(str(?cmdLine),\".* renew /ticket:.*\")
|| regex(str(?cmdLine),\".* asktgt /user:.*\")
|| regex(str(?cmdLine),\".* harvest /interval:.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.harmj0y.net/blog/redteaming/from-kekeo-to-rubeus/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.lateral_movement",
    "attack.t1097", "attack.t1550.003", "attack.t1558", "attack.t1558.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/12/19";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects command line parameters used by Rubeus hack tool";
  <http://purl.org/dc/terms/id> "7ec2c172-dceb-4c10-92c9-87c1881b7e18";
  <http://purl.org/dc/terms/title> "Rubeus Hack Tool";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* asreproast .*\")
|| regex(str(?cmdLine),\".* dump /service:krbtgt .*\")
|| regex(str(?cmdLine),\".* kerberoast .*\")
|| regex(str(?cmdLine),\".* createnetonly /program:.*\")
|| regex(str(?cmdLine),\".* ptt /ticket:.*\")
|| regex(str(?cmdLine),\".* /impersonateuser:.*\")
|| regex(str(?cmdLine),\".* renew /ticket:.*\")
|| regex(str(?cmdLine),\".* asktgt /user:.*\")
|| regex(str(?cmdLine),\".* harvest /interval:.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.harmj0y.net/blog/redteaming/from-kekeo-to-rubeus/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.lateral_movement",
    "attack.t1097", "attack.t1550.003", "attack.t1558", "attack.t1558.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/12/19";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects command line parameters used by Rubeus hack tool";
  <http://purl.org/dc/terms/id> "7ec2c172-dceb-4c10-92c9-87c1881b7e18";
  <http://purl.org/dc/terms/title> "Rubeus Hack Tool";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* asreproast .*\")
|| regex(str(?cmdLine),\".* dump /service:krbtgt .*\")
|| regex(str(?cmdLine),\".* kerberoast .*\")
|| regex(str(?cmdLine),\".* createnetonly /program:.*\")
|| regex(str(?cmdLine),\".* ptt /ticket:.*\")
|| regex(str(?cmdLine),\".* /impersonateuser:.*\")
|| regex(str(?cmdLine),\".* renew /ticket:.*\")
|| regex(str(?cmdLine),\".* asktgt /user:.*\")
|| regex(str(?cmdLine),\".* harvest /interval:.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.harmj0y.net/blog/redteaming/from-kekeo-to-rubeus/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.lateral_movement",
    "attack.t1097", "attack.t1550.003", "attack.t1558", "attack.t1558.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/12/19";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects command line parameters used by Rubeus hack tool";
  <http://purl.org/dc/terms/id> "7ec2c172-dceb-4c10-92c9-87c1881b7e18";
  <http://purl.org/dc/terms/title> "Rubeus Hack Tool";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* asreproast .*\")
|| regex(str(?cmdLine),\".* dump /service:krbtgt .*\")
|| regex(str(?cmdLine),\".* kerberoast .*\")
|| regex(str(?cmdLine),\".* createnetonly /program:.*\")
|| regex(str(?cmdLine),\".* ptt /ticket:.*\")
|| regex(str(?cmdLine),\".* /impersonateuser:.*\")
|| regex(str(?cmdLine),\".* renew /ticket:.*\")
|| regex(str(?cmdLine),\".* asktgt /user:.*\")
|| regex(str(?cmdLine),\".* harvest /interval:.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.harmj0y.net/blog/redteaming/from-kekeo-to-rubeus/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.lateral_movement",
    "attack.t1097", "attack.t1550.003", "attack.t1558", "attack.t1558.003" .

<http://w3id.org/sepses/resource/sigma/sigma-932fb0d8-692b-4b0f-a26e-5643a50fe7d6>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Detects audio capture via PowerShell Cmdlet";
  <http://purl.org/dc/terms/id> "932fb0d8-692b-4b0f-a26e-5643a50fe7d6";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Audio Capture via PowerShell";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate audio capture by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"WindowsAudioDevice-Powershell-Cmdlet\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/ab7a6ef4-0983-4275-a4f1-5c6bd3c31c23.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1123/T1123.yaml";
  rule:hasDetectedRule "attack.collection", "attack.t1123";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Detects audio capture via PowerShell Cmdlet";
  <http://purl.org/dc/terms/id> "932fb0d8-692b-4b0f-a26e-5643a50fe7d6";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Audio Capture via PowerShell";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate audio capture by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"WindowsAudioDevice-Powershell-Cmdlet\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/ab7a6ef4-0983-4275-a4f1-5c6bd3c31c23.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1123/T1123.yaml";
  rule:hasDetectedRule "attack.collection", "attack.t1123" .

<http://w3id.org/sepses/resource/sigma/sigma-058f4380-962d-40a5-afce-50207d36d7e2>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/22";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "Detect various execution methods of the CrackMapExec pentesting framework";
  <http://purl.org/dc/terms/id> "058f4380-962d-40a5-afce-50207d36d7e2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "CrackMapExec Command Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*cmd.exe /Q /c .* 1> \\\\\\\\\\\\\\\\\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*cmd.exe /C .* > \\\\\\\\\\\\\\\\\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*cmd.exe /C .* > \\\\Temp\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*powershell.exe -exec bypass -noni -nop -w 1 -C \\\".*\")
|| regex(str(?cmdLine),\".*powershell.exe -noni -nop -w 1 -enc .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/byt3bl33d3r/CrackMapExec";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1053",
    "attack.t1047", "attack.s0106", "attack.t1059.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/22";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "Detect various execution methods of the CrackMapExec pentesting framework";
  <http://purl.org/dc/terms/id> "058f4380-962d-40a5-afce-50207d36d7e2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "CrackMapExec Command Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*cmd.exe /Q /c .* 1> \\\\\\\\\\\\\\\\\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*cmd.exe /C .* > \\\\\\\\\\\\\\\\\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*cmd.exe /C .* > \\\\Temp\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*powershell.exe -exec bypass -noni -nop -w 1 -C \\\".*\")
|| regex(str(?cmdLine),\".*powershell.exe -noni -nop -w 1 -enc .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/byt3bl33d3r/CrackMapExec";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1053",
    "attack.t1047", "attack.s0106", "attack.t1059.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/22";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "Detect various execution methods of the CrackMapExec pentesting framework";
  <http://purl.org/dc/terms/id> "058f4380-962d-40a5-afce-50207d36d7e2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "CrackMapExec Command Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*cmd.exe /Q /c .* 1> \\\\\\\\\\\\\\\\\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*cmd.exe /C .* > \\\\\\\\\\\\\\\\\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*cmd.exe /C .* > \\\\Temp\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*powershell.exe -exec bypass -noni -nop -w 1 -C \\\".*\")
|| regex(str(?cmdLine),\".*powershell.exe -noni -nop -w 1 -enc .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/byt3bl33d3r/CrackMapExec";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1053",
    "attack.t1047", "attack.s0106", "attack.t1059.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/22";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "Detect various execution methods of the CrackMapExec pentesting framework";
  <http://purl.org/dc/terms/id> "058f4380-962d-40a5-afce-50207d36d7e2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "CrackMapExec Command Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*cmd.exe /Q /c .* 1> \\\\\\\\\\\\\\\\\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*cmd.exe /C .* > \\\\\\\\\\\\\\\\\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*cmd.exe /C .* > \\\\Temp\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*powershell.exe -exec bypass -noni -nop -w 1 -C \\\".*\")
|| regex(str(?cmdLine),\".*powershell.exe -noni -nop -w 1 -enc .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/byt3bl33d3r/CrackMapExec";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1053",
    "attack.t1047", "attack.s0106", "attack.t1059.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/22";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "Detect various execution methods of the CrackMapExec pentesting framework";
  <http://purl.org/dc/terms/id> "058f4380-962d-40a5-afce-50207d36d7e2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "CrackMapExec Command Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*cmd.exe /Q /c .* 1> \\\\\\\\\\\\\\\\\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*cmd.exe /C .* > \\\\\\\\\\\\\\\\\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*cmd.exe /C .* > \\\\Temp\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*powershell.exe -exec bypass -noni -nop -w 1 -C \\\".*\")
|| regex(str(?cmdLine),\".*powershell.exe -noni -nop -w 1 -enc .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/byt3bl33d3r/CrackMapExec";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1053",
    "attack.t1047", "attack.s0106", "attack.t1059.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/22";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "Detect various execution methods of the CrackMapExec pentesting framework";
  <http://purl.org/dc/terms/id> "058f4380-962d-40a5-afce-50207d36d7e2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "CrackMapExec Command Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*cmd.exe /Q /c .* 1> \\\\\\\\\\\\\\\\\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*cmd.exe /C .* > \\\\\\\\\\\\\\\\\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*cmd.exe /C .* > \\\\Temp\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*powershell.exe -exec bypass -noni -nop -w 1 -C \\\".*\")
|| regex(str(?cmdLine),\".*powershell.exe -noni -nop -w 1 -enc .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/byt3bl33d3r/CrackMapExec";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1053",
    "attack.t1047", "attack.s0106", "attack.t1059.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/22";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "Detect various execution methods of the CrackMapExec pentesting framework";
  <http://purl.org/dc/terms/id> "058f4380-962d-40a5-afce-50207d36d7e2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "CrackMapExec Command Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*cmd.exe /Q /c .* 1> \\\\\\\\\\\\\\\\\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*cmd.exe /C .* > \\\\\\\\\\\\\\\\\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*cmd.exe /C .* > \\\\Temp\\\\ 2>&1\")
|| regex(str(?cmdLine),\".*powershell.exe -exec bypass -noni -nop -w 1 -C \\\".*\")
|| regex(str(?cmdLine),\".*powershell.exe -noni -nop -w 1 -enc .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/byt3bl33d3r/CrackMapExec";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1053",
    "attack.t1047", "attack.s0106", "attack.t1059.003" .

<http://w3id.org/sepses/resource/sigma/sigma-ae215552-081e-44c7-805f-be16f975c8a2>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/06";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).";
  <http://purl.org/dc/terms/id> "ae215552-081e-44c7-805f-be16f975c8a2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Debugger Registration Cmdline";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Penetration Tests";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\sethc.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\utilman.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\osk.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\magnify.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\narrator.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\displayswitch.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\atbroker.exe.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.technet.microsoft.com/jonathantrull/2016/10/03/detecting-sticky-key-backdoors/";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1015",
    "attack.t1546.008";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/06";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).";
  <http://purl.org/dc/terms/id> "ae215552-081e-44c7-805f-be16f975c8a2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Debugger Registration Cmdline";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Penetration Tests";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\sethc.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\utilman.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\osk.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\magnify.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\narrator.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\displayswitch.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\atbroker.exe.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.technet.microsoft.com/jonathantrull/2016/10/03/detecting-sticky-key-backdoors/";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1015",
    "attack.t1546.008";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/06";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).";
  <http://purl.org/dc/terms/id> "ae215552-081e-44c7-805f-be16f975c8a2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Debugger Registration Cmdline";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Penetration Tests";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\sethc.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\utilman.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\osk.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\magnify.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\narrator.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\displayswitch.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\atbroker.exe.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.technet.microsoft.com/jonathantrull/2016/10/03/detecting-sticky-key-backdoors/";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1015",
    "attack.t1546.008";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/06";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).";
  <http://purl.org/dc/terms/id> "ae215552-081e-44c7-805f-be16f975c8a2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Debugger Registration Cmdline";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Penetration Tests";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\sethc.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\utilman.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\osk.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\magnify.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\narrator.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\displayswitch.exe.*\")
|| regex(str(?cmdLine),\"CurrentVersion\\\\Image File Execution Options\\\\atbroker.exe.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.technet.microsoft.com/jonathantrull/2016/10/03/detecting-sticky-key-backdoors/";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1015",
    "attack.t1546.008" .

<http://w3id.org/sepses/resource/sigma/sigma-f64e5c19-879c-4bae-b471-6d84c8339677>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/22";
  <http://purl.org/dc/terms/creator> "Cian Heasley";
  <http://purl.org/dc/terms/description> "Looking for processes spawned by web server components that indicate reconnaissance by popular public domain webshells for whether perl, python or wget are installed.";
  <http://purl.org/dc/terms/id> "f64e5c19-879c-4bae-b471-6d84c8339677";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Webshell Recon Detection Via CommandLine & Processes";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"apache.*\")
|| regex(str(?ParentImage),\"tomcat.*\")
|| regex(str(?ParentImage),\"w3wp.exe\")
|| regex(str(?ParentImage),\"php-cgi.exe\")
|| regex(str(?ParentImage),\"nginx.exe\")
|| regex(str(?ParentImage),\"httpd.exe\")
)
FILTER (regex(str(?cmdLine),\".*perl --help.*\")
|| regex(str(?cmdLine),\".*python --help.*\")
|| regex(str(?cmdLine),\".*wget --help.*\")
|| regex(str(?cmdLine),\".*perl -h.*\")
)
FILTER (regex(str(?cmdLine),\"cmd.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://ragged-lab.blogspot.com/2020/07/webshells-automating-reconnaissance.html";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1100",
    "attack.t1505.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/22";
  <http://purl.org/dc/terms/creator> "Cian Heasley";
  <http://purl.org/dc/terms/description> "Looking for processes spawned by web server components that indicate reconnaissance by popular public domain webshells for whether perl, python or wget are installed.";
  <http://purl.org/dc/terms/id> "f64e5c19-879c-4bae-b471-6d84c8339677";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Webshell Recon Detection Via CommandLine & Processes";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"apache.*\")
|| regex(str(?ParentImage),\"tomcat.*\")
|| regex(str(?ParentImage),\"w3wp.exe\")
|| regex(str(?ParentImage),\"php-cgi.exe\")
|| regex(str(?ParentImage),\"nginx.exe\")
|| regex(str(?ParentImage),\"httpd.exe\")
)
FILTER (regex(str(?cmdLine),\".*perl --help.*\")
|| regex(str(?cmdLine),\".*python --help.*\")
|| regex(str(?cmdLine),\".*wget --help.*\")
|| regex(str(?cmdLine),\".*perl -h.*\")
)
FILTER (regex(str(?cmdLine),\"cmd.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://ragged-lab.blogspot.com/2020/07/webshells-automating-reconnaissance.html";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1100",
    "attack.t1505.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/22";
  <http://purl.org/dc/terms/creator> "Cian Heasley";
  <http://purl.org/dc/terms/description> "Looking for processes spawned by web server components that indicate reconnaissance by popular public domain webshells for whether perl, python or wget are installed.";
  <http://purl.org/dc/terms/id> "f64e5c19-879c-4bae-b471-6d84c8339677";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Webshell Recon Detection Via CommandLine & Processes";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"apache.*\")
|| regex(str(?ParentImage),\"tomcat.*\")
|| regex(str(?ParentImage),\"w3wp.exe\")
|| regex(str(?ParentImage),\"php-cgi.exe\")
|| regex(str(?ParentImage),\"nginx.exe\")
|| regex(str(?ParentImage),\"httpd.exe\")
)
FILTER (regex(str(?cmdLine),\".*perl --help.*\")
|| regex(str(?cmdLine),\".*python --help.*\")
|| regex(str(?cmdLine),\".*wget --help.*\")
|| regex(str(?cmdLine),\".*perl -h.*\")
)
FILTER (regex(str(?cmdLine),\"cmd.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://ragged-lab.blogspot.com/2020/07/webshells-automating-reconnaissance.html";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1100",
    "attack.t1505.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/22";
  <http://purl.org/dc/terms/creator> "Cian Heasley";
  <http://purl.org/dc/terms/description> "Looking for processes spawned by web server components that indicate reconnaissance by popular public domain webshells for whether perl, python or wget are installed.";
  <http://purl.org/dc/terms/id> "f64e5c19-879c-4bae-b471-6d84c8339677";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Webshell Recon Detection Via CommandLine & Processes";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"apache.*\")
|| regex(str(?ParentImage),\"tomcat.*\")
|| regex(str(?ParentImage),\"w3wp.exe\")
|| regex(str(?ParentImage),\"php-cgi.exe\")
|| regex(str(?ParentImage),\"nginx.exe\")
|| regex(str(?ParentImage),\"httpd.exe\")
)
FILTER (regex(str(?cmdLine),\".*perl --help.*\")
|| regex(str(?cmdLine),\".*python --help.*\")
|| regex(str(?cmdLine),\".*wget --help.*\")
|| regex(str(?cmdLine),\".*perl -h.*\")
)
FILTER (regex(str(?cmdLine),\"cmd.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://ragged-lab.blogspot.com/2020/07/webshells-automating-reconnaissance.html";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1100",
    "attack.t1505.003" .

<http://w3id.org/sepses/resource/sigma/sigma-2b30fa36-3a18-402f-a22d-bf4ce2189f35>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects activity that could be related to Baby Shark malware";
  <http://purl.org/dc/terms/id> "2b30fa36-3a18-402f-a22d-bf4ce2189f35";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Baby Shark Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"reg query \\\"HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Terminal Server Client\\\\Default\\\"\")
|| regex(str(?cmdLine),\"powershell.exe mshta.exe http.*\")
|| regex(str(?cmdLine),\"cmd.exe /c taskkill /im cmd.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/";
  rule:hasDetectedRule "attack.t1218", "attack.discovery", "attack.defense_evasion",
    "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1059", "attack.t1218.005",
    "attack.t1059.003", "attack.t1012", "attack.t1170";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects activity that could be related to Baby Shark malware";
  <http://purl.org/dc/terms/id> "2b30fa36-3a18-402f-a22d-bf4ce2189f35";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Baby Shark Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"reg query \\\"HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Terminal Server Client\\\\Default\\\"\")
|| regex(str(?cmdLine),\"powershell.exe mshta.exe http.*\")
|| regex(str(?cmdLine),\"cmd.exe /c taskkill /im cmd.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/";
  rule:hasDetectedRule "attack.t1218", "attack.discovery", "attack.defense_evasion",
    "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1059", "attack.t1218.005",
    "attack.t1059.003", "attack.t1012", "attack.t1170";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects activity that could be related to Baby Shark malware";
  <http://purl.org/dc/terms/id> "2b30fa36-3a18-402f-a22d-bf4ce2189f35";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Baby Shark Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"reg query \\\"HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Terminal Server Client\\\\Default\\\"\")
|| regex(str(?cmdLine),\"powershell.exe mshta.exe http.*\")
|| regex(str(?cmdLine),\"cmd.exe /c taskkill /im cmd.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/";
  rule:hasDetectedRule "attack.t1218", "attack.discovery", "attack.defense_evasion",
    "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1059", "attack.t1218.005",
    "attack.t1059.003", "attack.t1012", "attack.t1170";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects activity that could be related to Baby Shark malware";
  <http://purl.org/dc/terms/id> "2b30fa36-3a18-402f-a22d-bf4ce2189f35";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Baby Shark Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"reg query \\\"HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Terminal Server Client\\\\Default\\\"\")
|| regex(str(?cmdLine),\"powershell.exe mshta.exe http.*\")
|| regex(str(?cmdLine),\"cmd.exe /c taskkill /im cmd.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/";
  rule:hasDetectedRule "attack.t1218", "attack.discovery", "attack.defense_evasion",
    "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1059", "attack.t1218.005",
    "attack.t1059.003", "attack.t1012", "attack.t1170";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects activity that could be related to Baby Shark malware";
  <http://purl.org/dc/terms/id> "2b30fa36-3a18-402f-a22d-bf4ce2189f35";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Baby Shark Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"reg query \\\"HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Terminal Server Client\\\\Default\\\"\")
|| regex(str(?cmdLine),\"powershell.exe mshta.exe http.*\")
|| regex(str(?cmdLine),\"cmd.exe /c taskkill /im cmd.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/";
  rule:hasDetectedRule "attack.t1218", "attack.discovery", "attack.defense_evasion",
    "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1059", "attack.t1218.005",
    "attack.t1059.003", "attack.t1012", "attack.t1170";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects activity that could be related to Baby Shark malware";
  <http://purl.org/dc/terms/id> "2b30fa36-3a18-402f-a22d-bf4ce2189f35";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Baby Shark Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"reg query \\\"HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Terminal Server Client\\\\Default\\\"\")
|| regex(str(?cmdLine),\"powershell.exe mshta.exe http.*\")
|| regex(str(?cmdLine),\"cmd.exe /c taskkill /im cmd.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/";
  rule:hasDetectedRule "attack.t1218", "attack.discovery", "attack.defense_evasion",
    "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1059", "attack.t1218.005",
    "attack.t1059.003", "attack.t1012", "attack.t1170";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects activity that could be related to Baby Shark malware";
  <http://purl.org/dc/terms/id> "2b30fa36-3a18-402f-a22d-bf4ce2189f35";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Baby Shark Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"reg query \\\"HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Terminal Server Client\\\\Default\\\"\")
|| regex(str(?cmdLine),\"powershell.exe mshta.exe http.*\")
|| regex(str(?cmdLine),\"cmd.exe /c taskkill /im cmd.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/";
  rule:hasDetectedRule "attack.t1218", "attack.discovery", "attack.defense_evasion",
    "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1059", "attack.t1218.005",
    "attack.t1059.003", "attack.t1012", "attack.t1170";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects activity that could be related to Baby Shark malware";
  <http://purl.org/dc/terms/id> "2b30fa36-3a18-402f-a22d-bf4ce2189f35";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Baby Shark Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"reg query \\\"HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Terminal Server Client\\\\Default\\\"\")
|| regex(str(?cmdLine),\"powershell.exe mshta.exe http.*\")
|| regex(str(?cmdLine),\"cmd.exe /c taskkill /im cmd.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/";
  rule:hasDetectedRule "attack.t1218", "attack.discovery", "attack.defense_evasion",
    "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1059", "attack.t1218.005",
    "attack.t1059.003", "attack.t1012", "attack.t1170";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects activity that could be related to Baby Shark malware";
  <http://purl.org/dc/terms/id> "2b30fa36-3a18-402f-a22d-bf4ce2189f35";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Baby Shark Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"reg query \\\"HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Terminal Server Client\\\\Default\\\"\")
|| regex(str(?cmdLine),\"powershell.exe mshta.exe http.*\")
|| regex(str(?cmdLine),\"cmd.exe /c taskkill /im cmd.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/";
  rule:hasDetectedRule "attack.t1218", "attack.discovery", "attack.defense_evasion",
    "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1059", "attack.t1218.005",
    "attack.t1059.003", "attack.t1012", "attack.t1170";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects activity that could be related to Baby Shark malware";
  <http://purl.org/dc/terms/id> "2b30fa36-3a18-402f-a22d-bf4ce2189f35";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Baby Shark Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"reg query \\\"HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Terminal Server Client\\\\Default\\\"\")
|| regex(str(?cmdLine),\"powershell.exe mshta.exe http.*\")
|| regex(str(?cmdLine),\"cmd.exe /c taskkill /im cmd.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/";
  rule:hasDetectedRule "attack.t1218", "attack.discovery", "attack.defense_evasion",
    "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1059", "attack.t1218.005",
    "attack.t1059.003", "attack.t1012", "attack.t1170";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects activity that could be related to Baby Shark malware";
  <http://purl.org/dc/terms/id> "2b30fa36-3a18-402f-a22d-bf4ce2189f35";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Baby Shark Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"reg query \\\"HKEY_CURRENT_USER\\\\Software\\\\Microsoft\\\\Terminal Server Client\\\\Default\\\"\")
|| regex(str(?cmdLine),\"powershell.exe mshta.exe http.*\")
|| regex(str(?cmdLine),\"cmd.exe /c taskkill /im cmd.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/";
  rule:hasDetectedRule "attack.t1218", "attack.discovery", "attack.defense_evasion",
    "attack.execution", "attack.t1059.001", "attack.t1086", "attack.t1059", "attack.t1218.005",
    "attack.t1059.003", "attack.t1012", "attack.t1170" .

<http://w3id.org/sepses/resource/sigma/sigma-95022b85-ff2a-49fa-939a-d7b8f56eeb9b>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/24";
  <http://purl.org/dc/terms/creator> "Alexander Rausch";
  <http://purl.org/dc/terms/description> "Detects actions caused by the RedMimicry Winnti playbook";
  <http://purl.org/dc/terms/id> "95022b85-ff2a-49fa-939a-d7b8f56eeb9b";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/title> "RedMimicry Winnti Playbook Execute";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe\")
|| regex(str(?cmdLine),\"cmd.exe\")
)
FILTER (regex(str(?cmdLine),\"gthread-3.6.dll\")
|| regex(str(?cmdLine),\"\\\\Windows\\\\Temp\\\\tmp.bat\")
|| regex(str(?cmdLine),\"sigcmm-2.4.dll\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://redmimicry.com";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1218.011",
    "attack.t1059", "attack.t1059.003", "attack.t1106";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/24";
  <http://purl.org/dc/terms/creator> "Alexander Rausch";
  <http://purl.org/dc/terms/description> "Detects actions caused by the RedMimicry Winnti playbook";
  <http://purl.org/dc/terms/id> "95022b85-ff2a-49fa-939a-d7b8f56eeb9b";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/title> "RedMimicry Winnti Playbook Execute";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe\")
|| regex(str(?cmdLine),\"cmd.exe\")
)
FILTER (regex(str(?cmdLine),\"gthread-3.6.dll\")
|| regex(str(?cmdLine),\"\\\\Windows\\\\Temp\\\\tmp.bat\")
|| regex(str(?cmdLine),\"sigcmm-2.4.dll\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://redmimicry.com";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1218.011",
    "attack.t1059", "attack.t1059.003", "attack.t1106";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/24";
  <http://purl.org/dc/terms/creator> "Alexander Rausch";
  <http://purl.org/dc/terms/description> "Detects actions caused by the RedMimicry Winnti playbook";
  <http://purl.org/dc/terms/id> "95022b85-ff2a-49fa-939a-d7b8f56eeb9b";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/title> "RedMimicry Winnti Playbook Execute";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe\")
|| regex(str(?cmdLine),\"cmd.exe\")
)
FILTER (regex(str(?cmdLine),\"gthread-3.6.dll\")
|| regex(str(?cmdLine),\"\\\\Windows\\\\Temp\\\\tmp.bat\")
|| regex(str(?cmdLine),\"sigcmm-2.4.dll\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://redmimicry.com";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1218.011",
    "attack.t1059", "attack.t1059.003", "attack.t1106";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/24";
  <http://purl.org/dc/terms/creator> "Alexander Rausch";
  <http://purl.org/dc/terms/description> "Detects actions caused by the RedMimicry Winnti playbook";
  <http://purl.org/dc/terms/id> "95022b85-ff2a-49fa-939a-d7b8f56eeb9b";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/title> "RedMimicry Winnti Playbook Execute";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe\")
|| regex(str(?cmdLine),\"cmd.exe\")
)
FILTER (regex(str(?cmdLine),\"gthread-3.6.dll\")
|| regex(str(?cmdLine),\"\\\\Windows\\\\Temp\\\\tmp.bat\")
|| regex(str(?cmdLine),\"sigcmm-2.4.dll\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://redmimicry.com";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1218.011",
    "attack.t1059", "attack.t1059.003", "attack.t1106";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/24";
  <http://purl.org/dc/terms/creator> "Alexander Rausch";
  <http://purl.org/dc/terms/description> "Detects actions caused by the RedMimicry Winnti playbook";
  <http://purl.org/dc/terms/id> "95022b85-ff2a-49fa-939a-d7b8f56eeb9b";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/title> "RedMimicry Winnti Playbook Execute";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe\")
|| regex(str(?cmdLine),\"cmd.exe\")
)
FILTER (regex(str(?cmdLine),\"gthread-3.6.dll\")
|| regex(str(?cmdLine),\"\\\\Windows\\\\Temp\\\\tmp.bat\")
|| regex(str(?cmdLine),\"sigcmm-2.4.dll\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://redmimicry.com";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1218.011",
    "attack.t1059", "attack.t1059.003", "attack.t1106";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/24";
  <http://purl.org/dc/terms/creator> "Alexander Rausch";
  <http://purl.org/dc/terms/description> "Detects actions caused by the RedMimicry Winnti playbook";
  <http://purl.org/dc/terms/id> "95022b85-ff2a-49fa-939a-d7b8f56eeb9b";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/title> "RedMimicry Winnti Playbook Execute";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe\")
|| regex(str(?cmdLine),\"cmd.exe\")
)
FILTER (regex(str(?cmdLine),\"gthread-3.6.dll\")
|| regex(str(?cmdLine),\"\\\\Windows\\\\Temp\\\\tmp.bat\")
|| regex(str(?cmdLine),\"sigcmm-2.4.dll\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://redmimicry.com";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1218.011",
    "attack.t1059", "attack.t1059.003", "attack.t1106" .

<http://w3id.org/sepses/resource/sigma/sigma-a35f5a72-f347-4e36-8895-9869b0d5fc6d>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/25";
  <http://purl.org/dc/terms/creator> "Sander Wiebing";
  <http://purl.org/dc/terms/description> "Detects Netsh commands that allows a suspcious application location on Windows Firewall";
  <http://purl.org/dc/terms/id> "a35f5a72-f347-4e36-8895-9869b0d5fc6d";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Netsh Program Allowed with Suspcious Location";
  sigma:detectionCondition "(selection1 or selection2) and susp_image";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*%TEMP%.*\")
|| regex(str(?cmdLine),\".*:\\\\RECYCLER\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\$Recycle.bin\\\\\")
|| regex(str(?cmdLine),\".*:\\\\SystemVolumeInformation\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\Tasks\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\debug\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\fonts\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\help\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\drivers\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\addins\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\cursors\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\system32\\\\tasks\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\Windows\\\\Temp\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\Temp\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\Users\\\\Public\\\\\")
|| regex(str(?cmdLine),\"%Public%\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\Users\\\\Default\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\Users\\\\Desktop\\\\\")
|| regex(str(?cmdLine),\"Downloads\\\\\")
|| regex(str(?cmdLine),\"Temporary Internet Files\\\\Content.Outlook\\\\\")
|| regex(str(?cmdLine),\"Local Settings\\\\Temporary Internet Files\\\\\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/07e789f4f2f3259e7559fdccb36e96814c2dbff872a21e1fa03de9ee377d581f?environmentId=100",
    "https://www.virusradar.com/en/Win32_Kasidet.AD/description";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1089", "attack.t1562.004";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/25";
  <http://purl.org/dc/terms/creator> "Sander Wiebing";
  <http://purl.org/dc/terms/description> "Detects Netsh commands that allows a suspcious application location on Windows Firewall";
  <http://purl.org/dc/terms/id> "a35f5a72-f347-4e36-8895-9869b0d5fc6d";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Netsh Program Allowed with Suspcious Location";
  sigma:detectionCondition "(selection1 or selection2) and susp_image";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*%TEMP%.*\")
|| regex(str(?cmdLine),\".*:\\\\RECYCLER\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\$Recycle.bin\\\\\")
|| regex(str(?cmdLine),\".*:\\\\SystemVolumeInformation\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\Tasks\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\debug\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\fonts\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\help\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\drivers\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\addins\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\cursors\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\system32\\\\tasks\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\Windows\\\\Temp\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\Temp\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\Users\\\\Public\\\\\")
|| regex(str(?cmdLine),\"%Public%\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\Users\\\\Default\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\Users\\\\Desktop\\\\\")
|| regex(str(?cmdLine),\"Downloads\\\\\")
|| regex(str(?cmdLine),\"Temporary Internet Files\\\\Content.Outlook\\\\\")
|| regex(str(?cmdLine),\"Local Settings\\\\Temporary Internet Files\\\\\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/07e789f4f2f3259e7559fdccb36e96814c2dbff872a21e1fa03de9ee377d581f?environmentId=100",
    "https://www.virusradar.com/en/Win32_Kasidet.AD/description";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1089", "attack.t1562.004";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/25";
  <http://purl.org/dc/terms/creator> "Sander Wiebing";
  <http://purl.org/dc/terms/description> "Detects Netsh commands that allows a suspcious application location on Windows Firewall";
  <http://purl.org/dc/terms/id> "a35f5a72-f347-4e36-8895-9869b0d5fc6d";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Netsh Program Allowed with Suspcious Location";
  sigma:detectionCondition "(selection1 or selection2) and susp_image";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*%TEMP%.*\")
|| regex(str(?cmdLine),\".*:\\\\RECYCLER\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\$Recycle.bin\\\\\")
|| regex(str(?cmdLine),\".*:\\\\SystemVolumeInformation\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\Tasks\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\debug\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\fonts\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\help\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\drivers\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\addins\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\cursors\\\\\")
|| regex(str(?cmdLine),\"C:\\\\\\\\Windows\\\\\\\\system32\\\\tasks\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\Windows\\\\Temp\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\Temp\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\Users\\\\Public\\\\\")
|| regex(str(?cmdLine),\"%Public%\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\Users\\\\Default\\\\\")
|| regex(str(?cmdLine),\".*C:\\\\Users\\\\Desktop\\\\\")
|| regex(str(?cmdLine),\"Downloads\\\\\")
|| regex(str(?cmdLine),\"Temporary Internet Files\\\\Content.Outlook\\\\\")
|| regex(str(?cmdLine),\"Local Settings\\\\Temporary Internet Files\\\\\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/07e789f4f2f3259e7559fdccb36e96814c2dbff872a21e1fa03de9ee377d581f?environmentId=100",
    "https://www.virusradar.com/en/Win32_Kasidet.AD/description";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1089", "attack.t1562.004" .

<http://w3id.org/sepses/resource/sigma/sigma-41421f44-58f9-455d-838a-c398859841d4>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/02";
  <http://purl.org/dc/terms/creator> "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)";
  <http://purl.org/dc/terms/description> "Potential adversaries stopping ETW providers recording loaded .NET assemblies.";
  <http://purl.org/dc/terms/id> "41421f44-58f9-455d-838a-c398859841d4";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "COMPlus_ETWEnabled Command Line Arguments";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"COMPlus_ETWEnabled=0\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://managed670.rssing.com/chan-5590147/all_p1.html", "https://bunnyinside.com/?term=f71e8cb9c76a",
    "https://github.com/dotnet/runtime/blob/4f9ae42d861fcb4be2fcd5d3d55d5f227d30e723/docs/coding-guidelines/clr-jit-coding-conventions.md#1412-disabling-code",
    "https://github.com/dotnet/runtime/blob/7abe42dc1123722ed385218268bb9fe04556e3d3/src/coreclr/src/inc/clrconfig.h#L33-L39",
    "https://github.com/dotnet/runtime/blob/ee2355c801d892f2894b0f7b14a20e6cc50e0e54/docs/design/coreclr/jit/viewing-jit-dumps.md#setting-configuration-variables",
    "https://github.com/dotnet/runtime/blob/f62e93416a1799aecc6b0947adad55a0d9870732/src/coreclr/src/inc/clrconfigvalues.h#L35-L38",
    "https://github.com/dotnet/runtime/search?p=1&q=COMPlus_&unscoped_q=COMPlus_", "https://social.msdn.microsoft.com/Forums/vstudio/en-US/0878832e-39d7-4eaf-8e16-a729c4c40975/what-can-i-use-e13c0d23ccbc4e12931bd9cc2eee27e4-for?forum=clr",
    "https://twitter.com/_xpn_/status/1268712093928378368";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1562";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/02";
  <http://purl.org/dc/terms/creator> "Roberto Rodriguez (Cyb3rWard0g), OTR (Open Threat Research)";
  <http://purl.org/dc/terms/description> "Potential adversaries stopping ETW providers recording loaded .NET assemblies.";
  <http://purl.org/dc/terms/id> "41421f44-58f9-455d-838a-c398859841d4";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "COMPlus_ETWEnabled Command Line Arguments";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"COMPlus_ETWEnabled=0\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://managed670.rssing.com/chan-5590147/all_p1.html", "https://bunnyinside.com/?term=f71e8cb9c76a",
    "https://github.com/dotnet/runtime/blob/4f9ae42d861fcb4be2fcd5d3d55d5f227d30e723/docs/coding-guidelines/clr-jit-coding-conventions.md#1412-disabling-code",
    "https://github.com/dotnet/runtime/blob/7abe42dc1123722ed385218268bb9fe04556e3d3/src/coreclr/src/inc/clrconfig.h#L33-L39",
    "https://github.com/dotnet/runtime/blob/ee2355c801d892f2894b0f7b14a20e6cc50e0e54/docs/design/coreclr/jit/viewing-jit-dumps.md#setting-configuration-variables",
    "https://github.com/dotnet/runtime/blob/f62e93416a1799aecc6b0947adad55a0d9870732/src/coreclr/src/inc/clrconfigvalues.h#L35-L38",
    "https://github.com/dotnet/runtime/search?p=1&q=COMPlus_&unscoped_q=COMPlus_", "https://social.msdn.microsoft.com/Forums/vstudio/en-US/0878832e-39d7-4eaf-8e16-a729c4c40975/what-can-i-use-e13c0d23ccbc4e12931bd9cc2eee27e4-for?forum=clr",
    "https://twitter.com/_xpn_/status/1268712093928378368";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1562" .

<http://w3id.org/sepses/resource/sigma/sigma-f1f3bf22-deb2-418d-8cce-e1a45e46a5bd>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/03/04";
  <http://purl.org/dc/terms/creator> "@2xxeformyshirt (Security Risk Advisors) - rule; Teymur Kheirkhabarov (idea)";
  <http://purl.org/dc/terms/description> "Detects MMC20.Application Lateral Movement; specifically looks for the spawning of the parent MMC.exe with a command line of \"-Embedding\" as a child of svchost.exe";
  <http://purl.org/dc/terms/id> "f1f3bf22-deb2-418d-8cce-e1a45e46a5bd";
  <http://purl.org/dc/terms/modified> "2020/08/23";
  <http://purl.org/dc/terms/title> "MMC20 Lateral Movement";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?ParentImage),\"svchost.exe\")
FILTER regex(str(?cmdLine),\".*-Embedding.*\")
FILTER regex(str(?cmdLine),\"mmc.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view?usp=sharing",
    "https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/";
  rule:hasDetectedRule "attack.execution", "attack.t1021.003", "attack.t1175";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/03/04";
  <http://purl.org/dc/terms/creator> "@2xxeformyshirt (Security Risk Advisors) - rule; Teymur Kheirkhabarov (idea)";
  <http://purl.org/dc/terms/description> "Detects MMC20.Application Lateral Movement; specifically looks for the spawning of the parent MMC.exe with a command line of \"-Embedding\" as a child of svchost.exe";
  <http://purl.org/dc/terms/id> "f1f3bf22-deb2-418d-8cce-e1a45e46a5bd";
  <http://purl.org/dc/terms/modified> "2020/08/23";
  <http://purl.org/dc/terms/title> "MMC20 Lateral Movement";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?ParentImage),\"svchost.exe\")
FILTER regex(str(?cmdLine),\".*-Embedding.*\")
FILTER regex(str(?cmdLine),\"mmc.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view?usp=sharing",
    "https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/";
  rule:hasDetectedRule "attack.execution", "attack.t1021.003", "attack.t1175";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/03/04";
  <http://purl.org/dc/terms/creator> "@2xxeformyshirt (Security Risk Advisors) - rule; Teymur Kheirkhabarov (idea)";
  <http://purl.org/dc/terms/description> "Detects MMC20.Application Lateral Movement; specifically looks for the spawning of the parent MMC.exe with a command line of \"-Embedding\" as a child of svchost.exe";
  <http://purl.org/dc/terms/id> "f1f3bf22-deb2-418d-8cce-e1a45e46a5bd";
  <http://purl.org/dc/terms/modified> "2020/08/23";
  <http://purl.org/dc/terms/title> "MMC20 Lateral Movement";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?ParentImage),\"svchost.exe\")
FILTER regex(str(?cmdLine),\".*-Embedding.*\")
FILTER regex(str(?cmdLine),\"mmc.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://drive.google.com/file/d/1lKya3_mLnR3UQuCoiYruO3qgu052_iS_/view?usp=sharing",
    "https://enigma0x3.net/2017/01/05/lateral-movement-using-the-mmc20-application-com-object/";
  rule:hasDetectedRule "attack.execution", "attack.t1021.003", "attack.t1175" .

<http://w3id.org/sepses/resource/sigma/sigma-d3c3861d-c504-4c77-ba55-224ba82d0118>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "Kutepov Anton, oscd.community";
  <http://purl.org/dc/terms/description> "Detects capture a network trace via netsh.exe trace functionality";
  <http://purl.org/dc/terms/id> "d3c3861d-c504-4c77-ba55-224ba82d0118";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Capture a Network Trace with netsh.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator or user uses netsh.exe trace functionality for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh\")
|| regex(str(?cmdLine),\"trace\")
|| regex(str(?cmdLine),\"start\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.msdn.microsoft.com/canberrapfe/2012/03/30/capture-a-network-trace-without-installing-anything-capture-a-network-trace-of-a-reboot/";
  rule:hasDetectedRule "attack.credential_access", "attack.discovery", "attack.t1040";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "Kutepov Anton, oscd.community";
  <http://purl.org/dc/terms/description> "Detects capture a network trace via netsh.exe trace functionality";
  <http://purl.org/dc/terms/id> "d3c3861d-c504-4c77-ba55-224ba82d0118";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Capture a Network Trace with netsh.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator or user uses netsh.exe trace functionality for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh\")
|| regex(str(?cmdLine),\"trace\")
|| regex(str(?cmdLine),\"start\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.msdn.microsoft.com/canberrapfe/2012/03/30/capture-a-network-trace-without-installing-anything-capture-a-network-trace-of-a-reboot/";
  rule:hasDetectedRule "attack.credential_access", "attack.discovery", "attack.t1040";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "Kutepov Anton, oscd.community";
  <http://purl.org/dc/terms/description> "Detects capture a network trace via netsh.exe trace functionality";
  <http://purl.org/dc/terms/id> "d3c3861d-c504-4c77-ba55-224ba82d0118";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Capture a Network Trace with netsh.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator or user uses netsh.exe trace functionality for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh\")
|| regex(str(?cmdLine),\"trace\")
|| regex(str(?cmdLine),\"start\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.msdn.microsoft.com/canberrapfe/2012/03/30/capture-a-network-trace-without-installing-anything-capture-a-network-trace-of-a-reboot/";
  rule:hasDetectedRule "attack.credential_access", "attack.discovery", "attack.t1040" .

<http://w3id.org/sepses/resource/sigma/sigma-ac175779-025a-4f12-98b0-acdaeb77ea85>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/09";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder";
  <http://purl.org/dc/terms/id> "ac175779-025a-4f12-98b0-acdaeb77ea85";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Script Run in AppData";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* /c powershellAppData\\\\Local\\\\\")
|| regex(str(?cmdLine),\".* /c powershellAppData\\\\Roaming\\\\\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/f87f1c4e-47e2-4c46-9cf4-31454c06ce03",
    "https://twitter.com/JohnLaTwC/status/1082851155481288706";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/09";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder";
  <http://purl.org/dc/terms/id> "ac175779-025a-4f12-98b0-acdaeb77ea85";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Script Run in AppData";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* /c powershellAppData\\\\Local\\\\\")
|| regex(str(?cmdLine),\".* /c powershellAppData\\\\Roaming\\\\\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/f87f1c4e-47e2-4c46-9cf4-31454c06ce03",
    "https://twitter.com/JohnLaTwC/status/1082851155481288706";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/09";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder";
  <http://purl.org/dc/terms/id> "ac175779-025a-4f12-98b0-acdaeb77ea85";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Script Run in AppData";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* /c powershellAppData\\\\Local\\\\\")
|| regex(str(?cmdLine),\".* /c powershellAppData\\\\Roaming\\\\\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/f87f1c4e-47e2-4c46-9cf4-31454c06ce03",
    "https://twitter.com/JohnLaTwC/status/1082851155481288706";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086" .

<http://w3id.org/sepses/resource/sigma/sigma-82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects execution of executables that can be used to bypass Applocker whitelisting";
  <http://purl.org/dc/terms/id> "82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Applocker Bypass";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Using installutil to add features for .NET applications (primarly would occur in developer environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\msdt.exe\")
|| regex(str(?cmdLine),\"\\\\installutil.exe\")
|| regex(str(?cmdLine),\"\\\\regsvcs.exe\")
|| regex(str(?cmdLine),\"\\\\regasm.exe\")
|| regex(str(?cmdLine),\"\\\\msbuild.exe\")
|| regex(str(?cmdLine),\"\\\\ieexec.exe\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt",
    "https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.t1127", "attack.t1218.005",
    "attack.t1170", "attack.t1118", "attack.t1121", "attack.t1127.001", "attack.t1218.004",
    "attack.t1218.009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects execution of executables that can be used to bypass Applocker whitelisting";
  <http://purl.org/dc/terms/id> "82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Applocker Bypass";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Using installutil to add features for .NET applications (primarly would occur in developer environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\msdt.exe\")
|| regex(str(?cmdLine),\"\\\\installutil.exe\")
|| regex(str(?cmdLine),\"\\\\regsvcs.exe\")
|| regex(str(?cmdLine),\"\\\\regasm.exe\")
|| regex(str(?cmdLine),\"\\\\msbuild.exe\")
|| regex(str(?cmdLine),\"\\\\ieexec.exe\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt",
    "https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.t1127", "attack.t1218.005",
    "attack.t1170", "attack.t1118", "attack.t1121", "attack.t1127.001", "attack.t1218.004",
    "attack.t1218.009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects execution of executables that can be used to bypass Applocker whitelisting";
  <http://purl.org/dc/terms/id> "82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Applocker Bypass";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Using installutil to add features for .NET applications (primarly would occur in developer environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\msdt.exe\")
|| regex(str(?cmdLine),\"\\\\installutil.exe\")
|| regex(str(?cmdLine),\"\\\\regsvcs.exe\")
|| regex(str(?cmdLine),\"\\\\regasm.exe\")
|| regex(str(?cmdLine),\"\\\\msbuild.exe\")
|| regex(str(?cmdLine),\"\\\\ieexec.exe\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt",
    "https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.t1127", "attack.t1218.005",
    "attack.t1170", "attack.t1118", "attack.t1121", "attack.t1127.001", "attack.t1218.004",
    "attack.t1218.009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects execution of executables that can be used to bypass Applocker whitelisting";
  <http://purl.org/dc/terms/id> "82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Applocker Bypass";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Using installutil to add features for .NET applications (primarly would occur in developer environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\msdt.exe\")
|| regex(str(?cmdLine),\"\\\\installutil.exe\")
|| regex(str(?cmdLine),\"\\\\regsvcs.exe\")
|| regex(str(?cmdLine),\"\\\\regasm.exe\")
|| regex(str(?cmdLine),\"\\\\msbuild.exe\")
|| regex(str(?cmdLine),\"\\\\ieexec.exe\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt",
    "https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.t1127", "attack.t1218.005",
    "attack.t1170", "attack.t1118", "attack.t1121", "attack.t1127.001", "attack.t1218.004",
    "attack.t1218.009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects execution of executables that can be used to bypass Applocker whitelisting";
  <http://purl.org/dc/terms/id> "82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Applocker Bypass";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Using installutil to add features for .NET applications (primarly would occur in developer environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\msdt.exe\")
|| regex(str(?cmdLine),\"\\\\installutil.exe\")
|| regex(str(?cmdLine),\"\\\\regsvcs.exe\")
|| regex(str(?cmdLine),\"\\\\regasm.exe\")
|| regex(str(?cmdLine),\"\\\\msbuild.exe\")
|| regex(str(?cmdLine),\"\\\\ieexec.exe\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt",
    "https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.t1127", "attack.t1218.005",
    "attack.t1170", "attack.t1118", "attack.t1121", "attack.t1127.001", "attack.t1218.004",
    "attack.t1218.009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects execution of executables that can be used to bypass Applocker whitelisting";
  <http://purl.org/dc/terms/id> "82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Applocker Bypass";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Using installutil to add features for .NET applications (primarly would occur in developer environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\msdt.exe\")
|| regex(str(?cmdLine),\"\\\\installutil.exe\")
|| regex(str(?cmdLine),\"\\\\regsvcs.exe\")
|| regex(str(?cmdLine),\"\\\\regasm.exe\")
|| regex(str(?cmdLine),\"\\\\msbuild.exe\")
|| regex(str(?cmdLine),\"\\\\ieexec.exe\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt",
    "https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.t1127", "attack.t1218.005",
    "attack.t1170", "attack.t1118", "attack.t1121", "attack.t1127.001", "attack.t1218.004",
    "attack.t1218.009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects execution of executables that can be used to bypass Applocker whitelisting";
  <http://purl.org/dc/terms/id> "82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Applocker Bypass";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Using installutil to add features for .NET applications (primarly would occur in developer environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\msdt.exe\")
|| regex(str(?cmdLine),\"\\\\installutil.exe\")
|| regex(str(?cmdLine),\"\\\\regsvcs.exe\")
|| regex(str(?cmdLine),\"\\\\regasm.exe\")
|| regex(str(?cmdLine),\"\\\\msbuild.exe\")
|| regex(str(?cmdLine),\"\\\\ieexec.exe\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt",
    "https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.t1127", "attack.t1218.005",
    "attack.t1170", "attack.t1118", "attack.t1121", "attack.t1127.001", "attack.t1218.004",
    "attack.t1218.009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects execution of executables that can be used to bypass Applocker whitelisting";
  <http://purl.org/dc/terms/id> "82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Applocker Bypass";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Using installutil to add features for .NET applications (primarly would occur in developer environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\msdt.exe\")
|| regex(str(?cmdLine),\"\\\\installutil.exe\")
|| regex(str(?cmdLine),\"\\\\regsvcs.exe\")
|| regex(str(?cmdLine),\"\\\\regasm.exe\")
|| regex(str(?cmdLine),\"\\\\msbuild.exe\")
|| regex(str(?cmdLine),\"\\\\ieexec.exe\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt",
    "https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.t1127", "attack.t1218.005",
    "attack.t1170", "attack.t1118", "attack.t1121", "attack.t1127.001", "attack.t1218.004",
    "attack.t1218.009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects execution of executables that can be used to bypass Applocker whitelisting";
  <http://purl.org/dc/terms/id> "82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Applocker Bypass";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Using installutil to add features for .NET applications (primarly would occur in developer environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\msdt.exe\")
|| regex(str(?cmdLine),\"\\\\installutil.exe\")
|| regex(str(?cmdLine),\"\\\\regsvcs.exe\")
|| regex(str(?cmdLine),\"\\\\regasm.exe\")
|| regex(str(?cmdLine),\"\\\\msbuild.exe\")
|| regex(str(?cmdLine),\"\\\\ieexec.exe\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt",
    "https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.t1127", "attack.t1218.005",
    "attack.t1170", "attack.t1118", "attack.t1121", "attack.t1127.001", "attack.t1218.004",
    "attack.t1218.009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects execution of executables that can be used to bypass Applocker whitelisting";
  <http://purl.org/dc/terms/id> "82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Applocker Bypass";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Using installutil to add features for .NET applications (primarly would occur in developer environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\msdt.exe\")
|| regex(str(?cmdLine),\"\\\\installutil.exe\")
|| regex(str(?cmdLine),\"\\\\regsvcs.exe\")
|| regex(str(?cmdLine),\"\\\\regasm.exe\")
|| regex(str(?cmdLine),\"\\\\msbuild.exe\")
|| regex(str(?cmdLine),\"\\\\ieexec.exe\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt",
    "https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.t1127", "attack.t1218.005",
    "attack.t1170", "attack.t1118", "attack.t1121", "attack.t1127.001", "attack.t1218.004",
    "attack.t1218.009" .

<http://w3id.org/sepses/resource/sigma/sigma-9465ddf4-f9e4-4ebd-8d98-702df3a93239>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2012/12/11";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious IIS native-code module installations via command line";
  <http://purl.org/dc/terms/id> "9465ddf4-f9e4-4ebd-8d98-702df3a93239";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "IIS Native-Code Module Command Line Installation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown as it may vary from organisation to arganisation how admins use to install IIS modules";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"APPCMD.EXE install module /name:.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://researchcenter.paloaltonetworks.com/2018/01/unit42-oilrig-uses-rgdoor-iis-backdoor-targets-middle-east/";
  rule:hasDetectedRule "attack.persistence", "attack.t1100", "attack.t1505.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2012/12/11";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious IIS native-code module installations via command line";
  <http://purl.org/dc/terms/id> "9465ddf4-f9e4-4ebd-8d98-702df3a93239";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "IIS Native-Code Module Command Line Installation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown as it may vary from organisation to arganisation how admins use to install IIS modules";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"APPCMD.EXE install module /name:.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://researchcenter.paloaltonetworks.com/2018/01/unit42-oilrig-uses-rgdoor-iis-backdoor-targets-middle-east/";
  rule:hasDetectedRule "attack.persistence", "attack.t1100", "attack.t1505.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2012/12/11";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious IIS native-code module installations via command line";
  <http://purl.org/dc/terms/id> "9465ddf4-f9e4-4ebd-8d98-702df3a93239";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "IIS Native-Code Module Command Line Installation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown as it may vary from organisation to arganisation how admins use to install IIS modules";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"APPCMD.EXE install module /name:.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://researchcenter.paloaltonetworks.com/2018/01/unit42-oilrig-uses-rgdoor-iis-backdoor-targets-middle-east/";
  rule:hasDetectedRule "attack.persistence", "attack.t1100", "attack.t1505.003" .

<http://w3id.org/sepses/resource/sigma/sigma-eb87818d-db5d-49cc-a987-d5da331fbd90>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/23";
  <http://purl.org/dc/terms/creator> "Jakob Weinzettl, oscd.community";
  <http://purl.org/dc/terms/description> "Detects a windows service to be stopped";
  <http://purl.org/dc/terms/id> "eb87818d-db5d-49cc-a987-d5da331fbd90";
  <http://purl.org/dc/terms/modified> "2019/11/08";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Stop Windows Service";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrator shutting down the service due to upgrade or removal purposes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"stop\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.impact", "attack.t1489";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/23";
  <http://purl.org/dc/terms/creator> "Jakob Weinzettl, oscd.community";
  <http://purl.org/dc/terms/description> "Detects a windows service to be stopped";
  <http://purl.org/dc/terms/id> "eb87818d-db5d-49cc-a987-d5da331fbd90";
  <http://purl.org/dc/terms/modified> "2019/11/08";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Stop Windows Service";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrator shutting down the service due to upgrade or removal purposes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"stop\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.impact", "attack.t1489" .

<http://w3id.org/sepses/resource/sigma/sigma-09e6d5c0-05b8-4ff8-9eeb-043046ec774c>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/02";
  <http://purl.org/dc/terms/creator> "Modexp (idea)";
  <http://purl.org/dc/terms/description> "Detects process memory dump via comsvcs.dll and rundll32";
  <http://purl.org/dc/terms/id> "09e6d5c0-05b8-4ff8-9eeb-043046ec774c";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Process Dump via Comsvcs DLL";
  sigma:detectionCondition "(rundll_image or rundll_ofn) and selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*comsvcs.*MiniDump.*full.*\")
|| regex(str(?cmdLine),\".*comsvcs.*MiniDumpW.*full.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://modexp.wordpress.com/2019/08/30/minidumpwritedump-via-com-services-dll/",
    "https://twitter.com/SBousseaden/status/1167417096374050817";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.defense_evasion",
    "attack.t1218.011", "attack.t1003.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/02";
  <http://purl.org/dc/terms/creator> "Modexp (idea)";
  <http://purl.org/dc/terms/description> "Detects process memory dump via comsvcs.dll and rundll32";
  <http://purl.org/dc/terms/id> "09e6d5c0-05b8-4ff8-9eeb-043046ec774c";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Process Dump via Comsvcs DLL";
  sigma:detectionCondition "(rundll_image or rundll_ofn) and selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*comsvcs.*MiniDump.*full.*\")
|| regex(str(?cmdLine),\".*comsvcs.*MiniDumpW.*full.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://modexp.wordpress.com/2019/08/30/minidumpwritedump-via-com-services-dll/",
    "https://twitter.com/SBousseaden/status/1167417096374050817";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.defense_evasion",
    "attack.t1218.011", "attack.t1003.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/02";
  <http://purl.org/dc/terms/creator> "Modexp (idea)";
  <http://purl.org/dc/terms/description> "Detects process memory dump via comsvcs.dll and rundll32";
  <http://purl.org/dc/terms/id> "09e6d5c0-05b8-4ff8-9eeb-043046ec774c";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Process Dump via Comsvcs DLL";
  sigma:detectionCondition "(rundll_image or rundll_ofn) and selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*comsvcs.*MiniDump.*full.*\")
|| regex(str(?cmdLine),\".*comsvcs.*MiniDumpW.*full.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://modexp.wordpress.com/2019/08/30/minidumpwritedump-via-com-services-dll/",
    "https://twitter.com/SBousseaden/status/1167417096374050817";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.defense_evasion",
    "attack.t1218.011", "attack.t1003.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/02";
  <http://purl.org/dc/terms/creator> "Modexp (idea)";
  <http://purl.org/dc/terms/description> "Detects process memory dump via comsvcs.dll and rundll32";
  <http://purl.org/dc/terms/id> "09e6d5c0-05b8-4ff8-9eeb-043046ec774c";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Process Dump via Comsvcs DLL";
  sigma:detectionCondition "(rundll_image or rundll_ofn) and selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*comsvcs.*MiniDump.*full.*\")
|| regex(str(?cmdLine),\".*comsvcs.*MiniDumpW.*full.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://modexp.wordpress.com/2019/08/30/minidumpwritedump-via-com-services-dll/",
    "https://twitter.com/SBousseaden/status/1167417096374050817";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.defense_evasion",
    "attack.t1218.011", "attack.t1003.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/02";
  <http://purl.org/dc/terms/creator> "Modexp (idea)";
  <http://purl.org/dc/terms/description> "Detects process memory dump via comsvcs.dll and rundll32";
  <http://purl.org/dc/terms/id> "09e6d5c0-05b8-4ff8-9eeb-043046ec774c";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Process Dump via Comsvcs DLL";
  sigma:detectionCondition "(rundll_image or rundll_ofn) and selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*comsvcs.*MiniDump.*full.*\")
|| regex(str(?cmdLine),\".*comsvcs.*MiniDumpW.*full.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://modexp.wordpress.com/2019/08/30/minidumpwritedump-via-com-services-dll/",
    "https://twitter.com/SBousseaden/status/1167417096374050817";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.defense_evasion",
    "attack.t1218.011", "attack.t1003.001" .

<http://w3id.org/sepses/resource/sigma/sigma-931b6802-d6a6-4267-9ffa-526f57f22aaf>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/05/22";
  <http://purl.org/dc/terms/creator> "Olaf Hartong";
  <http://purl.org/dc/terms/description> "Detects Task Scheduler .job import arbitrary DACL write\\par";
  <http://purl.org/dc/terms/id> "931b6802-d6a6-4267-9ffa-526f57f22aaf";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Windows 10 Scheduled Task SandboxEscaper 0-day";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*/change.*/TN.*/RU.*/RP.*\")
FILTER regex(str(?cmdLine),\"\\\\schtasks.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/SandboxEscaper/polarbearrepo/tree/master/bearlpe";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.t1053", "attack.t1053.005",
    "car.2013-08-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/05/22";
  <http://purl.org/dc/terms/creator> "Olaf Hartong";
  <http://purl.org/dc/terms/description> "Detects Task Scheduler .job import arbitrary DACL write\\par";
  <http://purl.org/dc/terms/id> "931b6802-d6a6-4267-9ffa-526f57f22aaf";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Windows 10 Scheduled Task SandboxEscaper 0-day";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*/change.*/TN.*/RU.*/RP.*\")
FILTER regex(str(?cmdLine),\"\\\\schtasks.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/SandboxEscaper/polarbearrepo/tree/master/bearlpe";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.t1053", "attack.t1053.005",
    "car.2013-08-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/05/22";
  <http://purl.org/dc/terms/creator> "Olaf Hartong";
  <http://purl.org/dc/terms/description> "Detects Task Scheduler .job import arbitrary DACL write\\par";
  <http://purl.org/dc/terms/id> "931b6802-d6a6-4267-9ffa-526f57f22aaf";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Windows 10 Scheduled Task SandboxEscaper 0-day";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*/change.*/TN.*/RU.*/RP.*\")
FILTER regex(str(?cmdLine),\"\\\\schtasks.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/SandboxEscaper/polarbearrepo/tree/master/bearlpe";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.t1053", "attack.t1053.005",
    "car.2013-08-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/05/22";
  <http://purl.org/dc/terms/creator> "Olaf Hartong";
  <http://purl.org/dc/terms/description> "Detects Task Scheduler .job import arbitrary DACL write\\par";
  <http://purl.org/dc/terms/id> "931b6802-d6a6-4267-9ffa-526f57f22aaf";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Windows 10 Scheduled Task SandboxEscaper 0-day";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*/change.*/TN.*/RU.*/RP.*\")
FILTER regex(str(?cmdLine),\"\\\\schtasks.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/SandboxEscaper/polarbearrepo/tree/master/bearlpe";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.t1053", "attack.t1053.005",
    "car.2013-08-001" .

<http://w3id.org/sepses/resource/sigma/sigma-18da1007-3f26-470f-875d-f77faf1cab31>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/10/22";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report";
  <http://purl.org/dc/terms/id> "18da1007-3f26-470f-875d-f77faf1cab31";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/title> "Ps.exe Renamed SysInternals Tool";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Renamed SysInternals tool";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"ps.exe -accepteula\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.us-cert.gov/ncas/alerts/TA17-293A";
  rule:hasDetectedRule "attack.defense_evasion", "attack.g0035", "attack.t1036", "attack.t1036.003",
    "car.2013-05-009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/10/22";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report";
  <http://purl.org/dc/terms/id> "18da1007-3f26-470f-875d-f77faf1cab31";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/title> "Ps.exe Renamed SysInternals Tool";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Renamed SysInternals tool";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"ps.exe -accepteula\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.us-cert.gov/ncas/alerts/TA17-293A";
  rule:hasDetectedRule "attack.defense_evasion", "attack.g0035", "attack.t1036", "attack.t1036.003",
    "car.2013-05-009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/10/22";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report";
  <http://purl.org/dc/terms/id> "18da1007-3f26-470f-875d-f77faf1cab31";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/title> "Ps.exe Renamed SysInternals Tool";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Renamed SysInternals tool";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"ps.exe -accepteula\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.us-cert.gov/ncas/alerts/TA17-293A";
  rule:hasDetectedRule "attack.defense_evasion", "attack.g0035", "attack.t1036", "attack.t1036.003",
    "car.2013-05-009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/10/22";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report";
  <http://purl.org/dc/terms/id> "18da1007-3f26-470f-875d-f77faf1cab31";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/title> "Ps.exe Renamed SysInternals Tool";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Renamed SysInternals tool";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"ps.exe -accepteula\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.us-cert.gov/ncas/alerts/TA17-293A";
  rule:hasDetectedRule "attack.defense_evasion", "attack.g0035", "attack.t1036", "attack.t1036.003",
    "car.2013-05-009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/10/22";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report";
  <http://purl.org/dc/terms/id> "18da1007-3f26-470f-875d-f77faf1cab31";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/title> "Ps.exe Renamed SysInternals Tool";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Renamed SysInternals tool";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"ps.exe -accepteula\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.us-cert.gov/ncas/alerts/TA17-293A";
  rule:hasDetectedRule "attack.defense_evasion", "attack.g0035", "attack.t1036", "attack.t1036.003",
    "car.2013-05-009" .

<http://w3id.org/sepses/resource/sigma/sigma-75df3b17-8bcc-4565-b89b-c9898acef911>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/09/26";
  <http://purl.org/dc/terms/creator> "FPT.EagleEye Team";
  <http://purl.org/dc/terms/description> "Detects the execution of a AdFind for Active Directory enumeration";
  <http://purl.org/dc/terms/id> "75df3b17-8bcc-4565-b89b-c9898acef911";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious AdFind Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ProcesscmdLine ?ProcesscmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?ProcesscmdLine),\"objectcategory\")
FILTER (regex(str(?cmdLine),\"adfind.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/fin6/Emulation_Plan/Phase1.md",
    "https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx";
  rule:hasDetectedRule "attack.discovery", "attack.t1018", "attack.t1016", "attack.t1482";
  sigma:logSourceService "process_creation";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/09/26";
  <http://purl.org/dc/terms/creator> "FPT.EagleEye Team";
  <http://purl.org/dc/terms/description> "Detects the execution of a AdFind for Active Directory enumeration";
  <http://purl.org/dc/terms/id> "75df3b17-8bcc-4565-b89b-c9898acef911";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious AdFind Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ProcesscmdLine ?ProcesscmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?ProcesscmdLine),\"objectcategory\")
FILTER (regex(str(?cmdLine),\"adfind.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/fin6/Emulation_Plan/Phase1.md",
    "https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx";
  rule:hasDetectedRule "attack.discovery", "attack.t1018", "attack.t1016", "attack.t1482";
  sigma:logSourceService "process_creation";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/09/26";
  <http://purl.org/dc/terms/creator> "FPT.EagleEye Team";
  <http://purl.org/dc/terms/description> "Detects the execution of a AdFind for Active Directory enumeration";
  <http://purl.org/dc/terms/id> "75df3b17-8bcc-4565-b89b-c9898acef911";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious AdFind Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ProcesscmdLine ?ProcesscmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?ProcesscmdLine),\"objectcategory\")
FILTER (regex(str(?cmdLine),\"adfind.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/fin6/Emulation_Plan/Phase1.md",
    "https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx";
  rule:hasDetectedRule "attack.discovery", "attack.t1018", "attack.t1016", "attack.t1482";
  sigma:logSourceService "process_creation";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/09/26";
  <http://purl.org/dc/terms/creator> "FPT.EagleEye Team";
  <http://purl.org/dc/terms/description> "Detects the execution of a AdFind for Active Directory enumeration";
  <http://purl.org/dc/terms/id> "75df3b17-8bcc-4565-b89b-c9898acef911";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious AdFind Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ProcesscmdLine ?ProcesscmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?ProcesscmdLine),\"objectcategory\")
FILTER (regex(str(?cmdLine),\"adfind.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/center-for-threat-informed-defense/adversary_emulation_library/blob/master/fin6/Emulation_Plan/Phase1.md",
    "https://social.technet.microsoft.com/wiki/contents/articles/7535.adfind-command-examples.aspx";
  rule:hasDetectedRule "attack.discovery", "attack.t1018", "attack.t1016", "attack.t1482";
  sigma:logSourceService "process_creation" .

<http://w3id.org/sepses/resource/sigma/sigma-e66779cc-383e-4224-a3a4-267eeb585c40>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe).";
  <http://purl.org/dc/terms/id> "e66779cc-383e-4224-a3a4-267eeb585c40";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Bypass UAC via CMSTP";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of cmstp.exe utility by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"/s\")
|| regex(str(?cmdLine),\"/au\")
)
FILTER regex(str(?cmdLine),\"\\\\cmstp.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/e584f1a1-c303-4885-8a66-21360c90995b.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1191/T1191.md";
  rule:hasDetectedRule "attack.defense_evasion", "attack.privilege_escalation", "attack.t1088",
    "attack.t1548.002", "attack.t1191", "attack.t1218.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe).";
  <http://purl.org/dc/terms/id> "e66779cc-383e-4224-a3a4-267eeb585c40";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Bypass UAC via CMSTP";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of cmstp.exe utility by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"/s\")
|| regex(str(?cmdLine),\"/au\")
)
FILTER regex(str(?cmdLine),\"\\\\cmstp.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/e584f1a1-c303-4885-8a66-21360c90995b.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1191/T1191.md";
  rule:hasDetectedRule "attack.defense_evasion", "attack.privilege_escalation", "attack.t1088",
    "attack.t1548.002", "attack.t1191", "attack.t1218.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe).";
  <http://purl.org/dc/terms/id> "e66779cc-383e-4224-a3a4-267eeb585c40";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Bypass UAC via CMSTP";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of cmstp.exe utility by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"/s\")
|| regex(str(?cmdLine),\"/au\")
)
FILTER regex(str(?cmdLine),\"\\\\cmstp.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/e584f1a1-c303-4885-8a66-21360c90995b.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1191/T1191.md";
  rule:hasDetectedRule "attack.defense_evasion", "attack.privilege_escalation", "attack.t1088",
    "attack.t1548.002", "attack.t1191", "attack.t1218.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe).";
  <http://purl.org/dc/terms/id> "e66779cc-383e-4224-a3a4-267eeb585c40";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Bypass UAC via CMSTP";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of cmstp.exe utility by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"/s\")
|| regex(str(?cmdLine),\"/au\")
)
FILTER regex(str(?cmdLine),\"\\\\cmstp.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/e584f1a1-c303-4885-8a66-21360c90995b.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1191/T1191.md";
  rule:hasDetectedRule "attack.defense_evasion", "attack.privilege_escalation", "attack.t1088",
    "attack.t1548.002", "attack.t1191", "attack.t1218.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe).";
  <http://purl.org/dc/terms/id> "e66779cc-383e-4224-a3a4-267eeb585c40";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Bypass UAC via CMSTP";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of cmstp.exe utility by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"/s\")
|| regex(str(?cmdLine),\"/au\")
)
FILTER regex(str(?cmdLine),\"\\\\cmstp.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/e584f1a1-c303-4885-8a66-21360c90995b.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1191/T1191.md";
  rule:hasDetectedRule "attack.defense_evasion", "attack.privilege_escalation", "attack.t1088",
    "attack.t1548.002", "attack.t1191", "attack.t1218.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Detect child processes of automatically elevated instances of Microsoft Connection Manager Profile Installer (cmstp.exe).";
  <http://purl.org/dc/terms/id> "e66779cc-383e-4224-a3a4-267eeb585c40";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Bypass UAC via CMSTP";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of cmstp.exe utility by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"/s\")
|| regex(str(?cmdLine),\"/au\")
)
FILTER regex(str(?cmdLine),\"\\\\cmstp.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/e584f1a1-c303-4885-8a66-21360c90995b.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1191/T1191.md";
  rule:hasDetectedRule "attack.defense_evasion", "attack.privilege_escalation", "attack.t1088",
    "attack.t1548.002", "attack.t1191", "attack.t1218.003" .

<http://w3id.org/sepses/resource/sigma/sigma-c37510b8-2107-4b78-aa32-72f251e7a844>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/12/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Ryuk ransomware activity";
  <http://purl.org/dc/terms/id> "c37510b8-2107-4b78-aa32-72f251e7a844";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Ryuk Ransomware";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\")
|| regex(str(?cmdLine),\"C:\\\\users\\\\Public\\\\\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/d860402c-3ff4-4c1f-b367-0237da714ed1/";
  rule:hasDetectedRule "attack.persistence", "attack.t1060", "attack.t1547.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/12/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Ryuk ransomware activity";
  <http://purl.org/dc/terms/id> "c37510b8-2107-4b78-aa32-72f251e7a844";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Ryuk Ransomware";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\")
|| regex(str(?cmdLine),\"C:\\\\users\\\\Public\\\\\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/d860402c-3ff4-4c1f-b367-0237da714ed1/";
  rule:hasDetectedRule "attack.persistence", "attack.t1060", "attack.t1547.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/12/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Ryuk ransomware activity";
  <http://purl.org/dc/terms/id> "c37510b8-2107-4b78-aa32-72f251e7a844";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Ryuk Ransomware";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\")
|| regex(str(?cmdLine),\"C:\\\\users\\\\Public\\\\\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/d860402c-3ff4-4c1f-b367-0237da714ed1/";
  rule:hasDetectedRule "attack.persistence", "attack.t1060", "attack.t1547.001" .

<http://w3id.org/sepses/resource/sigma/sigma-b5c7395f-e501-4a08-94d4-57fe7a9da9d2>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "Launch 64-bit shellcode from a debugger script file using cdb.exe.";
  <http://purl.org/dc/terms/id> "b5c7395f-e501-4a08-94d4-57fe7a9da9d2";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of debugging tools";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"-cf\")
FILTER regex(str(?cmdLine),\"\\\\cdb.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.exploit-monday.com/2016/08/windbg-cdb-shellcode-runner.html",
    "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Cdb.yml";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution",
    "attack.t1127", "attack.t1106";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "Launch 64-bit shellcode from a debugger script file using cdb.exe.";
  <http://purl.org/dc/terms/id> "b5c7395f-e501-4a08-94d4-57fe7a9da9d2";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of debugging tools";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"-cf\")
FILTER regex(str(?cmdLine),\"\\\\cdb.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.exploit-monday.com/2016/08/windbg-cdb-shellcode-runner.html",
    "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Cdb.yml";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution",
    "attack.t1127", "attack.t1106";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "Launch 64-bit shellcode from a debugger script file using cdb.exe.";
  <http://purl.org/dc/terms/id> "b5c7395f-e501-4a08-94d4-57fe7a9da9d2";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of debugging tools";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"-cf\")
FILTER regex(str(?cmdLine),\"\\\\cdb.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.exploit-monday.com/2016/08/windbg-cdb-shellcode-runner.html",
    "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Cdb.yml";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution",
    "attack.t1127", "attack.t1106";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "Launch 64-bit shellcode from a debugger script file using cdb.exe.";
  <http://purl.org/dc/terms/id> "b5c7395f-e501-4a08-94d4-57fe7a9da9d2";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of debugging tools";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"-cf\")
FILTER regex(str(?cmdLine),\"\\\\cdb.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.exploit-monday.com/2016/08/windbg-cdb-shellcode-runner.html",
    "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Cdb.yml";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution",
    "attack.t1127", "attack.t1106";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "Launch 64-bit shellcode from a debugger script file using cdb.exe.";
  <http://purl.org/dc/terms/id> "b5c7395f-e501-4a08-94d4-57fe7a9da9d2";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible App Whitelisting Bypass via WinDbg/CDB as a Shellcode Runner";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of debugging tools";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"-cf\")
FILTER regex(str(?cmdLine),\"\\\\cdb.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.exploit-monday.com/2016/08/windbg-cdb-shellcode-runner.html",
    "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Cdb.yml";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution",
    "attack.t1127", "attack.t1106" .

<http://w3id.org/sepses/resource/sigma/sigma-e593cf51-88db-4ee1-b920-37e89012a3c9>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects suspicious process related to rundll32 based on arguments";
  <http://purl.org/dc/terms/id> "e593cf51-88db-4ee1-b920-37e89012a3c9";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Rundll32 Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe.* url.dll,.*OpenURL .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* url.dll,.*OpenURLA .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* url.dll,.*FileProtocolHandler .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* zipfldr.dll,.*RouteTheCall .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* Shell32.dll,.*Control_RunDLL .*\")
|| regex(str(?cmdLine),\"rundll32.exe javascript:.*\")
|| regex(str(?cmdLine),\".* url.dll,.*OpenURL .*\")
|| regex(str(?cmdLine),\".* url.dll,.*OpenURLA .*\")
|| regex(str(?cmdLine),\".* url.dll,.*FileProtocolHandler .*\")
|| regex(str(?cmdLine),\".* zipfldr.dll,.*RouteTheCall .*\")
|| regex(str(?cmdLine),\".* Shell32.dll,.*Control_RunDLL .*\")
|| regex(str(?cmdLine),\".* javascript:.*\")
|| regex(str(?cmdLine),\".*.RegisterXLL.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.hexacorn.com/blog/2017/05/01/running-programs-via-proxy-jumping-on-a-edr-bypass-trampoline/",
    "https://gist.github.com/ryhanson/227229866af52e2d963cf941af135a52", "https://twitter.com/Hexacorn/status/885258886428725250";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects suspicious process related to rundll32 based on arguments";
  <http://purl.org/dc/terms/id> "e593cf51-88db-4ee1-b920-37e89012a3c9";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Rundll32 Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe.* url.dll,.*OpenURL .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* url.dll,.*OpenURLA .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* url.dll,.*FileProtocolHandler .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* zipfldr.dll,.*RouteTheCall .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* Shell32.dll,.*Control_RunDLL .*\")
|| regex(str(?cmdLine),\"rundll32.exe javascript:.*\")
|| regex(str(?cmdLine),\".* url.dll,.*OpenURL .*\")
|| regex(str(?cmdLine),\".* url.dll,.*OpenURLA .*\")
|| regex(str(?cmdLine),\".* url.dll,.*FileProtocolHandler .*\")
|| regex(str(?cmdLine),\".* zipfldr.dll,.*RouteTheCall .*\")
|| regex(str(?cmdLine),\".* Shell32.dll,.*Control_RunDLL .*\")
|| regex(str(?cmdLine),\".* javascript:.*\")
|| regex(str(?cmdLine),\".*.RegisterXLL.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.hexacorn.com/blog/2017/05/01/running-programs-via-proxy-jumping-on-a-edr-bypass-trampoline/",
    "https://gist.github.com/ryhanson/227229866af52e2d963cf941af135a52", "https://twitter.com/Hexacorn/status/885258886428725250";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects suspicious process related to rundll32 based on arguments";
  <http://purl.org/dc/terms/id> "e593cf51-88db-4ee1-b920-37e89012a3c9";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Rundll32 Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe.* url.dll,.*OpenURL .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* url.dll,.*OpenURLA .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* url.dll,.*FileProtocolHandler .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* zipfldr.dll,.*RouteTheCall .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* Shell32.dll,.*Control_RunDLL .*\")
|| regex(str(?cmdLine),\"rundll32.exe javascript:.*\")
|| regex(str(?cmdLine),\".* url.dll,.*OpenURL .*\")
|| regex(str(?cmdLine),\".* url.dll,.*OpenURLA .*\")
|| regex(str(?cmdLine),\".* url.dll,.*FileProtocolHandler .*\")
|| regex(str(?cmdLine),\".* zipfldr.dll,.*RouteTheCall .*\")
|| regex(str(?cmdLine),\".* Shell32.dll,.*Control_RunDLL .*\")
|| regex(str(?cmdLine),\".* javascript:.*\")
|| regex(str(?cmdLine),\".*.RegisterXLL.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.hexacorn.com/blog/2017/05/01/running-programs-via-proxy-jumping-on-a-edr-bypass-trampoline/",
    "https://gist.github.com/ryhanson/227229866af52e2d963cf941af135a52", "https://twitter.com/Hexacorn/status/885258886428725250";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects suspicious process related to rundll32 based on arguments";
  <http://purl.org/dc/terms/id> "e593cf51-88db-4ee1-b920-37e89012a3c9";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Rundll32 Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe.* url.dll,.*OpenURL .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* url.dll,.*OpenURLA .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* url.dll,.*FileProtocolHandler .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* zipfldr.dll,.*RouteTheCall .*\")
|| regex(str(?cmdLine),\"rundll32.exe.* Shell32.dll,.*Control_RunDLL .*\")
|| regex(str(?cmdLine),\"rundll32.exe javascript:.*\")
|| regex(str(?cmdLine),\".* url.dll,.*OpenURL .*\")
|| regex(str(?cmdLine),\".* url.dll,.*OpenURLA .*\")
|| regex(str(?cmdLine),\".* url.dll,.*FileProtocolHandler .*\")
|| regex(str(?cmdLine),\".* zipfldr.dll,.*RouteTheCall .*\")
|| regex(str(?cmdLine),\".* Shell32.dll,.*Control_RunDLL .*\")
|| regex(str(?cmdLine),\".* javascript:.*\")
|| regex(str(?cmdLine),\".*.RegisterXLL.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.hexacorn.com/blog/2017/05/01/running-programs-via-proxy-jumping-on-a-edr-bypass-trampoline/",
    "https://gist.github.com/ryhanson/227229866af52e2d963cf941af135a52", "https://twitter.com/Hexacorn/status/885258886428725250";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011" .

<http://w3id.org/sepses/resource/sigma/sigma-087790e3-3287-436c-bccf-cbd0184a7db1>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/11";
  <http://purl.org/dc/terms/creator> "xknow @xknow_infosec";
  <http://purl.org/dc/terms/description> "detects the usage of path traversal in cmd.exe indicating possible command/argument confusion/hijacking";
  <http://purl.org/dc/terms/id> "087790e3-3287-436c-bccf-cbd0184a7db1";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Cmd.exe CommandLine Path Traversal";
  sigma:detectionCondition "selection";
  sigma:falsePositive "(not much) some benign Java tools may product false-positive commandlines for loading libraries";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?ParentcmdLine),\"cmd.*/c\")
FILTER regex(str(?cmdLine),\"/../../\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://hackingiscool.pl/cmdhijack-command-argument-confusion-with-path-traversal-in-cmd-exe/",
    "https://twitter.com/Oddvarmoe/status/1270633613449723905";
  rule:hasDetectedRule "attack.execution", "attack.t1059", "attack.t1059.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/11";
  <http://purl.org/dc/terms/creator> "xknow @xknow_infosec";
  <http://purl.org/dc/terms/description> "detects the usage of path traversal in cmd.exe indicating possible command/argument confusion/hijacking";
  <http://purl.org/dc/terms/id> "087790e3-3287-436c-bccf-cbd0184a7db1";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Cmd.exe CommandLine Path Traversal";
  sigma:detectionCondition "selection";
  sigma:falsePositive "(not much) some benign Java tools may product false-positive commandlines for loading libraries";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?ParentcmdLine),\"cmd.*/c\")
FILTER regex(str(?cmdLine),\"/../../\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://hackingiscool.pl/cmdhijack-command-argument-confusion-with-path-traversal-in-cmd-exe/",
    "https://twitter.com/Oddvarmoe/status/1270633613449723905";
  rule:hasDetectedRule "attack.execution", "attack.t1059", "attack.t1059.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/11";
  <http://purl.org/dc/terms/creator> "xknow @xknow_infosec";
  <http://purl.org/dc/terms/description> "detects the usage of path traversal in cmd.exe indicating possible command/argument confusion/hijacking";
  <http://purl.org/dc/terms/id> "087790e3-3287-436c-bccf-cbd0184a7db1";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Cmd.exe CommandLine Path Traversal";
  sigma:detectionCondition "selection";
  sigma:falsePositive "(not much) some benign Java tools may product false-positive commandlines for loading libraries";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?ParentcmdLine),\"cmd.*/c\")
FILTER regex(str(?cmdLine),\"/../../\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://hackingiscool.pl/cmdhijack-command-argument-confusion-with-path-traversal-in-cmd-exe/",
    "https://twitter.com/Oddvarmoe/status/1270633613449723905";
  rule:hasDetectedRule "attack.execution", "attack.t1059", "attack.t1059.003" .

<http://w3id.org/sepses/resource/sigma/sigma-30edb182-aa75-42c0-b0a9-e998bb29067c>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/08/17";
  <http://purl.org/dc/terms/creator> "Markus Neis";
  <http://purl.org/dc/terms/description> "Detects Request to amsiInitFailed that can be used to disable AMSI Scanning";
  <http://purl.org/dc/terms/id> "30edb182-aa75-42c0-b0a9-e998bb29067c";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Powershell AMSI Bypass via .NET Reflection";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Potential Admin Activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*amsiInitFailed.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/mattifestation/status/735261176745988096", "https://www.hybrid-analysis.com/sample/0ced17419e01663a0cd836c9c2eb925e3031ffb5b18ccf35f4dea5d586d0203e?environmentId=120";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1089", "attack.t1562.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/08/17";
  <http://purl.org/dc/terms/creator> "Markus Neis";
  <http://purl.org/dc/terms/description> "Detects Request to amsiInitFailed that can be used to disable AMSI Scanning";
  <http://purl.org/dc/terms/id> "30edb182-aa75-42c0-b0a9-e998bb29067c";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Powershell AMSI Bypass via .NET Reflection";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Potential Admin Activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*amsiInitFailed.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/mattifestation/status/735261176745988096", "https://www.hybrid-analysis.com/sample/0ced17419e01663a0cd836c9c2eb925e3031ffb5b18ccf35f4dea5d586d0203e?environmentId=120";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1089", "attack.t1562.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/08/17";
  <http://purl.org/dc/terms/creator> "Markus Neis";
  <http://purl.org/dc/terms/description> "Detects Request to amsiInitFailed that can be used to disable AMSI Scanning";
  <http://purl.org/dc/terms/id> "30edb182-aa75-42c0-b0a9-e998bb29067c";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Powershell AMSI Bypass via .NET Reflection";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Potential Admin Activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*amsiInitFailed.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/mattifestation/status/735261176745988096", "https://www.hybrid-analysis.com/sample/0ced17419e01663a0cd836c9c2eb925e3031ffb5b18ccf35f4dea5d586d0203e?environmentId=120";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1089", "attack.t1562.001" .

<http://w3id.org/sepses/resource/sigma/sigma-0eb2107b-a596-422e-b123-b389d5594ed7>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/03/04";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Hurricane Panda Activity";
  <http://purl.org/dc/terms/id> "0eb2107b-a596-422e-b123-b389d5594ed7";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Hurricane Panda Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* localgroup administrators admin /add\")
|| regex(str(?cmdLine),\"Win64.exe.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.crowdstrike.com/blog/crowdstrike-discovers-use-64-bit-zero-day-privilege-escalation-exploit-cve-2014-4113-hurricane-panda/";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.g0009", "attack.t1068";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/03/04";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Hurricane Panda Activity";
  <http://purl.org/dc/terms/id> "0eb2107b-a596-422e-b123-b389d5594ed7";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Hurricane Panda Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* localgroup administrators admin /add\")
|| regex(str(?cmdLine),\"Win64.exe.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.crowdstrike.com/blog/crowdstrike-discovers-use-64-bit-zero-day-privilege-escalation-exploit-cve-2014-4113-hurricane-panda/";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.g0009", "attack.t1068";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/03/04";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Hurricane Panda Activity";
  <http://purl.org/dc/terms/id> "0eb2107b-a596-422e-b123-b389d5594ed7";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Hurricane Panda Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* localgroup administrators admin /add\")
|| regex(str(?cmdLine),\"Win64.exe.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.crowdstrike.com/blog/crowdstrike-discovers-use-64-bit-zero-day-privilege-escalation-exploit-cve-2014-4113-hurricane-panda/";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.g0009", "attack.t1068" .

<http://w3id.org/sepses/resource/sigma/sigma-cd219ff3-fa99-45d4-8380-a7d15116c6dc>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/10/30";
  <http://purl.org/dc/terms/creator> "Endgame, JHasenbusch (adapted to sigma for oscd.community)";
  <http://purl.org/dc/terms/description> "Identifies creation of local users via the net.exe command";
  <http://purl.org/dc/terms/id> "cd219ff3-fa99-45d4-8380-a7d15116c6dc";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe User Account Creation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Better use event ids for user creation rather than command line rules",
    "Legit user creation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"user\")
|| regex(str(?cmdLine),\"add\")
)
FILTER (regex(str(?cmdLine),\"\\\\net.exe\")
|| regex(str(?cmdLine),\"\\\\net1.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/014c3f51-89c6-40f1-ac9c-5688f26090ab.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1136/T1136.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.t1136", "attack.t1136.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/10/30";
  <http://purl.org/dc/terms/creator> "Endgame, JHasenbusch (adapted to sigma for oscd.community)";
  <http://purl.org/dc/terms/description> "Identifies creation of local users via the net.exe command";
  <http://purl.org/dc/terms/id> "cd219ff3-fa99-45d4-8380-a7d15116c6dc";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe User Account Creation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Better use event ids for user creation rather than command line rules",
    "Legit user creation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"user\")
|| regex(str(?cmdLine),\"add\")
)
FILTER (regex(str(?cmdLine),\"\\\\net.exe\")
|| regex(str(?cmdLine),\"\\\\net1.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/014c3f51-89c6-40f1-ac9c-5688f26090ab.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1136/T1136.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.t1136", "attack.t1136.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/10/30";
  <http://purl.org/dc/terms/creator> "Endgame, JHasenbusch (adapted to sigma for oscd.community)";
  <http://purl.org/dc/terms/description> "Identifies creation of local users via the net.exe command";
  <http://purl.org/dc/terms/id> "cd219ff3-fa99-45d4-8380-a7d15116c6dc";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe User Account Creation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Better use event ids for user creation rather than command line rules",
    "Legit user creation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"user\")
|| regex(str(?cmdLine),\"add\")
)
FILTER (regex(str(?cmdLine),\"\\\\net.exe\")
|| regex(str(?cmdLine),\"\\\\net1.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/014c3f51-89c6-40f1-ac9c-5688f26090ab.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1136/T1136.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.t1136", "attack.t1136.001" .

<http://w3id.org/sepses/resource/sigma/sigma-410ad193-a728-4107-bc79-4419789fcbf8>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/12/28";
  <http://purl.org/dc/terms/creator> "David Burkett, Florian Roth";
  <http://purl.org/dc/terms/description> "Trickbot enumerates domain/network topology and executes certain commands automatically every few minutes. This detectors attempts to identify that activity based off a command rarely observed in an enterprise network.";
  <http://purl.org/dc/terms/id> "410ad193-a728-4107-bc79-4419789fcbf8";
  <http://purl.org/dc/terms/modified> "2020/11/26";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Trickbot Malware Recon Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Rare System Admin Activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"/domain_trusts /all_trusts\")
)
FILTER (regex(str(?ParentImage),\"\\\\cmd.exe\")
)
FILTER (regex(str(?cmdLine),\"\\\\nltest.exe\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/f74c5157-8508-4ac6-9805-d63fe7b0d399/",
    "https://www.sneakymonkey.net/2019/05/22/trickbot-analysis/";
  rule:hasDetectedRule "attack.discovery", "attack.t1482";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/12/28";
  <http://purl.org/dc/terms/creator> "David Burkett, Florian Roth";
  <http://purl.org/dc/terms/description> "Trickbot enumerates domain/network topology and executes certain commands automatically every few minutes. This detectors attempts to identify that activity based off a command rarely observed in an enterprise network.";
  <http://purl.org/dc/terms/id> "410ad193-a728-4107-bc79-4419789fcbf8";
  <http://purl.org/dc/terms/modified> "2020/11/26";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Trickbot Malware Recon Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Rare System Admin Activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"/domain_trusts /all_trusts\")
)
FILTER (regex(str(?ParentImage),\"\\\\cmd.exe\")
)
FILTER (regex(str(?cmdLine),\"\\\\nltest.exe\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/f74c5157-8508-4ac6-9805-d63fe7b0d399/",
    "https://www.sneakymonkey.net/2019/05/22/trickbot-analysis/";
  rule:hasDetectedRule "attack.discovery", "attack.t1482" .

<http://w3id.org/sepses/resource/sigma/sigma-970007b7-ce32-49d0-a4a4-fbef016950bd>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, oscd.community";
  <http://purl.org/dc/terms/description> "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.";
  <http://purl.org/dc/terms/id> "970007b7-ce32-49d0-a4a4-fbef016950bd";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Query Registry";
  sigma:detectionCondition "selection_1 and selection_2";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"currentVersion\\\\windows\")
|| regex(str(?cmdLine),\"currentVersion\\\\runServicesOnce\")
|| regex(str(?cmdLine),\"currentVersion\\\\runServices\")
|| regex(str(?cmdLine),\"winlogon\\\\\")
|| regex(str(?cmdLine),\"currentVersion\\\\shellServiceObjectDelayLoad\")
|| regex(str(?cmdLine),\"currentVersion\\\\runOnce\")
|| regex(str(?cmdLine),\"currentVersion\\\\runOnceEx\")
|| regex(str(?cmdLine),\"currentVersion\\\\run\")
|| regex(str(?cmdLine),\"currentVersion\\\\policies\\\\explorer\\\\run\")
|| regex(str(?cmdLine),\"currentcontrolset\\\\services\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1012/T1012.yaml";
  rule:hasDetectedRule "attack.discovery", "attack.t1012", "attack.t1007";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, oscd.community";
  <http://purl.org/dc/terms/description> "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.";
  <http://purl.org/dc/terms/id> "970007b7-ce32-49d0-a4a4-fbef016950bd";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Query Registry";
  sigma:detectionCondition "selection_1 and selection_2";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"currentVersion\\\\windows\")
|| regex(str(?cmdLine),\"currentVersion\\\\runServicesOnce\")
|| regex(str(?cmdLine),\"currentVersion\\\\runServices\")
|| regex(str(?cmdLine),\"winlogon\\\\\")
|| regex(str(?cmdLine),\"currentVersion\\\\shellServiceObjectDelayLoad\")
|| regex(str(?cmdLine),\"currentVersion\\\\runOnce\")
|| regex(str(?cmdLine),\"currentVersion\\\\runOnceEx\")
|| regex(str(?cmdLine),\"currentVersion\\\\run\")
|| regex(str(?cmdLine),\"currentVersion\\\\policies\\\\explorer\\\\run\")
|| regex(str(?cmdLine),\"currentcontrolset\\\\services\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1012/T1012.yaml";
  rule:hasDetectedRule "attack.discovery", "attack.t1012", "attack.t1007";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, oscd.community";
  <http://purl.org/dc/terms/description> "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.";
  <http://purl.org/dc/terms/id> "970007b7-ce32-49d0-a4a4-fbef016950bd";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Query Registry";
  sigma:detectionCondition "selection_1 and selection_2";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"currentVersion\\\\windows\")
|| regex(str(?cmdLine),\"currentVersion\\\\runServicesOnce\")
|| regex(str(?cmdLine),\"currentVersion\\\\runServices\")
|| regex(str(?cmdLine),\"winlogon\\\\\")
|| regex(str(?cmdLine),\"currentVersion\\\\shellServiceObjectDelayLoad\")
|| regex(str(?cmdLine),\"currentVersion\\\\runOnce\")
|| regex(str(?cmdLine),\"currentVersion\\\\runOnceEx\")
|| regex(str(?cmdLine),\"currentVersion\\\\run\")
|| regex(str(?cmdLine),\"currentVersion\\\\policies\\\\explorer\\\\run\")
|| regex(str(?cmdLine),\"currentcontrolset\\\\services\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1012/T1012.yaml";
  rule:hasDetectedRule "attack.discovery", "attack.t1012", "attack.t1007" .

<http://w3id.org/sepses/resource/sigma/sigma-6f8b3439-a203-45dc-a88b-abf57ea15ccf>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/22";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule.";
  <http://purl.org/dc/terms/id> "6f8b3439-a203-45dc-a88b-abf57ea15ccf";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "CrackMapExec PowerShell Obfuscation";
  sigma:detectionCondition "powershell_execution and snippets";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"join.*split\")
|| regex(str(?cmdLine),\"( $ShellId[1]+$ShellId[13]+'x')\")
|| regex(str(?cmdLine),\"( $env:Public[13]+$env:Public[5]+'x')\")
|| regex(str(?cmdLine),\"( $env:ComSpec[4,.*,25]-Join'')\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/byt3bl33d3r/CrackMapExec", "https://github.com/byt3bl33d3r/CrackMapExec/blob/0a49f75347b625e81ee6aa8c33d3970b5515ea9e/cme/helpers/powershell.py#L242";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027", "attack.t1027.005";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/22";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule.";
  <http://purl.org/dc/terms/id> "6f8b3439-a203-45dc-a88b-abf57ea15ccf";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "CrackMapExec PowerShell Obfuscation";
  sigma:detectionCondition "powershell_execution and snippets";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"join.*split\")
|| regex(str(?cmdLine),\"( $ShellId[1]+$ShellId[13]+'x')\")
|| regex(str(?cmdLine),\"( $env:Public[13]+$env:Public[5]+'x')\")
|| regex(str(?cmdLine),\"( $env:ComSpec[4,.*,25]-Join'')\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/byt3bl33d3r/CrackMapExec", "https://github.com/byt3bl33d3r/CrackMapExec/blob/0a49f75347b625e81ee6aa8c33d3970b5515ea9e/cme/helpers/powershell.py#L242";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027", "attack.t1027.005";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/22";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule.";
  <http://purl.org/dc/terms/id> "6f8b3439-a203-45dc-a88b-abf57ea15ccf";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "CrackMapExec PowerShell Obfuscation";
  sigma:detectionCondition "powershell_execution and snippets";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"join.*split\")
|| regex(str(?cmdLine),\"( $ShellId[1]+$ShellId[13]+'x')\")
|| regex(str(?cmdLine),\"( $env:Public[13]+$env:Public[5]+'x')\")
|| regex(str(?cmdLine),\"( $env:ComSpec[4,.*,25]-Join'')\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/byt3bl33d3r/CrackMapExec", "https://github.com/byt3bl33d3r/CrackMapExec/blob/0a49f75347b625e81ee6aa8c33d3970b5515ea9e/cme/helpers/powershell.py#L242";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027", "attack.t1027.005";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/22";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule.";
  <http://purl.org/dc/terms/id> "6f8b3439-a203-45dc-a88b-abf57ea15ccf";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "CrackMapExec PowerShell Obfuscation";
  sigma:detectionCondition "powershell_execution and snippets";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"join.*split\")
|| regex(str(?cmdLine),\"( $ShellId[1]+$ShellId[13]+'x')\")
|| regex(str(?cmdLine),\"( $env:Public[13]+$env:Public[5]+'x')\")
|| regex(str(?cmdLine),\"( $env:ComSpec[4,.*,25]-Join'')\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/byt3bl33d3r/CrackMapExec", "https://github.com/byt3bl33d3r/CrackMapExec/blob/0a49f75347b625e81ee6aa8c33d3970b5515ea9e/cme/helpers/powershell.py#L242";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027", "attack.t1027.005";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/22";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule.";
  <http://purl.org/dc/terms/id> "6f8b3439-a203-45dc-a88b-abf57ea15ccf";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "CrackMapExec PowerShell Obfuscation";
  sigma:detectionCondition "powershell_execution and snippets";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"join.*split\")
|| regex(str(?cmdLine),\"( $ShellId[1]+$ShellId[13]+'x')\")
|| regex(str(?cmdLine),\"( $env:Public[13]+$env:Public[5]+'x')\")
|| regex(str(?cmdLine),\"( $env:ComSpec[4,.*,25]-Join'')\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/byt3bl33d3r/CrackMapExec", "https://github.com/byt3bl33d3r/CrackMapExec/blob/0a49f75347b625e81ee6aa8c33d3970b5515ea9e/cme/helpers/powershell.py#L242";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027", "attack.t1027.005";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/22";
  <http://purl.org/dc/terms/creator> "Thomas Patzke";
  <http://purl.org/dc/terms/description> "The CrachMapExec pentesting framework implements a PowerShell obfuscation with some static strings detected by this rule.";
  <http://purl.org/dc/terms/id> "6f8b3439-a203-45dc-a88b-abf57ea15ccf";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "CrackMapExec PowerShell Obfuscation";
  sigma:detectionCondition "powershell_execution and snippets";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"join.*split\")
|| regex(str(?cmdLine),\"( $ShellId[1]+$ShellId[13]+'x')\")
|| regex(str(?cmdLine),\"( $env:Public[13]+$env:Public[5]+'x')\")
|| regex(str(?cmdLine),\"( $env:ComSpec[4,.*,25]-Join'')\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/byt3bl33d3r/CrackMapExec", "https://github.com/byt3bl33d3r/CrackMapExec/blob/0a49f75347b625e81ee6aa8c33d3970b5515ea9e/cme/helpers/powershell.py#L242";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027", "attack.t1027.005" .

<http://w3id.org/sepses/resource/sigma/sigma-faa48cae-6b25-4f00-a094-08947fef582f>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/12";
  <http://purl.org/dc/terms/creator> "@ROxPinTeddy";
  <http://purl.org/dc/terms/description> "Detects the use of rar.exe, on the command line, to create an archive with password protection or with a specific compression level. This is pretty indicative of malicious actions.";
  <http://purl.org/dc/terms/id> "faa48cae-6b25-4f00-a094-08947fef582f";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Rar with Password or Compression Level";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of Winrar command line version", "Other command line tools, that use these flags";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -hp\")
|| regex(str(?cmdLine),\" -m\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://labs.sentinelone.com/the-anatomy-of-an-apt-attack-and-cobaltstrike-beacons-encoded-configuration/";
  rule:hasDetectedRule "attack.collection", "attack.exfiltration", "attack.t1002", "attack.t1560.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/12";
  <http://purl.org/dc/terms/creator> "@ROxPinTeddy";
  <http://purl.org/dc/terms/description> "Detects the use of rar.exe, on the command line, to create an archive with password protection or with a specific compression level. This is pretty indicative of malicious actions.";
  <http://purl.org/dc/terms/id> "faa48cae-6b25-4f00-a094-08947fef582f";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Rar with Password or Compression Level";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of Winrar command line version", "Other command line tools, that use these flags";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -hp\")
|| regex(str(?cmdLine),\" -m\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://labs.sentinelone.com/the-anatomy-of-an-apt-attack-and-cobaltstrike-beacons-encoded-configuration/";
  rule:hasDetectedRule "attack.collection", "attack.exfiltration", "attack.t1002", "attack.t1560.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/12";
  <http://purl.org/dc/terms/creator> "@ROxPinTeddy";
  <http://purl.org/dc/terms/description> "Detects the use of rar.exe, on the command line, to create an archive with password protection or with a specific compression level. This is pretty indicative of malicious actions.";
  <http://purl.org/dc/terms/id> "faa48cae-6b25-4f00-a094-08947fef582f";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Rar with Password or Compression Level";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of Winrar command line version", "Other command line tools, that use these flags";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -hp\")
|| regex(str(?cmdLine),\" -m\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://labs.sentinelone.com/the-anatomy-of-an-apt-attack-and-cobaltstrike-beacons-encoded-configuration/";
  rule:hasDetectedRule "attack.collection", "attack.exfiltration", "attack.t1002", "attack.t1560.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/12";
  <http://purl.org/dc/terms/creator> "@ROxPinTeddy";
  <http://purl.org/dc/terms/description> "Detects the use of rar.exe, on the command line, to create an archive with password protection or with a specific compression level. This is pretty indicative of malicious actions.";
  <http://purl.org/dc/terms/id> "faa48cae-6b25-4f00-a094-08947fef582f";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Rar with Password or Compression Level";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of Winrar command line version", "Other command line tools, that use these flags";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -hp\")
|| regex(str(?cmdLine),\" -m\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://labs.sentinelone.com/the-anatomy-of-an-apt-attack-and-cobaltstrike-beacons-encoded-configuration/";
  rule:hasDetectedRule "attack.collection", "attack.exfiltration", "attack.t1002", "attack.t1560.001" .

<http://w3id.org/sepses/resource/sigma/sigma-855bc8b5-2ae8-402e-a9ed-b889e6df1900>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/12/30";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious copy command from a remote C$ or ADMIN$ share";
  <http://purl.org/dc/terms/id> "855bc8b5-2ae8-402e-a9ed-b889e6df1900";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Copy from Admin Share";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"copy c$\")
|| regex(str(?cmdLine),\"copy ADMIN$\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/SBousseaden/status/1211636381086339073";
  rule:hasDetectedRule "attack.lateral_movement", "attack.command_and_control", "attack.t1105",
    "attack.t1021.002", "attack.t1077", "attack.s0106";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/12/30";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious copy command from a remote C$ or ADMIN$ share";
  <http://purl.org/dc/terms/id> "855bc8b5-2ae8-402e-a9ed-b889e6df1900";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Copy from Admin Share";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"copy c$\")
|| regex(str(?cmdLine),\"copy ADMIN$\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/SBousseaden/status/1211636381086339073";
  rule:hasDetectedRule "attack.lateral_movement", "attack.command_and_control", "attack.t1105",
    "attack.t1021.002", "attack.t1077", "attack.s0106";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/12/30";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious copy command from a remote C$ or ADMIN$ share";
  <http://purl.org/dc/terms/id> "855bc8b5-2ae8-402e-a9ed-b889e6df1900";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Copy from Admin Share";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"copy c$\")
|| regex(str(?cmdLine),\"copy ADMIN$\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/SBousseaden/status/1211636381086339073";
  rule:hasDetectedRule "attack.lateral_movement", "attack.command_and_control", "attack.t1105",
    "attack.t1021.002", "attack.t1077", "attack.s0106";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/12/30";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious copy command from a remote C$ or ADMIN$ share";
  <http://purl.org/dc/terms/id> "855bc8b5-2ae8-402e-a9ed-b889e6df1900";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Copy from Admin Share";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"copy c$\")
|| regex(str(?cmdLine),\"copy ADMIN$\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/SBousseaden/status/1211636381086339073";
  rule:hasDetectedRule "attack.lateral_movement", "attack.command_and_control", "attack.t1105",
    "attack.t1021.002", "attack.t1077", "attack.s0106";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/12/30";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious copy command from a remote C$ or ADMIN$ share";
  <http://purl.org/dc/terms/id> "855bc8b5-2ae8-402e-a9ed-b889e6df1900";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Copy from Admin Share";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"copy c$\")
|| regex(str(?cmdLine),\"copy ADMIN$\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/SBousseaden/status/1211636381086339073";
  rule:hasDetectedRule "attack.lateral_movement", "attack.command_and_control", "attack.t1105",
    "attack.t1021.002", "attack.t1077", "attack.s0106";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/12/30";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious copy command from a remote C$ or ADMIN$ share";
  <http://purl.org/dc/terms/id> "855bc8b5-2ae8-402e-a9ed-b889e6df1900";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Copy from Admin Share";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"copy c$\")
|| regex(str(?cmdLine),\"copy ADMIN$\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/SBousseaden/status/1211636381086339073";
  rule:hasDetectedRule "attack.lateral_movement", "attack.command_and_control", "attack.t1105",
    "attack.t1021.002", "attack.t1077", "attack.s0106" .

<http://w3id.org/sepses/resource/sigma/sigma-add64136-62e5-48ea-807e-88638d02df1e>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/26";
  <http://purl.org/dc/terms/creator> "Ecco, E.M. Anhaus, oscd.community";
  <http://purl.org/dc/terms/description> "Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size..). Might be used by ransomwares during the attack (seen by NotPetya and others)";
  <http://purl.org/dc/terms/id> "add64136-62e5-48ea-807e-88638d02df1e";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/title> "Fsutil Suspicious Invocation";
  sigma:detectionCondition "(1 of binary_.*) and selection";
  sigma:falsePositive "Admin activity", "Scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"deletejournal\")
|| regex(str(?cmdLine),\"createjournal\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-usn",
    "https://eqllib.readthedocs.io/en/latest/analytics/c91f422a-5214-4b17-8664-c5fcf115c0a2.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1070/T1070.yaml";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1070";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/26";
  <http://purl.org/dc/terms/creator> "Ecco, E.M. Anhaus, oscd.community";
  <http://purl.org/dc/terms/description> "Detects suspicious parameters of fsutil (deleting USN journal, configuring it with small size..). Might be used by ransomwares during the attack (seen by NotPetya and others)";
  <http://purl.org/dc/terms/id> "add64136-62e5-48ea-807e-88638d02df1e";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/title> "Fsutil Suspicious Invocation";
  sigma:detectionCondition "(1 of binary_.*) and selection";
  sigma:falsePositive "Admin activity", "Scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"deletejournal\")
|| regex(str(?cmdLine),\"createjournal\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-usn",
    "https://eqllib.readthedocs.io/en/latest/analytics/c91f422a-5214-4b17-8664-c5fcf115c0a2.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1070/T1070.yaml";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1070" .

<http://w3id.org/sepses/resource/sigma/sigma-e312efd0-35a1-407f-8439-b8d434b438a6>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/09";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious encoded character syntax often used for defense evasion";
  <http://purl.org/dc/terms/id> "e312efd0-35a1-407f-8439-b8d434b438a6";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Encoded Character Syntax";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"(WCHAR)0x\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/0gtweet/status/1281103918693482496";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/09";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious encoded character syntax often used for defense evasion";
  <http://purl.org/dc/terms/id> "e312efd0-35a1-407f-8439-b8d434b438a6";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Encoded Character Syntax";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"(WCHAR)0x\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/0gtweet/status/1281103918693482496";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/09";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious encoded character syntax often used for defense evasion";
  <http://purl.org/dc/terms/id> "e312efd0-35a1-407f-8439-b8d434b438a6";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Encoded Character Syntax";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"(WCHAR)0x\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/0gtweet/status/1281103918693482496";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/09";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious encoded character syntax often used for defense evasion";
  <http://purl.org/dc/terms/id> "e312efd0-35a1-407f-8439-b8d434b438a6";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Encoded Character Syntax";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"(WCHAR)0x\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/0gtweet/status/1281103918693482496";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/09";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious encoded character syntax often used for defense evasion";
  <http://purl.org/dc/terms/id> "e312efd0-35a1-407f-8439-b8d434b438a6";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Encoded Character Syntax";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"(WCHAR)0x\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/0gtweet/status/1281103918693482496";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027" .

<http://w3id.org/sepses/resource/sigma/sigma-e7be6119-fc37-43f0-ad4f-1f3f99be2f9f>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Files with well-known filenames (sensitive files with credential data) copying";
  <http://purl.org/dc/terms/id> "e7be6119-fc37-43f0-ad4f-1f3f99be2f9f";
  <http://purl.org/dc/terms/modified> "2019/11/13";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Copying Sensitive Files with Credential Data";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Copying sensitive files for legitimate use (eg. backup) or forensic investigation by legitimate incident responder or forensic invetigator";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://dfironthemountain.wordpress.com/2018/12/06/locked-file-access-using-esentutl-exe/",
    "https://room362.com/post/2013/2013-06-10-volume-shadow-copy-ntdsdit-domain-hashes-remotely-part-1/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.003", "attack.s0404", "car.2013-07-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Files with well-known filenames (sensitive files with credential data) copying";
  <http://purl.org/dc/terms/id> "e7be6119-fc37-43f0-ad4f-1f3f99be2f9f";
  <http://purl.org/dc/terms/modified> "2019/11/13";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Copying Sensitive Files with Credential Data";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Copying sensitive files for legitimate use (eg. backup) or forensic investigation by legitimate incident responder or forensic invetigator";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://dfironthemountain.wordpress.com/2018/12/06/locked-file-access-using-esentutl-exe/",
    "https://room362.com/post/2013/2013-06-10-volume-shadow-copy-ntdsdit-domain-hashes-remotely-part-1/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.003", "attack.s0404", "car.2013-07-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Files with well-known filenames (sensitive files with credential data) copying";
  <http://purl.org/dc/terms/id> "e7be6119-fc37-43f0-ad4f-1f3f99be2f9f";
  <http://purl.org/dc/terms/modified> "2019/11/13";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Copying Sensitive Files with Credential Data";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Copying sensitive files for legitimate use (eg. backup) or forensic investigation by legitimate incident responder or forensic invetigator";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://dfironthemountain.wordpress.com/2018/12/06/locked-file-access-using-esentutl-exe/",
    "https://room362.com/post/2013/2013-06-10-volume-shadow-copy-ntdsdit-domain-hashes-remotely-part-1/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.003", "attack.s0404", "car.2013-07-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Files with well-known filenames (sensitive files with credential data) copying";
  <http://purl.org/dc/terms/id> "e7be6119-fc37-43f0-ad4f-1f3f99be2f9f";
  <http://purl.org/dc/terms/modified> "2019/11/13";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Copying Sensitive Files with Credential Data";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Copying sensitive files for legitimate use (eg. backup) or forensic investigation by legitimate incident responder or forensic invetigator";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://dfironthemountain.wordpress.com/2018/12/06/locked-file-access-using-esentutl-exe/",
    "https://room362.com/post/2013/2013-06-10-volume-shadow-copy-ntdsdit-domain-hashes-remotely-part-1/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.003", "attack.s0404", "car.2013-07-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Files with well-known filenames (sensitive files with credential data) copying";
  <http://purl.org/dc/terms/id> "e7be6119-fc37-43f0-ad4f-1f3f99be2f9f";
  <http://purl.org/dc/terms/modified> "2019/11/13";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Copying Sensitive Files with Credential Data";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Copying sensitive files for legitimate use (eg. backup) or forensic investigation by legitimate incident responder or forensic invetigator";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://dfironthemountain.wordpress.com/2018/12/06/locked-file-access-using-esentutl-exe/",
    "https://room362.com/post/2013/2013-06-10-volume-shadow-copy-ntdsdit-domain-hashes-remotely-part-1/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.003", "attack.s0404", "car.2013-07-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Files with well-known filenames (sensitive files with credential data) copying";
  <http://purl.org/dc/terms/id> "e7be6119-fc37-43f0-ad4f-1f3f99be2f9f";
  <http://purl.org/dc/terms/modified> "2019/11/13";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Copying Sensitive Files with Credential Data";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Copying sensitive files for legitimate use (eg. backup) or forensic investigation by legitimate incident responder or forensic invetigator";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://dfironthemountain.wordpress.com/2018/12/06/locked-file-access-using-esentutl-exe/",
    "https://room362.com/post/2013/2013-06-10-volume-shadow-copy-ntdsdit-domain-hashes-remotely-part-1/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.003", "attack.s0404", "car.2013-07-001" .

<http://w3id.org/sepses/resource/sigma/sigma-27a72a60-7e5e-47b1-9d17-909c9abafdcd>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/15";
  <http://purl.org/dc/terms/creator> "Florian Roth, Samir Bousseaden";
  <http://purl.org/dc/terms/description> "Detects suspicious command line arguments of common data compression tools";
  <http://purl.org/dc/terms/id> "27a72a60-7e5e-47b1-9d17-909c9abafdcd";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Compression Tool Parameters";
  sigma:detectionCondition "selection and not falsepositive";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :OriginalFileName ?OriginalFileName.
FILTER (regex(str(?cmdLine),\".* -p.*\")
|| regex(str(?cmdLine),\".* -ta.*\")
|| regex(str(?cmdLine),\".* -tb.*\")
|| regex(str(?cmdLine),\".* -sdel.*\")
|| regex(str(?cmdLine),\".* -dw.*\")
|| regex(str(?cmdLine),\".* -hp.*\")
)
FILTER (regex(str(?OriginalFileName),\"7z.*.exe\")
|| regex(str(?OriginalFileName),\".*rar.exe\")
|| regex(str(?OriginalFileName),\".*Command.*Line.*RAR.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/SBousseaden/status/1184067445612535811";
  rule:hasDetectedRule "attack.collection", "attack.exfiltration", "attack.t1002", "attack.t1560.001",
    "attack.t1020";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/15";
  <http://purl.org/dc/terms/creator> "Florian Roth, Samir Bousseaden";
  <http://purl.org/dc/terms/description> "Detects suspicious command line arguments of common data compression tools";
  <http://purl.org/dc/terms/id> "27a72a60-7e5e-47b1-9d17-909c9abafdcd";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Compression Tool Parameters";
  sigma:detectionCondition "selection and not falsepositive";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :OriginalFileName ?OriginalFileName.
FILTER (regex(str(?cmdLine),\".* -p.*\")
|| regex(str(?cmdLine),\".* -ta.*\")
|| regex(str(?cmdLine),\".* -tb.*\")
|| regex(str(?cmdLine),\".* -sdel.*\")
|| regex(str(?cmdLine),\".* -dw.*\")
|| regex(str(?cmdLine),\".* -hp.*\")
)
FILTER (regex(str(?OriginalFileName),\"7z.*.exe\")
|| regex(str(?OriginalFileName),\".*rar.exe\")
|| regex(str(?OriginalFileName),\".*Command.*Line.*RAR.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/SBousseaden/status/1184067445612535811";
  rule:hasDetectedRule "attack.collection", "attack.exfiltration", "attack.t1002", "attack.t1560.001",
    "attack.t1020";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/15";
  <http://purl.org/dc/terms/creator> "Florian Roth, Samir Bousseaden";
  <http://purl.org/dc/terms/description> "Detects suspicious command line arguments of common data compression tools";
  <http://purl.org/dc/terms/id> "27a72a60-7e5e-47b1-9d17-909c9abafdcd";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Compression Tool Parameters";
  sigma:detectionCondition "selection and not falsepositive";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :OriginalFileName ?OriginalFileName.
FILTER (regex(str(?cmdLine),\".* -p.*\")
|| regex(str(?cmdLine),\".* -ta.*\")
|| regex(str(?cmdLine),\".* -tb.*\")
|| regex(str(?cmdLine),\".* -sdel.*\")
|| regex(str(?cmdLine),\".* -dw.*\")
|| regex(str(?cmdLine),\".* -hp.*\")
)
FILTER (regex(str(?OriginalFileName),\"7z.*.exe\")
|| regex(str(?OriginalFileName),\".*rar.exe\")
|| regex(str(?OriginalFileName),\".*Command.*Line.*RAR.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/SBousseaden/status/1184067445612535811";
  rule:hasDetectedRule "attack.collection", "attack.exfiltration", "attack.t1002", "attack.t1560.001",
    "attack.t1020";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/15";
  <http://purl.org/dc/terms/creator> "Florian Roth, Samir Bousseaden";
  <http://purl.org/dc/terms/description> "Detects suspicious command line arguments of common data compression tools";
  <http://purl.org/dc/terms/id> "27a72a60-7e5e-47b1-9d17-909c9abafdcd";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Compression Tool Parameters";
  sigma:detectionCondition "selection and not falsepositive";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :OriginalFileName ?OriginalFileName.
FILTER (regex(str(?cmdLine),\".* -p.*\")
|| regex(str(?cmdLine),\".* -ta.*\")
|| regex(str(?cmdLine),\".* -tb.*\")
|| regex(str(?cmdLine),\".* -sdel.*\")
|| regex(str(?cmdLine),\".* -dw.*\")
|| regex(str(?cmdLine),\".* -hp.*\")
)
FILTER (regex(str(?OriginalFileName),\"7z.*.exe\")
|| regex(str(?OriginalFileName),\".*rar.exe\")
|| regex(str(?OriginalFileName),\".*Command.*Line.*RAR.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/SBousseaden/status/1184067445612535811";
  rule:hasDetectedRule "attack.collection", "attack.exfiltration", "attack.t1002", "attack.t1560.001",
    "attack.t1020";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/15";
  <http://purl.org/dc/terms/creator> "Florian Roth, Samir Bousseaden";
  <http://purl.org/dc/terms/description> "Detects suspicious command line arguments of common data compression tools";
  <http://purl.org/dc/terms/id> "27a72a60-7e5e-47b1-9d17-909c9abafdcd";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Compression Tool Parameters";
  sigma:detectionCondition "selection and not falsepositive";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :OriginalFileName ?OriginalFileName.
FILTER (regex(str(?cmdLine),\".* -p.*\")
|| regex(str(?cmdLine),\".* -ta.*\")
|| regex(str(?cmdLine),\".* -tb.*\")
|| regex(str(?cmdLine),\".* -sdel.*\")
|| regex(str(?cmdLine),\".* -dw.*\")
|| regex(str(?cmdLine),\".* -hp.*\")
)
FILTER (regex(str(?OriginalFileName),\"7z.*.exe\")
|| regex(str(?OriginalFileName),\".*rar.exe\")
|| regex(str(?OriginalFileName),\".*Command.*Line.*RAR.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/SBousseaden/status/1184067445612535811";
  rule:hasDetectedRule "attack.collection", "attack.exfiltration", "attack.t1002", "attack.t1560.001",
    "attack.t1020" .

<http://w3id.org/sepses/resource/sigma/sigma-42b1a5b8-353f-4f10-b256-39de4467faff>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/04/20";
  <http://purl.org/dc/terms/creator> "Andreas Hunkeler (@Karneades)";
  <http://purl.org/dc/terms/description> "Detect the harvesting of wifi credentials using netsh.exe";
  <http://purl.org/dc/terms/id> "42b1a5b8-353f-4f10-b256-39de4467faff";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Harvesting of Wifi Credentials Using netsh.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator or user uses netsh.exe wlan functionality for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh wlan s.* p.* k.*=clear\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.malwarebytes.com/threat-analysis/2020/04/new-agenttesla-variant-steals-wifi-credentials/";
  rule:hasDetectedRule "attack.credential_access", "attack.discovery", "attack.t1040";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/04/20";
  <http://purl.org/dc/terms/creator> "Andreas Hunkeler (@Karneades)";
  <http://purl.org/dc/terms/description> "Detect the harvesting of wifi credentials using netsh.exe";
  <http://purl.org/dc/terms/id> "42b1a5b8-353f-4f10-b256-39de4467faff";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Harvesting of Wifi Credentials Using netsh.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator or user uses netsh.exe wlan functionality for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh wlan s.* p.* k.*=clear\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.malwarebytes.com/threat-analysis/2020/04/new-agenttesla-variant-steals-wifi-credentials/";
  rule:hasDetectedRule "attack.credential_access", "attack.discovery", "attack.t1040";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/04/20";
  <http://purl.org/dc/terms/creator> "Andreas Hunkeler (@Karneades)";
  <http://purl.org/dc/terms/description> "Detect the harvesting of wifi credentials using netsh.exe";
  <http://purl.org/dc/terms/id> "42b1a5b8-353f-4f10-b256-39de4467faff";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Harvesting of Wifi Credentials Using netsh.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator or user uses netsh.exe wlan functionality for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh wlan s.* p.* k.*=clear\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.malwarebytes.com/threat-analysis/2020/04/new-agenttesla-variant-steals-wifi-credentials/";
  rule:hasDetectedRule "attack.credential_access", "attack.discovery", "attack.t1040" .

<http://w3id.org/sepses/resource/sigma/sigma-00bca14a-df4e-4649-9054-3f2aa676bc04>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/03";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious curl process start the adds a file to a web request";
  <http://purl.org/dc/terms/id> "00bca14a-df4e-4649-9054-3f2aa676bc04";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Curl File Upload";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Scripts created by developers and admins";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\" -F \")
FILTER regex(str(?cmdLine),\"\\\\curl.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://medium.com/@petehouston/upload-files-with-curl-93064dcccc76",
    "https://twitter.com/d1r4c/status/1279042657508081664";
  rule:hasDetectedRule "attack.exfiltration", "attack.t1567";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/03";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious curl process start the adds a file to a web request";
  <http://purl.org/dc/terms/id> "00bca14a-df4e-4649-9054-3f2aa676bc04";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Curl File Upload";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Scripts created by developers and admins";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\" -F \")
FILTER regex(str(?cmdLine),\"\\\\curl.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://medium.com/@petehouston/upload-files-with-curl-93064dcccc76",
    "https://twitter.com/d1r4c/status/1279042657508081664";
  rule:hasDetectedRule "attack.exfiltration", "attack.t1567" .

<http://w3id.org/sepses/resource/sigma/sigma-02e0b2ea-a597-428e-b04a-af6a1a403e5c>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/20";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects an explotation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM";
  <http://purl.org/dc/terms/id> "02e0b2ea-a597-428e-b04a-af6a1a403e5c";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Exploiting CVE-2019-1388";
  sigma:detectionCondition "selection and ( rights1 or rights2 )";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?ParentImage),\"consent.exe\")
FILTER regex(str(?cmdLine),\".* http.*\")
FILTER regex(str(?cmdLine),\"iexplore.exe\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-1388",
    "https://www.zerodayinitiative.com/blog/2019/11/19/thanksgiving-treat-easy-as-pie-windows-7-secure-desktop-escalation-of-privilege";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.t1068";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/20";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects an explotation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM";
  <http://purl.org/dc/terms/id> "02e0b2ea-a597-428e-b04a-af6a1a403e5c";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Exploiting CVE-2019-1388";
  sigma:detectionCondition "selection and ( rights1 or rights2 )";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?ParentImage),\"consent.exe\")
FILTER regex(str(?cmdLine),\".* http.*\")
FILTER regex(str(?cmdLine),\"iexplore.exe\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-1388",
    "https://www.zerodayinitiative.com/blog/2019/11/19/thanksgiving-treat-easy-as-pie-windows-7-secure-desktop-escalation-of-privilege";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.t1068" .

<http://w3id.org/sepses/resource/sigma/sigma-1ac8666b-046f-4201-8aba-1951aaec03a3>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)";
  <http://purl.org/dc/terms/id> "1ac8666b-046f-4201-8aba-1951aaec03a3";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Command Line Execution with Suspicious URL and AppData Strings";
  sigma:detectionCondition "selection";
  sigma:falsePositive "High";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"cmd.exe /c .*http://.*%AppData%\")
|| regex(str(?cmdLine),\"cmd.exe /c .*https://.*%AppData%\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/3a1f01206684410dbe8f1900bbeaaa543adfcd07368ba646b499fa5274b9edf6?environmentId=100",
    "https://www.hybrid-analysis.com/sample/f16c729aad5c74f19784a24257236a8bbe27f7cdc4a89806031ec7f1bebbd475?environmentId=100";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.command_and_control",
    "attack.t1105", "attack.t1059.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)";
  <http://purl.org/dc/terms/id> "1ac8666b-046f-4201-8aba-1951aaec03a3";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Command Line Execution with Suspicious URL and AppData Strings";
  sigma:detectionCondition "selection";
  sigma:falsePositive "High";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"cmd.exe /c .*http://.*%AppData%\")
|| regex(str(?cmdLine),\"cmd.exe /c .*https://.*%AppData%\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/3a1f01206684410dbe8f1900bbeaaa543adfcd07368ba646b499fa5274b9edf6?environmentId=100",
    "https://www.hybrid-analysis.com/sample/f16c729aad5c74f19784a24257236a8bbe27f7cdc4a89806031ec7f1bebbd475?environmentId=100";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.command_and_control",
    "attack.t1105", "attack.t1059.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)";
  <http://purl.org/dc/terms/id> "1ac8666b-046f-4201-8aba-1951aaec03a3";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Command Line Execution with Suspicious URL and AppData Strings";
  sigma:detectionCondition "selection";
  sigma:falsePositive "High";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"cmd.exe /c .*http://.*%AppData%\")
|| regex(str(?cmdLine),\"cmd.exe /c .*https://.*%AppData%\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/3a1f01206684410dbe8f1900bbeaaa543adfcd07368ba646b499fa5274b9edf6?environmentId=100",
    "https://www.hybrid-analysis.com/sample/f16c729aad5c74f19784a24257236a8bbe27f7cdc4a89806031ec7f1bebbd475?environmentId=100";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.command_and_control",
    "attack.t1105", "attack.t1059.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)";
  <http://purl.org/dc/terms/id> "1ac8666b-046f-4201-8aba-1951aaec03a3";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Command Line Execution with Suspicious URL and AppData Strings";
  sigma:detectionCondition "selection";
  sigma:falsePositive "High";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"cmd.exe /c .*http://.*%AppData%\")
|| regex(str(?cmdLine),\"cmd.exe /c .*https://.*%AppData%\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/3a1f01206684410dbe8f1900bbeaaa543adfcd07368ba646b499fa5274b9edf6?environmentId=100",
    "https://www.hybrid-analysis.com/sample/f16c729aad5c74f19784a24257236a8bbe27f7cdc4a89806031ec7f1bebbd475?environmentId=100";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.command_and_control",
    "attack.t1105", "attack.t1059.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)";
  <http://purl.org/dc/terms/id> "1ac8666b-046f-4201-8aba-1951aaec03a3";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Command Line Execution with Suspicious URL and AppData Strings";
  sigma:detectionCondition "selection";
  sigma:falsePositive "High";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"cmd.exe /c .*http://.*%AppData%\")
|| regex(str(?cmdLine),\"cmd.exe /c .*https://.*%AppData%\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/3a1f01206684410dbe8f1900bbeaaa543adfcd07368ba646b499fa5274b9edf6?environmentId=100",
    "https://www.hybrid-analysis.com/sample/f16c729aad5c74f19784a24257236a8bbe27f7cdc4a89806031ec7f1bebbd475?environmentId=100";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.command_and_control",
    "attack.t1105", "attack.t1059.003" .

<http://w3id.org/sepses/resource/sigma/sigma-4bf943c6-5146-4273-98dd-e958fd1e3abf>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/08";
  <http://purl.org/dc/terms/creator> "Daniel Bohannon (@Mandiant/@FireEye), oscd.community";
  <http://purl.org/dc/terms/description> "Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block — https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888";
  <http://purl.org/dc/terms/id> "4bf943c6-5146-4273-98dd-e958fd1e3abf";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Invoke-Obfuscation Obfuscated IEX Invocation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"\\\\String\\\\]\\\\s$VerbosePreference\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/08";
  <http://purl.org/dc/terms/creator> "Daniel Bohannon (@Mandiant/@FireEye), oscd.community";
  <http://purl.org/dc/terms/description> "Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block — https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888";
  <http://purl.org/dc/terms/id> "4bf943c6-5146-4273-98dd-e958fd1e3abf";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Invoke-Obfuscation Obfuscated IEX Invocation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"\\\\String\\\\]\\\\s$VerbosePreference\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/08";
  <http://purl.org/dc/terms/creator> "Daniel Bohannon (@Mandiant/@FireEye), oscd.community";
  <http://purl.org/dc/terms/description> "Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block — https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888";
  <http://purl.org/dc/terms/id> "4bf943c6-5146-4273-98dd-e958fd1e3abf";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Invoke-Obfuscation Obfuscated IEX Invocation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"\\\\String\\\\]\\\\s$VerbosePreference\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/08";
  <http://purl.org/dc/terms/creator> "Daniel Bohannon (@Mandiant/@FireEye), oscd.community";
  <http://purl.org/dc/terms/description> "Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block — https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888";
  <http://purl.org/dc/terms/id> "4bf943c6-5146-4273-98dd-e958fd1e3abf";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Invoke-Obfuscation Obfuscated IEX Invocation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"\\\\String\\\\]\\\\s$VerbosePreference\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/08";
  <http://purl.org/dc/terms/creator> "Daniel Bohannon (@Mandiant/@FireEye), oscd.community";
  <http://purl.org/dc/terms/description> "Detects all variations of obfuscated powershell IEX invocation code generated by Invoke-Obfuscation framework from the following code block — https://github.com/danielbohannon/Invoke-Obfuscation/blob/master/Out-ObfuscatedStringCommand.ps1#L873-L888";
  <http://purl.org/dc/terms/id> "4bf943c6-5146-4273-98dd-e958fd1e3abf";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Invoke-Obfuscation Obfuscated IEX Invocation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"\\\\String\\\\]\\\\s$VerbosePreference\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027" .

<http://w3id.org/sepses/resource/sigma/sigma-57c4bf16-227f-4394-8ec7-1b745ee061c3>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/01";
  <http://purl.org/dc/terms/creator> "Fatih Sirin";
  <http://purl.org/dc/terms/description> "Detects netsh commands that turns off the Windows firewall";
  <http://purl.org/dc/terms/id> "57c4bf16-227f-4394-8ec7-1b745ee061c3";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Firewall Disabled via Netsh";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh firewall set opmode mode=disable\")
|| regex(str(?cmdLine),\"netsh advfirewall set .* state off\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/210244b9-0b6b-4a2c-83a3-04bd3175d017/",
    "https://www.winhelponline.com/blog/enable-and-disable-windows-firewall-quickly-using-command-line/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1562.004", "attack.s0108";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/01";
  <http://purl.org/dc/terms/creator> "Fatih Sirin";
  <http://purl.org/dc/terms/description> "Detects netsh commands that turns off the Windows firewall";
  <http://purl.org/dc/terms/id> "57c4bf16-227f-4394-8ec7-1b745ee061c3";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Firewall Disabled via Netsh";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh firewall set opmode mode=disable\")
|| regex(str(?cmdLine),\"netsh advfirewall set .* state off\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/210244b9-0b6b-4a2c-83a3-04bd3175d017/",
    "https://www.winhelponline.com/blog/enable-and-disable-windows-firewall-quickly-using-command-line/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1562.004", "attack.s0108";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/01";
  <http://purl.org/dc/terms/creator> "Fatih Sirin";
  <http://purl.org/dc/terms/description> "Detects netsh commands that turns off the Windows firewall";
  <http://purl.org/dc/terms/id> "57c4bf16-227f-4394-8ec7-1b745ee061c3";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Firewall Disabled via Netsh";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh firewall set opmode mode=disable\")
|| regex(str(?cmdLine),\"netsh advfirewall set .* state off\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/210244b9-0b6b-4a2c-83a3-04bd3175d017/",
    "https://www.winhelponline.com/blog/enable-and-disable-windows-firewall-quickly-using-command-line/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1562.004", "attack.s0108" .

<http://w3id.org/sepses/resource/sigma/sigma-526be59f-a573-4eea-b5f7-f0973207634d>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Florian Roth, juju4";
  <http://purl.org/dc/terms/description> "Detects WMI executing suspicious commands";
  <http://purl.org/dc/terms/id> "526be59f-a573-4eea-b5f7-f0973207634d";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious WMI Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "If using Splunk, we recommend | stats count by Computer,CommandLine following for easy hunting by Computer/CommandLine";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*/NODE:.*process call create .*\")
|| regex(str(?cmdLine),\".* path AntiVirusProduct get .*\")
|| regex(str(?cmdLine),\".* path FirewallProduct get .*\")
|| regex(str(?cmdLine),\".* shadowcopy delete .*\")
)
FILTER (regex(str(?cmdLine),\"wmic.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.malwarebytes.com/threat-analysis/2016/04/rokku-ransomware/",
    "https://digital-forensics.sans.org/blog/2010/06/04/wmic-draft/", "https://www.hybrid-analysis.com/sample/4be06ecd234e2110bd615649fe4a6fa95403979acf889d7e45a78985eb50acf9?environmentId=1";
  rule:hasDetectedRule "attack.execution", "attack.t1047", "car.2016-03-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Florian Roth, juju4";
  <http://purl.org/dc/terms/description> "Detects WMI executing suspicious commands";
  <http://purl.org/dc/terms/id> "526be59f-a573-4eea-b5f7-f0973207634d";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious WMI Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "If using Splunk, we recommend | stats count by Computer,CommandLine following for easy hunting by Computer/CommandLine";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*/NODE:.*process call create .*\")
|| regex(str(?cmdLine),\".* path AntiVirusProduct get .*\")
|| regex(str(?cmdLine),\".* path FirewallProduct get .*\")
|| regex(str(?cmdLine),\".* shadowcopy delete .*\")
)
FILTER (regex(str(?cmdLine),\"wmic.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.malwarebytes.com/threat-analysis/2016/04/rokku-ransomware/",
    "https://digital-forensics.sans.org/blog/2010/06/04/wmic-draft/", "https://www.hybrid-analysis.com/sample/4be06ecd234e2110bd615649fe4a6fa95403979acf889d7e45a78985eb50acf9?environmentId=1";
  rule:hasDetectedRule "attack.execution", "attack.t1047", "car.2016-03-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Florian Roth, juju4";
  <http://purl.org/dc/terms/description> "Detects WMI executing suspicious commands";
  <http://purl.org/dc/terms/id> "526be59f-a573-4eea-b5f7-f0973207634d";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious WMI Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "If using Splunk, we recommend | stats count by Computer,CommandLine following for easy hunting by Computer/CommandLine";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*/NODE:.*process call create .*\")
|| regex(str(?cmdLine),\".* path AntiVirusProduct get .*\")
|| regex(str(?cmdLine),\".* path FirewallProduct get .*\")
|| regex(str(?cmdLine),\".* shadowcopy delete .*\")
)
FILTER (regex(str(?cmdLine),\"wmic.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.malwarebytes.com/threat-analysis/2016/04/rokku-ransomware/",
    "https://digital-forensics.sans.org/blog/2010/06/04/wmic-draft/", "https://www.hybrid-analysis.com/sample/4be06ecd234e2110bd615649fe4a6fa95403979acf889d7e45a78985eb50acf9?environmentId=1";
  rule:hasDetectedRule "attack.execution", "attack.t1047", "car.2016-03-002" .

<http://w3id.org/sepses/resource/sigma/sigma-cd5cfd80-aa5f-44c0-9c20-108c4ae12e3c>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/29";
  <http://purl.org/dc/terms/creator> "Markus Neis, Sander Wiebing";
  <http://purl.org/dc/terms/description> "Allow Incoming Connections by Port or Application on Windows Firewall";
  <http://purl.org/dc/terms/id> "cd5cfd80-aa5f-44c0-9c20-108c4ae12e3c";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Netsh Port or Application Allowed";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*firewall add.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://attack.mitre.org/software/S0246/ (Lazarus HARDRAIN)", "https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-RAT-and-Staging-Report.pdf";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1089", "attack.t1562.004";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/29";
  <http://purl.org/dc/terms/creator> "Markus Neis, Sander Wiebing";
  <http://purl.org/dc/terms/description> "Allow Incoming Connections by Port or Application on Windows Firewall";
  <http://purl.org/dc/terms/id> "cd5cfd80-aa5f-44c0-9c20-108c4ae12e3c";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Netsh Port or Application Allowed";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*firewall add.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://attack.mitre.org/software/S0246/ (Lazarus HARDRAIN)", "https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-RAT-and-Staging-Report.pdf";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1089", "attack.t1562.004";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/29";
  <http://purl.org/dc/terms/creator> "Markus Neis, Sander Wiebing";
  <http://purl.org/dc/terms/description> "Allow Incoming Connections by Port or Application on Windows Firewall";
  <http://purl.org/dc/terms/id> "cd5cfd80-aa5f-44c0-9c20-108c4ae12e3c";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Netsh Port or Application Allowed";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*firewall add.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://attack.mitre.org/software/S0246/ (Lazarus HARDRAIN)", "https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-RAT-and-Staging-Report.pdf";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1089", "attack.t1562.004" .

<http://w3id.org/sepses/resource/sigma/sigma-77815820-246c-47b8-9741-e0def3f57308>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/23";
  <http://purl.org/dc/terms/creator> "Jakob Weinzettl, oscd.community";
  <http://purl.org/dc/terms/description> "Detects a discovery of domain trusts";
  <http://purl.org/dc/terms/id> "77815820-246c-47b8-9741-e0def3f57308";
  <http://purl.org/dc/terms/modified> "2019/11/08";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Domain Trust Discovery";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administration of systems";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"domain_trusts\")
FILTER regex(str(?cmdLine),\"\\\\nltest.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1482/T1482.yaml";
  rule:hasDetectedRule "attack.discovery", "attack.t1482";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/23";
  <http://purl.org/dc/terms/creator> "Jakob Weinzettl, oscd.community";
  <http://purl.org/dc/terms/description> "Detects a discovery of domain trusts";
  <http://purl.org/dc/terms/id> "77815820-246c-47b8-9741-e0def3f57308";
  <http://purl.org/dc/terms/modified> "2019/11/08";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Domain Trust Discovery";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administration of systems";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"domain_trusts\")
FILTER regex(str(?cmdLine),\"\\\\nltest.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1482/T1482.yaml";
  rule:hasDetectedRule "attack.discovery", "attack.t1482" .

<http://w3id.org/sepses/resource/sigma/sigma-79f4ede3-402e-41c8-bc3e-ebbf5f162581>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/04/20";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious powershell command line parameters used in Empire";
  <http://purl.org/dc/terms/id> "79f4ede3-402e-41c8-bc3e-ebbf5f162581";
  <http://purl.org/dc/terms/modified> "2020/07/13";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Empire PowerShell Launch Parameters";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -NoP -sta -NonI -W Hidden -Enc \")
|| regex(str(?cmdLine),\" -noP -sta -w 1 -enc \")
|| regex(str(?cmdLine),\" -NoP -NonI -W Hidden -enc \")
|| regex(str(?cmdLine),\" -noP -sta -w 1 -enc\")
|| regex(str(?cmdLine),\" -enc  SQB\")
|| regex(str(?cmdLine),\" -nop -exec bypass -EncodedCommand SQB\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/EmpireProject/Empire/blob/c2ba61ca8d2031dad0cfc1d5770ba723e8b710db/lib/common/helpers.py#L165",
    "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64",
    "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/deaduser.py#L191",
    "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/resolver.py#L178";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/04/20";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious powershell command line parameters used in Empire";
  <http://purl.org/dc/terms/id> "79f4ede3-402e-41c8-bc3e-ebbf5f162581";
  <http://purl.org/dc/terms/modified> "2020/07/13";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Empire PowerShell Launch Parameters";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -NoP -sta -NonI -W Hidden -Enc \")
|| regex(str(?cmdLine),\" -noP -sta -w 1 -enc \")
|| regex(str(?cmdLine),\" -NoP -NonI -W Hidden -enc \")
|| regex(str(?cmdLine),\" -noP -sta -w 1 -enc\")
|| regex(str(?cmdLine),\" -enc  SQB\")
|| regex(str(?cmdLine),\" -nop -exec bypass -EncodedCommand SQB\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/EmpireProject/Empire/blob/c2ba61ca8d2031dad0cfc1d5770ba723e8b710db/lib/common/helpers.py#L165",
    "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64",
    "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/deaduser.py#L191",
    "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/resolver.py#L178";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/04/20";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious powershell command line parameters used in Empire";
  <http://purl.org/dc/terms/id> "79f4ede3-402e-41c8-bc3e-ebbf5f162581";
  <http://purl.org/dc/terms/modified> "2020/07/13";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Empire PowerShell Launch Parameters";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -NoP -sta -NonI -W Hidden -Enc \")
|| regex(str(?cmdLine),\" -noP -sta -w 1 -enc \")
|| regex(str(?cmdLine),\" -NoP -NonI -W Hidden -enc \")
|| regex(str(?cmdLine),\" -noP -sta -w 1 -enc\")
|| regex(str(?cmdLine),\" -enc  SQB\")
|| regex(str(?cmdLine),\" -nop -exec bypass -EncodedCommand SQB\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/EmpireProject/Empire/blob/c2ba61ca8d2031dad0cfc1d5770ba723e8b710db/lib/common/helpers.py#L165",
    "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64",
    "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/deaduser.py#L191",
    "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/resolver.py#L178";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086" .

<http://w3id.org/sepses/resource/sigma/sigma-46123129-1024-423e-9fae-43af4a0fa9a5>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/09/04";
  <http://purl.org/dc/terms/creator> "Matthew Matchen";
  <http://purl.org/dc/terms/description> "Detect the use of Windows Defender to download payloads";
  <http://purl.org/dc/terms/id> "46123129-1024-423e-9fae-43af4a0fa9a5";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Windows Defender Download Activity";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"DownloadFile\")
|| regex(str(?cmdLine),\"url\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://lolbas-project.github.io/lolbas/Binaries/MpCmdRun/", "https://twitter.com/djmtshepana/status/1301608169496612866";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1218.010", "attack.command_and_control",
    "attack.t1105";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/09/04";
  <http://purl.org/dc/terms/creator> "Matthew Matchen";
  <http://purl.org/dc/terms/description> "Detect the use of Windows Defender to download payloads";
  <http://purl.org/dc/terms/id> "46123129-1024-423e-9fae-43af4a0fa9a5";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Windows Defender Download Activity";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"DownloadFile\")
|| regex(str(?cmdLine),\"url\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://lolbas-project.github.io/lolbas/Binaries/MpCmdRun/", "https://twitter.com/djmtshepana/status/1301608169496612866";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1218.010", "attack.command_and_control",
    "attack.t1105";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/09/04";
  <http://purl.org/dc/terms/creator> "Matthew Matchen";
  <http://purl.org/dc/terms/description> "Detect the use of Windows Defender to download payloads";
  <http://purl.org/dc/terms/id> "46123129-1024-423e-9fae-43af4a0fa9a5";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Windows Defender Download Activity";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"DownloadFile\")
|| regex(str(?cmdLine),\"url\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://lolbas-project.github.io/lolbas/Binaries/MpCmdRun/", "https://twitter.com/djmtshepana/status/1301608169496612866";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1218.010", "attack.command_and_control",
    "attack.t1105";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/09/04";
  <http://purl.org/dc/terms/creator> "Matthew Matchen";
  <http://purl.org/dc/terms/description> "Detect the use of Windows Defender to download payloads";
  <http://purl.org/dc/terms/id> "46123129-1024-423e-9fae-43af4a0fa9a5";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Windows Defender Download Activity";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"DownloadFile\")
|| regex(str(?cmdLine),\"url\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://lolbas-project.github.io/lolbas/Binaries/MpCmdRun/", "https://twitter.com/djmtshepana/status/1301608169496612866";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1218.010", "attack.command_and_control",
    "attack.t1105" .

<http://w3id.org/sepses/resource/sigma/sigma-a642964e-bead-4bed-8910-1bb4d63e3b4d>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, oscd.community";
  <http://purl.org/dc/terms/description> "Detection well-known mimikatz command line arguments";
  <http://purl.org/dc/terms/id> "a642964e-bead-4bed-8910-1bb4d63e3b4d";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Mimikatz Command Line";
  sigma:detectionCondition "selection_1 or selection_2 and selection_3";
  sigma:falsePositive "Legitimate Administrator using tool for password recovery";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"::\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.006",
    "attack.t1003.001", "attack.t1003.002", "attack.t1003.004", "attack.t1003.005";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, oscd.community";
  <http://purl.org/dc/terms/description> "Detection well-known mimikatz command line arguments";
  <http://purl.org/dc/terms/id> "a642964e-bead-4bed-8910-1bb4d63e3b4d";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Mimikatz Command Line";
  sigma:detectionCondition "selection_1 or selection_2 and selection_3";
  sigma:falsePositive "Legitimate Administrator using tool for password recovery";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"::\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.006",
    "attack.t1003.001", "attack.t1003.002", "attack.t1003.004", "attack.t1003.005";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, oscd.community";
  <http://purl.org/dc/terms/description> "Detection well-known mimikatz command line arguments";
  <http://purl.org/dc/terms/id> "a642964e-bead-4bed-8910-1bb4d63e3b4d";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Mimikatz Command Line";
  sigma:detectionCondition "selection_1 or selection_2 and selection_3";
  sigma:falsePositive "Legitimate Administrator using tool for password recovery";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"::\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.006",
    "attack.t1003.001", "attack.t1003.002", "attack.t1003.004", "attack.t1003.005";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, oscd.community";
  <http://purl.org/dc/terms/description> "Detection well-known mimikatz command line arguments";
  <http://purl.org/dc/terms/id> "a642964e-bead-4bed-8910-1bb4d63e3b4d";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Mimikatz Command Line";
  sigma:detectionCondition "selection_1 or selection_2 and selection_3";
  sigma:falsePositive "Legitimate Administrator using tool for password recovery";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"::\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.006",
    "attack.t1003.001", "attack.t1003.002", "attack.t1003.004", "attack.t1003.005";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, oscd.community";
  <http://purl.org/dc/terms/description> "Detection well-known mimikatz command line arguments";
  <http://purl.org/dc/terms/id> "a642964e-bead-4bed-8910-1bb4d63e3b4d";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Mimikatz Command Line";
  sigma:detectionCondition "selection_1 or selection_2 and selection_3";
  sigma:falsePositive "Legitimate Administrator using tool for password recovery";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"::\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.006",
    "attack.t1003.001", "attack.t1003.002", "attack.t1003.004", "attack.t1003.005";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, oscd.community";
  <http://purl.org/dc/terms/description> "Detection well-known mimikatz command line arguments";
  <http://purl.org/dc/terms/id> "a642964e-bead-4bed-8910-1bb4d63e3b4d";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Mimikatz Command Line";
  sigma:detectionCondition "selection_1 or selection_2 and selection_3";
  sigma:falsePositive "Legitimate Administrator using tool for password recovery";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"::\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.006",
    "attack.t1003.001", "attack.t1003.002", "attack.t1003.004", "attack.t1003.005";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, oscd.community";
  <http://purl.org/dc/terms/description> "Detection well-known mimikatz command line arguments";
  <http://purl.org/dc/terms/id> "a642964e-bead-4bed-8910-1bb4d63e3b4d";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Mimikatz Command Line";
  sigma:detectionCondition "selection_1 or selection_2 and selection_3";
  sigma:falsePositive "Legitimate Administrator using tool for password recovery";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"::\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.006",
    "attack.t1003.001", "attack.t1003.002", "attack.t1003.004", "attack.t1003.005" .

<http://w3id.org/sepses/resource/sigma/sigma-4b60e6f2-bf39-47b4-b4ea-398e33cfe253>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Nik Seetharaman";
  <http://purl.org/dc/terms/description> "Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects";
  <http://purl.org/dc/terms/id> "4b60e6f2-bf39-47b4-b4ea-398e33cfe253";
  <http://purl.org/dc/terms/modified> "2019/07/31";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "CMSTP UAC Bypass via COM Object Access";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Legitimate CMSTP use (unlikely in modern enterprise environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER (regex(str(?ParentcmdLine),\"3E5FC7F9-9A51-4367-9063-A120244FBEC7\")
|| regex(str(?ParentcmdLine),\"3E000D72-A845-4CD9-BD83-80C07C3B881F\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/",
    "https://twitter.com/hFireF0X/status/897640081053364225";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.privilege_escalation",
    "attack.t1088", "attack.t1548.002", "attack.g0069", "attack.t1191", "attack.t1218.003",
    "car.2019-04-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Nik Seetharaman";
  <http://purl.org/dc/terms/description> "Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects";
  <http://purl.org/dc/terms/id> "4b60e6f2-bf39-47b4-b4ea-398e33cfe253";
  <http://purl.org/dc/terms/modified> "2019/07/31";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "CMSTP UAC Bypass via COM Object Access";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Legitimate CMSTP use (unlikely in modern enterprise environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER (regex(str(?ParentcmdLine),\"3E5FC7F9-9A51-4367-9063-A120244FBEC7\")
|| regex(str(?ParentcmdLine),\"3E000D72-A845-4CD9-BD83-80C07C3B881F\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/",
    "https://twitter.com/hFireF0X/status/897640081053364225";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.privilege_escalation",
    "attack.t1088", "attack.t1548.002", "attack.g0069", "attack.t1191", "attack.t1218.003",
    "car.2019-04-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Nik Seetharaman";
  <http://purl.org/dc/terms/description> "Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects";
  <http://purl.org/dc/terms/id> "4b60e6f2-bf39-47b4-b4ea-398e33cfe253";
  <http://purl.org/dc/terms/modified> "2019/07/31";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "CMSTP UAC Bypass via COM Object Access";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Legitimate CMSTP use (unlikely in modern enterprise environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER (regex(str(?ParentcmdLine),\"3E5FC7F9-9A51-4367-9063-A120244FBEC7\")
|| regex(str(?ParentcmdLine),\"3E000D72-A845-4CD9-BD83-80C07C3B881F\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/",
    "https://twitter.com/hFireF0X/status/897640081053364225";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.privilege_escalation",
    "attack.t1088", "attack.t1548.002", "attack.g0069", "attack.t1191", "attack.t1218.003",
    "car.2019-04-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Nik Seetharaman";
  <http://purl.org/dc/terms/description> "Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects";
  <http://purl.org/dc/terms/id> "4b60e6f2-bf39-47b4-b4ea-398e33cfe253";
  <http://purl.org/dc/terms/modified> "2019/07/31";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "CMSTP UAC Bypass via COM Object Access";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Legitimate CMSTP use (unlikely in modern enterprise environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER (regex(str(?ParentcmdLine),\"3E5FC7F9-9A51-4367-9063-A120244FBEC7\")
|| regex(str(?ParentcmdLine),\"3E000D72-A845-4CD9-BD83-80C07C3B881F\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/",
    "https://twitter.com/hFireF0X/status/897640081053364225";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.privilege_escalation",
    "attack.t1088", "attack.t1548.002", "attack.g0069", "attack.t1191", "attack.t1218.003",
    "car.2019-04-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Nik Seetharaman";
  <http://purl.org/dc/terms/description> "Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects";
  <http://purl.org/dc/terms/id> "4b60e6f2-bf39-47b4-b4ea-398e33cfe253";
  <http://purl.org/dc/terms/modified> "2019/07/31";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "CMSTP UAC Bypass via COM Object Access";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Legitimate CMSTP use (unlikely in modern enterprise environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER (regex(str(?ParentcmdLine),\"3E5FC7F9-9A51-4367-9063-A120244FBEC7\")
|| regex(str(?ParentcmdLine),\"3E000D72-A845-4CD9-BD83-80C07C3B881F\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/",
    "https://twitter.com/hFireF0X/status/897640081053364225";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.privilege_escalation",
    "attack.t1088", "attack.t1548.002", "attack.g0069", "attack.t1191", "attack.t1218.003",
    "car.2019-04-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Nik Seetharaman";
  <http://purl.org/dc/terms/description> "Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects";
  <http://purl.org/dc/terms/id> "4b60e6f2-bf39-47b4-b4ea-398e33cfe253";
  <http://purl.org/dc/terms/modified> "2019/07/31";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "CMSTP UAC Bypass via COM Object Access";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Legitimate CMSTP use (unlikely in modern enterprise environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER (regex(str(?ParentcmdLine),\"3E5FC7F9-9A51-4367-9063-A120244FBEC7\")
|| regex(str(?ParentcmdLine),\"3E000D72-A845-4CD9-BD83-80C07C3B881F\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/",
    "https://twitter.com/hFireF0X/status/897640081053364225";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.privilege_escalation",
    "attack.t1088", "attack.t1548.002", "attack.g0069", "attack.t1191", "attack.t1218.003",
    "car.2019-04-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Nik Seetharaman";
  <http://purl.org/dc/terms/description> "Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects";
  <http://purl.org/dc/terms/id> "4b60e6f2-bf39-47b4-b4ea-398e33cfe253";
  <http://purl.org/dc/terms/modified> "2019/07/31";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "CMSTP UAC Bypass via COM Object Access";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Legitimate CMSTP use (unlikely in modern enterprise environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER (regex(str(?ParentcmdLine),\"3E5FC7F9-9A51-4367-9063-A120244FBEC7\")
|| regex(str(?ParentcmdLine),\"3E000D72-A845-4CD9-BD83-80C07C3B881F\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/",
    "https://twitter.com/hFireF0X/status/897640081053364225";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.privilege_escalation",
    "attack.t1088", "attack.t1548.002", "attack.g0069", "attack.t1191", "attack.t1218.003",
    "car.2019-04-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Nik Seetharaman";
  <http://purl.org/dc/terms/description> "Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects";
  <http://purl.org/dc/terms/id> "4b60e6f2-bf39-47b4-b4ea-398e33cfe253";
  <http://purl.org/dc/terms/modified> "2019/07/31";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "CMSTP UAC Bypass via COM Object Access";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Legitimate CMSTP use (unlikely in modern enterprise environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER (regex(str(?ParentcmdLine),\"3E5FC7F9-9A51-4367-9063-A120244FBEC7\")
|| regex(str(?ParentcmdLine),\"3E000D72-A845-4CD9-BD83-80C07C3B881F\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/",
    "https://twitter.com/hFireF0X/status/897640081053364225";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.privilege_escalation",
    "attack.t1088", "attack.t1548.002", "attack.g0069", "attack.t1191", "attack.t1218.003",
    "car.2019-04-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Nik Seetharaman";
  <http://purl.org/dc/terms/description> "Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects";
  <http://purl.org/dc/terms/id> "4b60e6f2-bf39-47b4-b4ea-398e33cfe253";
  <http://purl.org/dc/terms/modified> "2019/07/31";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "CMSTP UAC Bypass via COM Object Access";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Legitimate CMSTP use (unlikely in modern enterprise environments)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER (regex(str(?ParentcmdLine),\"3E5FC7F9-9A51-4367-9063-A120244FBEC7\")
|| regex(str(?ParentcmdLine),\"3E000D72-A845-4CD9-BD83-80C07C3B881F\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://web.archive.org/web/20190720093911/http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/",
    "https://twitter.com/hFireF0X/status/897640081053364225";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.privilege_escalation",
    "attack.t1088", "attack.t1548.002", "attack.g0069", "attack.t1191", "attack.t1218.003",
    "car.2019-04-001" .

<http://w3id.org/sepses/resource/sigma/sigma-cc268ac1-42d9-40fd-9ed3-8c4e1a5b87e6>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/12";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community (rule), @_felamos (idea)";
  <http://purl.org/dc/terms/description> "The Devtoolslauncher.exe executes other binary";
  <http://purl.org/dc/terms/id> "cc268ac1-42d9-40fd-9ed3-8c4e1a5b87e6";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Devtoolslauncher.exe Executes Specified Binary";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of devtoolslauncher.exe by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"LaunchForDeploy\")
FILTER regex(str(?cmdLine),\"\\\\devtoolslauncher.exe\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Devtoolslauncher.yml",
    "https://twitter.com/_felamos/status/1179811992841797632";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/12";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community (rule), @_felamos (idea)";
  <http://purl.org/dc/terms/description> "The Devtoolslauncher.exe executes other binary";
  <http://purl.org/dc/terms/id> "cc268ac1-42d9-40fd-9ed3-8c4e1a5b87e6";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Devtoolslauncher.exe Executes Specified Binary";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of devtoolslauncher.exe by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"LaunchForDeploy\")
FILTER regex(str(?cmdLine),\"\\\\devtoolslauncher.exe\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Devtoolslauncher.yml",
    "https://twitter.com/_felamos/status/1179811992841797632";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/12";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community (rule), @_felamos (idea)";
  <http://purl.org/dc/terms/description> "The Devtoolslauncher.exe executes other binary";
  <http://purl.org/dc/terms/id> "cc268ac1-42d9-40fd-9ed3-8c4e1a5b87e6";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Devtoolslauncher.exe Executes Specified Binary";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of devtoolslauncher.exe by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"LaunchForDeploy\")
FILTER regex(str(?cmdLine),\"\\\\devtoolslauncher.exe\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Devtoolslauncher.yml",
    "https://twitter.com/_felamos/status/1179811992841797632";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution" .

<http://w3id.org/sepses/resource/sigma/sigma-48a61b29-389f-4032-b317-b30de6b95314>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2021/01/19";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious Plink tunnel remote forarding to a local port";
  <http://purl.org/dc/terms/id> "48a61b29-389f-4032-b317-b30de6b95314";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Plink Remote Forwarding";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity using a remote port forwarding to a local port";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :Description ?Description.
?s :cmdLine ?cmdLine.
FILTER regex(str(?Description),\"Command-line SSH, Telnet, and Rlogin client\")
FILTER regex(str(?cmdLine),\" -R \")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://medium.com/@informationsecurity/remote-ssh-tunneling-with-plink-exe-7831072b3d7d",
    "https://www.real-sec.com/2019/04/bypassing-network-restrictions-through-rdp-tunneling/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.command_and_control", "attack.t1572",
    "attack.t1021.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2021/01/19";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious Plink tunnel remote forarding to a local port";
  <http://purl.org/dc/terms/id> "48a61b29-389f-4032-b317-b30de6b95314";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Plink Remote Forwarding";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity using a remote port forwarding to a local port";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :Description ?Description.
?s :cmdLine ?cmdLine.
FILTER regex(str(?Description),\"Command-line SSH, Telnet, and Rlogin client\")
FILTER regex(str(?cmdLine),\" -R \")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://medium.com/@informationsecurity/remote-ssh-tunneling-with-plink-exe-7831072b3d7d",
    "https://www.real-sec.com/2019/04/bypassing-network-restrictions-through-rdp-tunneling/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.command_and_control", "attack.t1572",
    "attack.t1021.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2021/01/19";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious Plink tunnel remote forarding to a local port";
  <http://purl.org/dc/terms/id> "48a61b29-389f-4032-b317-b30de6b95314";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Plink Remote Forwarding";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity using a remote port forwarding to a local port";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :Description ?Description.
?s :cmdLine ?cmdLine.
FILTER regex(str(?Description),\"Command-line SSH, Telnet, and Rlogin client\")
FILTER regex(str(?cmdLine),\" -R \")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://medium.com/@informationsecurity/remote-ssh-tunneling-with-plink-exe-7831072b3d7d",
    "https://www.real-sec.com/2019/04/bypassing-network-restrictions-through-rdp-tunneling/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.command_and_control", "attack.t1572",
    "attack.t1021.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2021/01/19";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious Plink tunnel remote forarding to a local port";
  <http://purl.org/dc/terms/id> "48a61b29-389f-4032-b317-b30de6b95314";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Plink Remote Forwarding";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity using a remote port forwarding to a local port";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :Description ?Description.
?s :cmdLine ?cmdLine.
FILTER regex(str(?Description),\"Command-line SSH, Telnet, and Rlogin client\")
FILTER regex(str(?cmdLine),\" -R \")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://medium.com/@informationsecurity/remote-ssh-tunneling-with-plink-exe-7831072b3d7d",
    "https://www.real-sec.com/2019/04/bypassing-network-restrictions-through-rdp-tunneling/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.command_and_control", "attack.t1572",
    "attack.t1021.001" .

<http://w3id.org/sepses/resource/sigma/sigma-6f3e2987-db24-4c78-a860-b4f4095a7095>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, E.M. Anhaus, oscd.community";
  <http://purl.org/dc/terms/description> "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network";
  <http://purl.org/dc/terms/id> "6f3e2987-db24-4c78-a860-b4f4095a7095";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Data Compressed - rar.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "highly likely if rar is default archiver in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\" a \")
FILTER regex(str(?cmdLine),\"\\\\rar.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/1ec33c93-3d0b-4a28-8014-dbdaae5c60ae.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1002/T1002.yaml";
  rule:hasDetectedRule "attack.collection", "attack.exfiltration", "attack.t1002", "attack.t1560.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, E.M. Anhaus, oscd.community";
  <http://purl.org/dc/terms/description> "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network";
  <http://purl.org/dc/terms/id> "6f3e2987-db24-4c78-a860-b4f4095a7095";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Data Compressed - rar.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "highly likely if rar is default archiver in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\" a \")
FILTER regex(str(?cmdLine),\"\\\\rar.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/1ec33c93-3d0b-4a28-8014-dbdaae5c60ae.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1002/T1002.yaml";
  rule:hasDetectedRule "attack.collection", "attack.exfiltration", "attack.t1002", "attack.t1560.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, E.M. Anhaus, oscd.community";
  <http://purl.org/dc/terms/description> "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network";
  <http://purl.org/dc/terms/id> "6f3e2987-db24-4c78-a860-b4f4095a7095";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Data Compressed - rar.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "highly likely if rar is default archiver in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\" a \")
FILTER regex(str(?cmdLine),\"\\\\rar.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/1ec33c93-3d0b-4a28-8014-dbdaae5c60ae.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1002/T1002.yaml";
  rule:hasDetectedRule "attack.collection", "attack.exfiltration", "attack.t1002", "attack.t1560.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, E.M. Anhaus, oscd.community";
  <http://purl.org/dc/terms/description> "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network";
  <http://purl.org/dc/terms/id> "6f3e2987-db24-4c78-a860-b4f4095a7095";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Data Compressed - rar.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "highly likely if rar is default archiver in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\" a \")
FILTER regex(str(?cmdLine),\"\\\\rar.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/1ec33c93-3d0b-4a28-8014-dbdaae5c60ae.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1002/T1002.yaml";
  rule:hasDetectedRule "attack.collection", "attack.exfiltration", "attack.t1002", "attack.t1560.001" .

<http://w3id.org/sepses/resource/sigma/sigma-60f16a96-db70-42eb-8f76-16763e333590>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "Detects execution of of Dxcap.exe";
  <http://purl.org/dc/terms/id> "60f16a96-db70-42eb-8f76-16763e333590";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Application Whitelisting Bypass via Dxcap.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate execution of dxcap.exe by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"-c\")
|| regex(str(?cmdLine),\".exe\")
)
FILTER regex(str(?cmdLine),\"\\\\dxcap.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Dxcap.yml",
    "https://twitter.com/harr0ey/status/992008180904419328";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "Detects execution of of Dxcap.exe";
  <http://purl.org/dc/terms/id> "60f16a96-db70-42eb-8f76-16763e333590";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Application Whitelisting Bypass via Dxcap.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate execution of dxcap.exe by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"-c\")
|| regex(str(?cmdLine),\".exe\")
)
FILTER regex(str(?cmdLine),\"\\\\dxcap.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Dxcap.yml",
    "https://twitter.com/harr0ey/status/992008180904419328";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "Detects execution of of Dxcap.exe";
  <http://purl.org/dc/terms/id> "60f16a96-db70-42eb-8f76-16763e333590";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Application Whitelisting Bypass via Dxcap.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate execution of dxcap.exe by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"-c\")
|| regex(str(?cmdLine),\".exe\")
)
FILTER regex(str(?cmdLine),\"\\\\dxcap.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Dxcap.yml",
    "https://twitter.com/harr0ey/status/992008180904419328";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution" .

<http://w3id.org/sepses/resource/sigma/sigma-782d6f3e-4c5d-4b8c-92a3-1d05fed72e63>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/29";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects netsh commands that configure a port forwarding of port 3389 used for RDP";
  <http://purl.org/dc/terms/id> "782d6f3e-4c5d-4b8c-92a3-1d05fed72e63";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Netsh RDP Port Forwarding";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh i.* p.*=3389 c.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html";
  rule:hasDetectedRule "attack.lateral_movement", "attack.defense_evasion", "attack.command_and_control",
    "attack.t1090";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/29";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects netsh commands that configure a port forwarding of port 3389 used for RDP";
  <http://purl.org/dc/terms/id> "782d6f3e-4c5d-4b8c-92a3-1d05fed72e63";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Netsh RDP Port Forwarding";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh i.* p.*=3389 c.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html";
  rule:hasDetectedRule "attack.lateral_movement", "attack.defense_evasion", "attack.command_and_control",
    "attack.t1090";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/29";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects netsh commands that configure a port forwarding of port 3389 used for RDP";
  <http://purl.org/dc/terms/id> "782d6f3e-4c5d-4b8c-92a3-1d05fed72e63";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Netsh RDP Port Forwarding";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh i.* p.*=3389 c.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html";
  rule:hasDetectedRule "attack.lateral_movement", "attack.defense_evasion", "attack.command_and_control",
    "attack.t1090";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/29";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects netsh commands that configure a port forwarding of port 3389 used for RDP";
  <http://purl.org/dc/terms/id> "782d6f3e-4c5d-4b8c-92a3-1d05fed72e63";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Netsh RDP Port Forwarding";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh i.* p.*=3389 c.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html";
  rule:hasDetectedRule "attack.lateral_movement", "attack.defense_evasion", "attack.command_and_control",
    "attack.t1090" .

<http://w3id.org/sepses/resource/sigma/sigma-d7825193-b70a-48a4-b992-8b5b3015cc11>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/10/17";
  <http://purl.org/dc/terms/creator> "FPT.EagleEye Team";
  <http://purl.org/dc/terms/description> "Detects code execution via the Windows Update client (wuauclt)";
  <http://purl.org/dc/terms/id> "d7825193-b70a-48a4-b992-8b5b3015cc11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Windows Update Client LOLBIN";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ProcesscmdLine ?ProcesscmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ProcesscmdLine),\"/UpdateDeploymentProvider\")
|| regex(str(?ProcesscmdLine),\"/RunHandlerComServer\")
)
FILTER (regex(str(?cmdLine),\"\\\\wuauclt.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceProduct "windows";
  sigma:references "https://dtm.uk/wuauclt/";
  rule:hasDetectedRule "attack.t1218", "attack.execution", "attack.command_and_control",
    "attack.t1105";
  sigma:logSourceService "process_creation";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/10/17";
  <http://purl.org/dc/terms/creator> "FPT.EagleEye Team";
  <http://purl.org/dc/terms/description> "Detects code execution via the Windows Update client (wuauclt)";
  <http://purl.org/dc/terms/id> "d7825193-b70a-48a4-b992-8b5b3015cc11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Windows Update Client LOLBIN";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ProcesscmdLine ?ProcesscmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ProcesscmdLine),\"/UpdateDeploymentProvider\")
|| regex(str(?ProcesscmdLine),\"/RunHandlerComServer\")
)
FILTER (regex(str(?cmdLine),\"\\\\wuauclt.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceProduct "windows";
  sigma:references "https://dtm.uk/wuauclt/";
  rule:hasDetectedRule "attack.t1218", "attack.execution", "attack.command_and_control",
    "attack.t1105";
  sigma:logSourceService "process_creation";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/10/17";
  <http://purl.org/dc/terms/creator> "FPT.EagleEye Team";
  <http://purl.org/dc/terms/description> "Detects code execution via the Windows Update client (wuauclt)";
  <http://purl.org/dc/terms/id> "d7825193-b70a-48a4-b992-8b5b3015cc11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Windows Update Client LOLBIN";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ProcesscmdLine ?ProcesscmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ProcesscmdLine),\"/UpdateDeploymentProvider\")
|| regex(str(?ProcesscmdLine),\"/RunHandlerComServer\")
)
FILTER (regex(str(?cmdLine),\"\\\\wuauclt.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceProduct "windows";
  sigma:references "https://dtm.uk/wuauclt/";
  rule:hasDetectedRule "attack.t1218", "attack.execution", "attack.command_and_control",
    "attack.t1105";
  sigma:logSourceService "process_creation";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/10/17";
  <http://purl.org/dc/terms/creator> "FPT.EagleEye Team";
  <http://purl.org/dc/terms/description> "Detects code execution via the Windows Update client (wuauclt)";
  <http://purl.org/dc/terms/id> "d7825193-b70a-48a4-b992-8b5b3015cc11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Windows Update Client LOLBIN";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ProcesscmdLine ?ProcesscmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ProcesscmdLine),\"/UpdateDeploymentProvider\")
|| regex(str(?ProcesscmdLine),\"/RunHandlerComServer\")
)
FILTER (regex(str(?cmdLine),\"\\\\wuauclt.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceProduct "windows";
  sigma:references "https://dtm.uk/wuauclt/";
  rule:hasDetectedRule "attack.t1218", "attack.execution", "attack.command_and_control",
    "attack.t1105";
  sigma:logSourceService "process_creation" .

<http://w3id.org/sepses/resource/sigma/sigma-fd877b94-9bb5-4191-bb25-d79cbd93c167>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Endgame, JHasenbusch, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Dump sam, system or security hives using REG.exe utility";
  <http://purl.org/dc/terms/id> "fd877b94-9bb5-4191-bb25-d79cbd93c167";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Grabbing Sensitive Hives via Reg Utility";
  sigma:detectionCondition "selection_1 and selection_2 and selection_3";
  sigma:falsePositive "Dumping hives for legitimate purpouse i.e. backup or forensic investigation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\system\")
|| regex(str(?cmdLine),\"\\\\sam\")
|| regex(str(?cmdLine),\"\\\\security\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://eqllib.readthedocs.io/en/latest/analytics/aed95fc6-5e3f-49dc-8b35-06508613f979.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003/T1003.md";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.004", "attack.t1003.005", "car.2013-07-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Endgame, JHasenbusch, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Dump sam, system or security hives using REG.exe utility";
  <http://purl.org/dc/terms/id> "fd877b94-9bb5-4191-bb25-d79cbd93c167";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Grabbing Sensitive Hives via Reg Utility";
  sigma:detectionCondition "selection_1 and selection_2 and selection_3";
  sigma:falsePositive "Dumping hives for legitimate purpouse i.e. backup or forensic investigation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\system\")
|| regex(str(?cmdLine),\"\\\\sam\")
|| regex(str(?cmdLine),\"\\\\security\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://eqllib.readthedocs.io/en/latest/analytics/aed95fc6-5e3f-49dc-8b35-06508613f979.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003/T1003.md";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.004", "attack.t1003.005", "car.2013-07-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Endgame, JHasenbusch, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Dump sam, system or security hives using REG.exe utility";
  <http://purl.org/dc/terms/id> "fd877b94-9bb5-4191-bb25-d79cbd93c167";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Grabbing Sensitive Hives via Reg Utility";
  sigma:detectionCondition "selection_1 and selection_2 and selection_3";
  sigma:falsePositive "Dumping hives for legitimate purpouse i.e. backup or forensic investigation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\system\")
|| regex(str(?cmdLine),\"\\\\sam\")
|| regex(str(?cmdLine),\"\\\\security\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://eqllib.readthedocs.io/en/latest/analytics/aed95fc6-5e3f-49dc-8b35-06508613f979.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003/T1003.md";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.004", "attack.t1003.005", "car.2013-07-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Endgame, JHasenbusch, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Dump sam, system or security hives using REG.exe utility";
  <http://purl.org/dc/terms/id> "fd877b94-9bb5-4191-bb25-d79cbd93c167";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Grabbing Sensitive Hives via Reg Utility";
  sigma:detectionCondition "selection_1 and selection_2 and selection_3";
  sigma:falsePositive "Dumping hives for legitimate purpouse i.e. backup or forensic investigation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\system\")
|| regex(str(?cmdLine),\"\\\\sam\")
|| regex(str(?cmdLine),\"\\\\security\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://eqllib.readthedocs.io/en/latest/analytics/aed95fc6-5e3f-49dc-8b35-06508613f979.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003/T1003.md";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.004", "attack.t1003.005", "car.2013-07-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Endgame, JHasenbusch, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Dump sam, system or security hives using REG.exe utility";
  <http://purl.org/dc/terms/id> "fd877b94-9bb5-4191-bb25-d79cbd93c167";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Grabbing Sensitive Hives via Reg Utility";
  sigma:detectionCondition "selection_1 and selection_2 and selection_3";
  sigma:falsePositive "Dumping hives for legitimate purpouse i.e. backup or forensic investigation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\system\")
|| regex(str(?cmdLine),\"\\\\sam\")
|| regex(str(?cmdLine),\"\\\\security\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://eqllib.readthedocs.io/en/latest/analytics/aed95fc6-5e3f-49dc-8b35-06508613f979.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003/T1003.md";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.004", "attack.t1003.005", "car.2013-07-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Endgame, JHasenbusch, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Dump sam, system or security hives using REG.exe utility";
  <http://purl.org/dc/terms/id> "fd877b94-9bb5-4191-bb25-d79cbd93c167";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Grabbing Sensitive Hives via Reg Utility";
  sigma:detectionCondition "selection_1 and selection_2 and selection_3";
  sigma:falsePositive "Dumping hives for legitimate purpouse i.e. backup or forensic investigation";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\system\")
|| regex(str(?cmdLine),\"\\\\sam\")
|| regex(str(?cmdLine),\"\\\\security\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://eqllib.readthedocs.io/en/latest/analytics/aed95fc6-5e3f-49dc-8b35-06508613f979.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003/T1003.md";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.004", "attack.t1003.005", "car.2013-07-001" .

<http://w3id.org/sepses/resource/sigma/sigma-3c89a1e8-0fba-449e-8f1b-8409d6267ec8>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/10/12";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects WMI executing rundll32";
  <http://purl.org/dc/terms/id> "3c89a1e8-0fba-449e-8f1b-8409d6267ec8";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious WMI Execution Using Rundll32";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"process call create\")
|| regex(str(?cmdLine),\"rundll32\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://thedfirreport.com/2020/10/08/ryuks-return/";
  rule:hasDetectedRule "attack.execution", "attack.t1047";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/10/12";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects WMI executing rundll32";
  <http://purl.org/dc/terms/id> "3c89a1e8-0fba-449e-8f1b-8409d6267ec8";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious WMI Execution Using Rundll32";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"process call create\")
|| regex(str(?cmdLine),\"rundll32\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://thedfirreport.com/2020/10/08/ryuks-return/";
  rule:hasDetectedRule "attack.execution", "attack.t1047" .

<http://w3id.org/sepses/resource/sigma/sigma-68c8acb4-1b60-4890-8e82-3ddf7a6dba84>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Dan Beavin), oscd.community";
  <http://purl.org/dc/terms/description> "Identifies usage of hh.exe executing recently modified .chm files.";
  <http://purl.org/dc/terms/id> "68c8acb4-1b60-4890-8e82-3ddf7a6dba84";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "HH.exe Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unlike";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".chm\")
FILTER regex(str(?cmdLine),\"\\\\hh.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/b25aa548-7937-11e9-8f5c-d46d6d62a49e.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1223/T1223.yaml";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1218.001",
    "attack.t1223";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Dan Beavin), oscd.community";
  <http://purl.org/dc/terms/description> "Identifies usage of hh.exe executing recently modified .chm files.";
  <http://purl.org/dc/terms/id> "68c8acb4-1b60-4890-8e82-3ddf7a6dba84";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "HH.exe Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unlike";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".chm\")
FILTER regex(str(?cmdLine),\"\\\\hh.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/b25aa548-7937-11e9-8f5c-d46d6d62a49e.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1223/T1223.yaml";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1218.001",
    "attack.t1223";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Dan Beavin), oscd.community";
  <http://purl.org/dc/terms/description> "Identifies usage of hh.exe executing recently modified .chm files.";
  <http://purl.org/dc/terms/id> "68c8acb4-1b60-4890-8e82-3ddf7a6dba84";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "HH.exe Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unlike";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".chm\")
FILTER regex(str(?cmdLine),\"\\\\hh.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/b25aa548-7937-11e9-8f5c-d46d6d62a49e.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1223/T1223.yaml";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1218.001",
    "attack.t1223";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Dan Beavin), oscd.community";
  <http://purl.org/dc/terms/description> "Identifies usage of hh.exe executing recently modified .chm files.";
  <http://purl.org/dc/terms/id> "68c8acb4-1b60-4890-8e82-3ddf7a6dba84";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "HH.exe Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unlike";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".chm\")
FILTER regex(str(?cmdLine),\"\\\\hh.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/b25aa548-7937-11e9-8f5c-d46d6d62a49e.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1223/T1223.yaml";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1218.001",
    "attack.t1223" .

<http://w3id.org/sepses/resource/sigma/sigma-54e57ce3-0672-46eb-a402-2c0948d5e3e9>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/12/25";
  <http://purl.org/dc/terms/creator> "FPT.EagleEye";
  <http://purl.org/dc/terms/description> "Detecting Emotet DLL loading by looking for rundll32.exe processes with command lines ending in ,RunDLL or ,#1";
  <http://purl.org/dc/terms/id> "54e57ce3-0672-46eb-a402-2c0948d5e3e9";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Emotet RunDLL32 Process Creation";
  sigma:detectionCondition "selection and not filter_ide";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\",RunDLL\")
)
FILTER (regex(str(?cmdLine),\"\\\\rundll32.exe\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://paste.cryptolaemus.com/emotet/2020/12/22/emotet-malware-IoCs_12-22-20.html";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1218.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/12/25";
  <http://purl.org/dc/terms/creator> "FPT.EagleEye";
  <http://purl.org/dc/terms/description> "Detecting Emotet DLL loading by looking for rundll32.exe processes with command lines ending in ,RunDLL or ,#1";
  <http://purl.org/dc/terms/id> "54e57ce3-0672-46eb-a402-2c0948d5e3e9";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Emotet RunDLL32 Process Creation";
  sigma:detectionCondition "selection and not filter_ide";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\",RunDLL\")
)
FILTER (regex(str(?cmdLine),\"\\\\rundll32.exe\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://paste.cryptolaemus.com/emotet/2020/12/22/emotet-malware-IoCs_12-22-20.html";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1218.011" .

<http://w3id.org/sepses/resource/sigma/sigma-36210e0d-5b19-485d-a087-c096088885f0>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth (rule), Daniel Bohannon (idea), Roberto Rodriguez (Fix)";
  <http://purl.org/dc/terms/description> "Detects suspicious PowerShell invocation with a parameter substring";
  <http://purl.org/dc/terms/id> "36210e0d-5b19-485d-a087-c096088885f0";
  <http://purl.org/dc/terms/modified> "2020/07/14";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious PowerShell Parameter Substring";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Penetration tests";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -windowstyle h \")
|| regex(str(?cmdLine),\" -windowstyl h\")
|| regex(str(?cmdLine),\" -windowsty h\")
|| regex(str(?cmdLine),\" -windowst h\")
|| regex(str(?cmdLine),\" -windows h\")
|| regex(str(?cmdLine),\" -windo h\")
|| regex(str(?cmdLine),\" -wind h\")
|| regex(str(?cmdLine),\" -win h\")
|| regex(str(?cmdLine),\" -wi h\")
|| regex(str(?cmdLine),\" -win h \")
|| regex(str(?cmdLine),\" -win hi \")
|| regex(str(?cmdLine),\" -win hid \")
|| regex(str(?cmdLine),\" -win hidd \")
|| regex(str(?cmdLine),\" -win hidde \")
|| regex(str(?cmdLine),\" -NoPr \")
|| regex(str(?cmdLine),\" -NoPro \")
|| regex(str(?cmdLine),\" -NoProf \")
|| regex(str(?cmdLine),\" -NoProfi \")
|| regex(str(?cmdLine),\" -NoProfil \")
|| regex(str(?cmdLine),\" -nonin \")
|| regex(str(?cmdLine),\" -nonint \")
|| regex(str(?cmdLine),\" -noninte \")
|| regex(str(?cmdLine),\" -noninter \")
|| regex(str(?cmdLine),\" -nonintera \")
|| regex(str(?cmdLine),\" -noninterac \")
|| regex(str(?cmdLine),\" -noninteract \")
|| regex(str(?cmdLine),\" -noninteracti \")
|| regex(str(?cmdLine),\" -noninteractiv \")
|| regex(str(?cmdLine),\" -ec \")
|| regex(str(?cmdLine),\" -encodedComman \")
|| regex(str(?cmdLine),\" -encodedComma \")
|| regex(str(?cmdLine),\" -encodedComm \")
|| regex(str(?cmdLine),\" -encodedCom \")
|| regex(str(?cmdLine),\" -encodedCo \")
|| regex(str(?cmdLine),\" -encodedC \")
|| regex(str(?cmdLine),\" -encoded \")
|| regex(str(?cmdLine),\" -encode \")
|| regex(str(?cmdLine),\" -encod \")
|| regex(str(?cmdLine),\" -enco \")
|| regex(str(?cmdLine),\" -en \")
)
FILTER (regex(str(?cmdLine),\"\\\\Powershell.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.danielbohannon.com/blog-1/2017/3/12/powershell-execution-argument-obfuscation-how-it-can-make-detection-easier";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth (rule), Daniel Bohannon (idea), Roberto Rodriguez (Fix)";
  <http://purl.org/dc/terms/description> "Detects suspicious PowerShell invocation with a parameter substring";
  <http://purl.org/dc/terms/id> "36210e0d-5b19-485d-a087-c096088885f0";
  <http://purl.org/dc/terms/modified> "2020/07/14";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious PowerShell Parameter Substring";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Penetration tests";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -windowstyle h \")
|| regex(str(?cmdLine),\" -windowstyl h\")
|| regex(str(?cmdLine),\" -windowsty h\")
|| regex(str(?cmdLine),\" -windowst h\")
|| regex(str(?cmdLine),\" -windows h\")
|| regex(str(?cmdLine),\" -windo h\")
|| regex(str(?cmdLine),\" -wind h\")
|| regex(str(?cmdLine),\" -win h\")
|| regex(str(?cmdLine),\" -wi h\")
|| regex(str(?cmdLine),\" -win h \")
|| regex(str(?cmdLine),\" -win hi \")
|| regex(str(?cmdLine),\" -win hid \")
|| regex(str(?cmdLine),\" -win hidd \")
|| regex(str(?cmdLine),\" -win hidde \")
|| regex(str(?cmdLine),\" -NoPr \")
|| regex(str(?cmdLine),\" -NoPro \")
|| regex(str(?cmdLine),\" -NoProf \")
|| regex(str(?cmdLine),\" -NoProfi \")
|| regex(str(?cmdLine),\" -NoProfil \")
|| regex(str(?cmdLine),\" -nonin \")
|| regex(str(?cmdLine),\" -nonint \")
|| regex(str(?cmdLine),\" -noninte \")
|| regex(str(?cmdLine),\" -noninter \")
|| regex(str(?cmdLine),\" -nonintera \")
|| regex(str(?cmdLine),\" -noninterac \")
|| regex(str(?cmdLine),\" -noninteract \")
|| regex(str(?cmdLine),\" -noninteracti \")
|| regex(str(?cmdLine),\" -noninteractiv \")
|| regex(str(?cmdLine),\" -ec \")
|| regex(str(?cmdLine),\" -encodedComman \")
|| regex(str(?cmdLine),\" -encodedComma \")
|| regex(str(?cmdLine),\" -encodedComm \")
|| regex(str(?cmdLine),\" -encodedCom \")
|| regex(str(?cmdLine),\" -encodedCo \")
|| regex(str(?cmdLine),\" -encodedC \")
|| regex(str(?cmdLine),\" -encoded \")
|| regex(str(?cmdLine),\" -encode \")
|| regex(str(?cmdLine),\" -encod \")
|| regex(str(?cmdLine),\" -enco \")
|| regex(str(?cmdLine),\" -en \")
)
FILTER (regex(str(?cmdLine),\"\\\\Powershell.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.danielbohannon.com/blog-1/2017/3/12/powershell-execution-argument-obfuscation-how-it-can-make-detection-easier";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth (rule), Daniel Bohannon (idea), Roberto Rodriguez (Fix)";
  <http://purl.org/dc/terms/description> "Detects suspicious PowerShell invocation with a parameter substring";
  <http://purl.org/dc/terms/id> "36210e0d-5b19-485d-a087-c096088885f0";
  <http://purl.org/dc/terms/modified> "2020/07/14";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious PowerShell Parameter Substring";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Penetration tests";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -windowstyle h \")
|| regex(str(?cmdLine),\" -windowstyl h\")
|| regex(str(?cmdLine),\" -windowsty h\")
|| regex(str(?cmdLine),\" -windowst h\")
|| regex(str(?cmdLine),\" -windows h\")
|| regex(str(?cmdLine),\" -windo h\")
|| regex(str(?cmdLine),\" -wind h\")
|| regex(str(?cmdLine),\" -win h\")
|| regex(str(?cmdLine),\" -wi h\")
|| regex(str(?cmdLine),\" -win h \")
|| regex(str(?cmdLine),\" -win hi \")
|| regex(str(?cmdLine),\" -win hid \")
|| regex(str(?cmdLine),\" -win hidd \")
|| regex(str(?cmdLine),\" -win hidde \")
|| regex(str(?cmdLine),\" -NoPr \")
|| regex(str(?cmdLine),\" -NoPro \")
|| regex(str(?cmdLine),\" -NoProf \")
|| regex(str(?cmdLine),\" -NoProfi \")
|| regex(str(?cmdLine),\" -NoProfil \")
|| regex(str(?cmdLine),\" -nonin \")
|| regex(str(?cmdLine),\" -nonint \")
|| regex(str(?cmdLine),\" -noninte \")
|| regex(str(?cmdLine),\" -noninter \")
|| regex(str(?cmdLine),\" -nonintera \")
|| regex(str(?cmdLine),\" -noninterac \")
|| regex(str(?cmdLine),\" -noninteract \")
|| regex(str(?cmdLine),\" -noninteracti \")
|| regex(str(?cmdLine),\" -noninteractiv \")
|| regex(str(?cmdLine),\" -ec \")
|| regex(str(?cmdLine),\" -encodedComman \")
|| regex(str(?cmdLine),\" -encodedComma \")
|| regex(str(?cmdLine),\" -encodedComm \")
|| regex(str(?cmdLine),\" -encodedCom \")
|| regex(str(?cmdLine),\" -encodedCo \")
|| regex(str(?cmdLine),\" -encodedC \")
|| regex(str(?cmdLine),\" -encoded \")
|| regex(str(?cmdLine),\" -encode \")
|| regex(str(?cmdLine),\" -encod \")
|| regex(str(?cmdLine),\" -enco \")
|| regex(str(?cmdLine),\" -en \")
)
FILTER (regex(str(?cmdLine),\"\\\\Powershell.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.danielbohannon.com/blog-1/2017/3/12/powershell-execution-argument-obfuscation-how-it-can-make-detection-easier";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086" .

<http://w3id.org/sepses/resource/sigma/sigma-24357373-078f-44ed-9ac4-6d334a668a11>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/25";
  <http://purl.org/dc/terms/creator> "Victor Sergeev, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe.";
  <http://purl.org/dc/terms/id> "24357373-078f-44ed-9ac4-6d334a668a11";
  <http://purl.org/dc/terms/modified> "2019/11/10";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Direct Autorun Keys Modification";
  sigma:detectionCondition "selection_1 and selection_2";
  sigma:falsePositive "Legitimate administrator sets up autorun keys for legitimate reason",
    "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Userinit\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\")
|| regex(str(?cmdLine),\"\\\\system\\\\CurrentControlSet\\\\Control\\\\SafeBoot\\\\AlternateShell\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1060/T1060.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.t1060", "attack.t1547.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/25";
  <http://purl.org/dc/terms/creator> "Victor Sergeev, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe.";
  <http://purl.org/dc/terms/id> "24357373-078f-44ed-9ac4-6d334a668a11";
  <http://purl.org/dc/terms/modified> "2019/11/10";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Direct Autorun Keys Modification";
  sigma:detectionCondition "selection_1 and selection_2";
  sigma:falsePositive "Legitimate administrator sets up autorun keys for legitimate reason",
    "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Userinit\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\")
|| regex(str(?cmdLine),\"\\\\system\\\\CurrentControlSet\\\\Control\\\\SafeBoot\\\\AlternateShell\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1060/T1060.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.t1060", "attack.t1547.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/25";
  <http://purl.org/dc/terms/creator> "Victor Sergeev, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Detects direct modification of autostart extensibility point (ASEP) in registry using reg.exe.";
  <http://purl.org/dc/terms/id> "24357373-078f-44ed-9ac4-6d334a668a11";
  <http://purl.org/dc/terms/modified> "2019/11/10";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Direct Autorun Keys Modification";
  sigma:detectionCondition "selection_1 and selection_2";
  sigma:falsePositive "Legitimate administrator sets up autorun keys for legitimate reason",
    "Legitimate software automatically (mostly, during installation) sets up autorun keys for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnce\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunOnceEx\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServices\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\RunServicesOnce\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Userinit\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\")
|| regex(str(?cmdLine),\"\\\\software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\User Shell Folders\")
|| regex(str(?cmdLine),\"\\\\system\\\\CurrentControlSet\\\\Control\\\\SafeBoot\\\\AlternateShell\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1060/T1060.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.t1060", "attack.t1547.001" .

<http://w3id.org/sepses/resource/sigma/sigma-730fc21b-eaff-474b-ad23-90fd265d4988>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/10/30";
  <http://purl.org/dc/terms/creator> "omkar72 - https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html";
  <http://purl.org/dc/terms/description> "Detect ed user accept agreement execution in psexec commandline";
  <http://purl.org/dc/terms/id> "730fc21b-eaff-474b-ad23-90fd265d4988";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Psexec Accepteula Condition";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"accepteula\")
FILTER regex(str(?cmdLine),\"\\\\psexec.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1021", "attack.t1569";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/10/30";
  <http://purl.org/dc/terms/creator> "omkar72 - https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html";
  <http://purl.org/dc/terms/description> "Detect ed user accept agreement execution in psexec commandline";
  <http://purl.org/dc/terms/id> "730fc21b-eaff-474b-ad23-90fd265d4988";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Psexec Accepteula Condition";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"accepteula\")
FILTER regex(str(?cmdLine),\"\\\\psexec.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1021", "attack.t1569";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/10/30";
  <http://purl.org/dc/terms/creator> "omkar72 - https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html";
  <http://purl.org/dc/terms/description> "Detect ed user accept agreement execution in psexec commandline";
  <http://purl.org/dc/terms/id> "730fc21b-eaff-474b-ad23-90fd265d4988";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Psexec Accepteula Condition";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"accepteula\")
FILTER regex(str(?cmdLine),\"\\\\psexec.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1021", "attack.t1569" .

<http://w3id.org/sepses/resource/sigma/sigma-966e4016-627f-44f7-8341-f394905c361f>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/04/07";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious file execution by wscript and cscript";
  <http://purl.org/dc/terms/id> "966e4016-627f-44f7-8341-f394905c361f";
  <http://purl.org/dc/terms/title> "WMIExec VBS Script";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*.vbs /shell .*\")
FILTER regex(str(?cmdLine),\"cscript.exe\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-annex-b-final.pdf";
  rule:hasDetectedRule "attack.execution", "attack.t1059.005", "attack.t1064", "attack.g0045";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/04/07";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious file execution by wscript and cscript";
  <http://purl.org/dc/terms/id> "966e4016-627f-44f7-8341-f394905c361f";
  <http://purl.org/dc/terms/title> "WMIExec VBS Script";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*.vbs /shell .*\")
FILTER regex(str(?cmdLine),\"cscript.exe\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-annex-b-final.pdf";
  rule:hasDetectedRule "attack.execution", "attack.t1059.005", "attack.t1064", "attack.g0045";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/04/07";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious file execution by wscript and cscript";
  <http://purl.org/dc/terms/id> "966e4016-627f-44f7-8341-f394905c361f";
  <http://purl.org/dc/terms/title> "WMIExec VBS Script";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*.vbs /shell .*\")
FILTER regex(str(?cmdLine),\"cscript.exe\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-annex-b-final.pdf";
  rule:hasDetectedRule "attack.execution", "attack.t1059.005", "attack.t1064", "attack.g0045";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/04/07";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious file execution by wscript and cscript";
  <http://purl.org/dc/terms/id> "966e4016-627f-44f7-8341-f394905c361f";
  <http://purl.org/dc/terms/title> "WMIExec VBS Script";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*.vbs /shell .*\")
FILTER regex(str(?cmdLine),\"cscript.exe\")
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-annex-b-final.pdf";
  rule:hasDetectedRule "attack.execution", "attack.t1059.005", "attack.t1064", "attack.g0045" .

<http://w3id.org/sepses/resource/sigma/sigma-05f3c945-dcc8-4393-9f3d-af65077a8f86>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/04/09";
  <http://purl.org/dc/terms/creator> "Markus Neis";
  <http://purl.org/dc/terms/description> "Detects Access to Domain Group Policies stored in SYSVOL";
  <http://purl.org/dc/terms/id> "05f3c945-dcc8-4393-9f3d-af65077a8f86";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious SYSVOL Domain Group Policy Access";
  sigma:detectionCondition "selection";
  sigma:falsePositive "administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"SYSVOL\\\\\\\\policies\\\\\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://adsecurity.org/?p=2288", "https://www.hybrid-analysis.com/sample/f2943f5e45befa52fb12748ca7171d30096e1d4fc3c365561497c618341299d5?environmentId=100";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1552.006";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/04/09";
  <http://purl.org/dc/terms/creator> "Markus Neis";
  <http://purl.org/dc/terms/description> "Detects Access to Domain Group Policies stored in SYSVOL";
  <http://purl.org/dc/terms/id> "05f3c945-dcc8-4393-9f3d-af65077a8f86";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious SYSVOL Domain Group Policy Access";
  sigma:detectionCondition "selection";
  sigma:falsePositive "administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"SYSVOL\\\\\\\\policies\\\\\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://adsecurity.org/?p=2288", "https://www.hybrid-analysis.com/sample/f2943f5e45befa52fb12748ca7171d30096e1d4fc3c365561497c618341299d5?environmentId=100";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1552.006";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/04/09";
  <http://purl.org/dc/terms/creator> "Markus Neis";
  <http://purl.org/dc/terms/description> "Detects Access to Domain Group Policies stored in SYSVOL";
  <http://purl.org/dc/terms/id> "05f3c945-dcc8-4393-9f3d-af65077a8f86";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious SYSVOL Domain Group Policy Access";
  sigma:detectionCondition "selection";
  sigma:falsePositive "administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"SYSVOL\\\\\\\\policies\\\\\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://adsecurity.org/?p=2288", "https://www.hybrid-analysis.com/sample/f2943f5e45befa52fb12748ca7171d30096e1d4fc3c365561497c618341299d5?environmentId=100";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1552.006" .

<http://w3id.org/sepses/resource/sigma/sigma-ffa6861c-4461-4f59-8a41-578c39f3f23e>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Tony Lambert), oscd.community";
  <http://purl.org/dc/terms/description> "Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials.";
  <http://purl.org/dc/terms/id> "ffa6861c-4461-4f59-8a41-578c39f3f23e";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "LSASS Memory Dumping";
  sigma:detectionCondition "selection1 and not selection2 or selection3";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"lsass\")
|| regex(str(?cmdLine),\".dmp\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/1e1ef6be-12fc-11e9-8d76-4d6bb837cda4.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/210b4ea4-12fc-11e9-8d76-4d6bb837cda4.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003/T1003.yaml";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Tony Lambert), oscd.community";
  <http://purl.org/dc/terms/description> "Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials.";
  <http://purl.org/dc/terms/id> "ffa6861c-4461-4f59-8a41-578c39f3f23e";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "LSASS Memory Dumping";
  sigma:detectionCondition "selection1 and not selection2 or selection3";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"lsass\")
|| regex(str(?cmdLine),\".dmp\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/1e1ef6be-12fc-11e9-8d76-4d6bb837cda4.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/210b4ea4-12fc-11e9-8d76-4d6bb837cda4.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003/T1003.yaml";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Tony Lambert), oscd.community";
  <http://purl.org/dc/terms/description> "Detect creation of dump files containing the memory space of lsass.exe, which contains sensitive credentials. Identifies usage of Sysinternals procdump.exe to export the memory space of lsass.exe which contains sensitive credentials.";
  <http://purl.org/dc/terms/id> "ffa6861c-4461-4f59-8a41-578c39f3f23e";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "LSASS Memory Dumping";
  sigma:detectionCondition "selection1 and not selection2 or selection3";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"lsass\")
|| regex(str(?cmdLine),\".dmp\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/1e1ef6be-12fc-11e9-8d76-4d6bb837cda4.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/210b4ea4-12fc-11e9-8d76-4d6bb837cda4.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1003/T1003.yaml";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.001" .

<http://w3id.org/sepses/resource/sigma/sigma-21dd6d38-2b18-4453-9404-a0fe4a0cc288>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/01/13";
  <http://purl.org/dc/terms/creator> "Sreeman";
  <http://purl.org/dc/terms/description> "Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later.";
  <http://purl.org/dc/terms/id> "21dd6d38-2b18-4453-9404-a0fe4a0cc288";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Curl Start Combination";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts (installers)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"curl.* start \")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://medium.com/@reegun/curl-exe-is-the-new-rundll32-exe-lolbin-3f79c5f35983";
  rule:hasDetectedRule "attack.t1218", "attack.execution", "attack.command_and_control",
    "attack.t1105";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/01/13";
  <http://purl.org/dc/terms/creator> "Sreeman";
  <http://purl.org/dc/terms/description> "Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later.";
  <http://purl.org/dc/terms/id> "21dd6d38-2b18-4453-9404-a0fe4a0cc288";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Curl Start Combination";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts (installers)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"curl.* start \")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://medium.com/@reegun/curl-exe-is-the-new-rundll32-exe-lolbin-3f79c5f35983";
  rule:hasDetectedRule "attack.t1218", "attack.execution", "attack.command_and_control",
    "attack.t1105";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/01/13";
  <http://purl.org/dc/terms/creator> "Sreeman";
  <http://purl.org/dc/terms/description> "Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later.";
  <http://purl.org/dc/terms/id> "21dd6d38-2b18-4453-9404-a0fe4a0cc288";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Curl Start Combination";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts (installers)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"curl.* start \")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://medium.com/@reegun/curl-exe-is-the-new-rundll32-exe-lolbin-3f79c5f35983";
  rule:hasDetectedRule "attack.t1218", "attack.execution", "attack.command_and_control",
    "attack.t1105";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/01/13";
  <http://purl.org/dc/terms/creator> "Sreeman";
  <http://purl.org/dc/terms/description> "Adversaries can use curl to download payloads remotely and execute them. Curl is included by default in Windows 10 build 17063 and later.";
  <http://purl.org/dc/terms/id> "21dd6d38-2b18-4453-9404-a0fe4a0cc288";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Curl Start Combination";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative scripts (installers)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"curl.* start \")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://medium.com/@reegun/curl-exe-is-the-new-rundll32-exe-lolbin-3f79c5f35983";
  rule:hasDetectedRule "attack.t1218", "attack.execution", "attack.command_and_control",
    "attack.t1105" .

<http://w3id.org/sepses/resource/sigma/sigma-8f70ac5f-1f6f-4f8e-b454-db19561216c5>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/08/28";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line";
  <http://purl.org/dc/terms/id> "8f70ac5f-1f6f-4f8e-b454-db19561216c5";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell DownloadFile";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"powershell\")
|| regex(str(?cmdLine),\".DownloadFile\")
|| regex(str(?cmdLine),\"System.Net.WebClient\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2020/03/apt41-initiates-global-intrusion-campaign-using-multiple-exploits.html";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.command_and_control",
    "attack.t1105", "attack.t1104";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/08/28";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line";
  <http://purl.org/dc/terms/id> "8f70ac5f-1f6f-4f8e-b454-db19561216c5";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell DownloadFile";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"powershell\")
|| regex(str(?cmdLine),\".DownloadFile\")
|| regex(str(?cmdLine),\"System.Net.WebClient\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2020/03/apt41-initiates-global-intrusion-campaign-using-multiple-exploits.html";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.command_and_control",
    "attack.t1105", "attack.t1104";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/08/28";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line";
  <http://purl.org/dc/terms/id> "8f70ac5f-1f6f-4f8e-b454-db19561216c5";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell DownloadFile";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"powershell\")
|| regex(str(?cmdLine),\".DownloadFile\")
|| regex(str(?cmdLine),\"System.Net.WebClient\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2020/03/apt41-initiates-global-intrusion-campaign-using-multiple-exploits.html";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.command_and_control",
    "attack.t1105", "attack.t1104";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/08/28";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line";
  <http://purl.org/dc/terms/id> "8f70ac5f-1f6f-4f8e-b454-db19561216c5";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell DownloadFile";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"powershell\")
|| regex(str(?cmdLine),\".DownloadFile\")
|| regex(str(?cmdLine),\"System.Net.WebClient\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2020/03/apt41-initiates-global-intrusion-campaign-using-multiple-exploits.html";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.command_and_control",
    "attack.t1105", "attack.t1104";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/08/28";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line";
  <http://purl.org/dc/terms/id> "8f70ac5f-1f6f-4f8e-b454-db19561216c5";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell DownloadFile";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"powershell\")
|| regex(str(?cmdLine),\".DownloadFile\")
|| regex(str(?cmdLine),\"System.Net.WebClient\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2020/03/apt41-initiates-global-intrusion-campaign-using-multiple-exploits.html";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.command_and_control",
    "attack.t1105", "attack.t1104";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/08/28";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects the execution of powershell, a WebClient object creation and the invocation of DownloadFile in a single command line";
  <http://purl.org/dc/terms/id> "8f70ac5f-1f6f-4f8e-b454-db19561216c5";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell DownloadFile";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"powershell\")
|| regex(str(?cmdLine),\".DownloadFile\")
|| regex(str(?cmdLine),\"System.Net.WebClient\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2020/03/apt41-initiates-global-intrusion-campaign-using-multiple-exploits.html";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086", "attack.command_and_control",
    "attack.t1105", "attack.t1104" .

<http://w3id.org/sepses/resource/sigma/sigma-fa4b21c9-0057-4493-b289-2556416ae4d7>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/12";
  <http://purl.org/dc/terms/creator> "Karneades / Markus Neis";
  <http://purl.org/dc/terms/description> "Detects Possible Squirrel Packages Manager as Lolbin";
  <http://purl.org/dc/terms/id> "fa4b21c9-0057-4493-b289-2556416ae4d7";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Squirrel Lolbin";
  sigma:detectionCondition "selection";
  sigma:falsePositive "1Clipboard", "Beaker Browser", "Caret", "Collectie", "Discord",
    "Figma", "Flow", "Ghost", "GitHub Desktop", "GitKraken", "Hyper", "Insomnia", "JIBO",
    "Kap", "Kitematic", "Now Desktop", "Postman", "PostmanCanary", "Rambox", "Simplenote",
    "Skype", "Slack", "SourceTree", "Stride", "Svgsus", "WebTorrent", "WhatsApp", "WordPress.com",
    "atom", "gitkraken", "slack", "teams";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*--processStart.*.exe.*\")
|| regex(str(?cmdLine),\".*--processStartAndWait.*.exe.*\")
|| regex(str(?cmdLine),\".*--createShortcut.*.exe.*\")
)
FILTER (regex(str(?cmdLine),\"update.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.hexacorn.com/blog/2018/08/16/squirrel-as-a-lolbin/",
    "http://www.hexacorn.com/blog/2019/03/30/sqirrel-packages-manager-as-a-lolbin-a-k-a-many-electron-apps-are-lolbins-by-default/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/12";
  <http://purl.org/dc/terms/creator> "Karneades / Markus Neis";
  <http://purl.org/dc/terms/description> "Detects Possible Squirrel Packages Manager as Lolbin";
  <http://purl.org/dc/terms/id> "fa4b21c9-0057-4493-b289-2556416ae4d7";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Squirrel Lolbin";
  sigma:detectionCondition "selection";
  sigma:falsePositive "1Clipboard", "Beaker Browser", "Caret", "Collectie", "Discord",
    "Figma", "Flow", "Ghost", "GitHub Desktop", "GitKraken", "Hyper", "Insomnia", "JIBO",
    "Kap", "Kitematic", "Now Desktop", "Postman", "PostmanCanary", "Rambox", "Simplenote",
    "Skype", "Slack", "SourceTree", "Stride", "Svgsus", "WebTorrent", "WhatsApp", "WordPress.com",
    "atom", "gitkraken", "slack", "teams";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*--processStart.*.exe.*\")
|| regex(str(?cmdLine),\".*--processStartAndWait.*.exe.*\")
|| regex(str(?cmdLine),\".*--createShortcut.*.exe.*\")
)
FILTER (regex(str(?cmdLine),\"update.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.hexacorn.com/blog/2018/08/16/squirrel-as-a-lolbin/",
    "http://www.hexacorn.com/blog/2019/03/30/sqirrel-packages-manager-as-a-lolbin-a-k-a-many-electron-apps-are-lolbins-by-default/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/12";
  <http://purl.org/dc/terms/creator> "Karneades / Markus Neis";
  <http://purl.org/dc/terms/description> "Detects Possible Squirrel Packages Manager as Lolbin";
  <http://purl.org/dc/terms/id> "fa4b21c9-0057-4493-b289-2556416ae4d7";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Squirrel Lolbin";
  sigma:detectionCondition "selection";
  sigma:falsePositive "1Clipboard", "Beaker Browser", "Caret", "Collectie", "Discord",
    "Figma", "Flow", "Ghost", "GitHub Desktop", "GitKraken", "Hyper", "Insomnia", "JIBO",
    "Kap", "Kitematic", "Now Desktop", "Postman", "PostmanCanary", "Rambox", "Simplenote",
    "Skype", "Slack", "SourceTree", "Stride", "Svgsus", "WebTorrent", "WhatsApp", "WordPress.com",
    "atom", "gitkraken", "slack", "teams";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*--processStart.*.exe.*\")
|| regex(str(?cmdLine),\".*--processStartAndWait.*.exe.*\")
|| regex(str(?cmdLine),\".*--createShortcut.*.exe.*\")
)
FILTER (regex(str(?cmdLine),\"update.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.hexacorn.com/blog/2018/08/16/squirrel-as-a-lolbin/",
    "http://www.hexacorn.com/blog/2019/03/30/sqirrel-packages-manager-as-a-lolbin-a-k-a-many-electron-apps-are-lolbins-by-default/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution" .

<http://w3id.org/sepses/resource/sigma/sigma-bed2a484-9348-4143-8a8a-b801c979301c>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/01/01";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects certain command line parameters often used during reconnaissance activity via web shells";
  <http://purl.org/dc/terms/id> "bed2a484-9348-4143-8a8a-b801c979301c";
  <http://purl.org/dc/terms/modified> "2021/01/11";
  <http://purl.org/dc/terms/title> "Webshell Detection With Command Line Keywords";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"apache.*\")
|| regex(str(?ParentImage),\"tomcat.*\")
|| regex(str(?ParentImage),\"w3wp.exe\")
|| regex(str(?ParentImage),\"php-cgi.exe\")
|| regex(str(?ParentImage),\"nginx.exe\")
|| regex(str(?ParentImage),\"httpd.exe\")
)
FILTER (regex(str(?cmdLine),\".*whoami.*\")
|| regex(str(?cmdLine),\".*net user .*\")
|| regex(str(?cmdLine),\".*net use .*\")
|| regex(str(?cmdLine),\".*net group .*\")
|| regex(str(?cmdLine),\".*quser.*\")
|| regex(str(?cmdLine),\".*ping -n .*\")
|| regex(str(?cmdLine),\".*systeminfo\")
|| regex(str(?cmdLine),\".*&cd&echo.*\")
|| regex(str(?cmdLine),\".*cd /d.*\")
|| regex(str(?cmdLine),\".*ipconfig.*\")
|| regex(str(?cmdLine),\".*pathping.*\")
|| regex(str(?cmdLine),\".*tracert.*\")
|| regex(str(?cmdLine),\".*netstat.*\")
|| regex(str(?cmdLine),\".*schtasks.*\")
|| regex(str(?cmdLine),\".*vssadmin.*\")
|| regex(str(?cmdLine),\".*wevtutil.*\")
|| regex(str(?cmdLine),\".*tasklist.*\")
|| regex(str(?cmdLine),\".*wmic /node:.*\")
|| regex(str(?cmdLine),\".*Test-NetConnection.*\")
|| regex(str(?cmdLine),\".*dir \")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/bumblebee-webshell-xhunt-campaign/",
    "https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-ii.html";
  rule:hasDetectedRule "attack.t1018", "attack.t1087", "attack.persistence", "attack.privilege_escalation",
    "attack.t1100", "attack.t1505.003", "attack.t1033";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/01/01";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects certain command line parameters often used during reconnaissance activity via web shells";
  <http://purl.org/dc/terms/id> "bed2a484-9348-4143-8a8a-b801c979301c";
  <http://purl.org/dc/terms/modified> "2021/01/11";
  <http://purl.org/dc/terms/title> "Webshell Detection With Command Line Keywords";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"apache.*\")
|| regex(str(?ParentImage),\"tomcat.*\")
|| regex(str(?ParentImage),\"w3wp.exe\")
|| regex(str(?ParentImage),\"php-cgi.exe\")
|| regex(str(?ParentImage),\"nginx.exe\")
|| regex(str(?ParentImage),\"httpd.exe\")
)
FILTER (regex(str(?cmdLine),\".*whoami.*\")
|| regex(str(?cmdLine),\".*net user .*\")
|| regex(str(?cmdLine),\".*net use .*\")
|| regex(str(?cmdLine),\".*net group .*\")
|| regex(str(?cmdLine),\".*quser.*\")
|| regex(str(?cmdLine),\".*ping -n .*\")
|| regex(str(?cmdLine),\".*systeminfo\")
|| regex(str(?cmdLine),\".*&cd&echo.*\")
|| regex(str(?cmdLine),\".*cd /d.*\")
|| regex(str(?cmdLine),\".*ipconfig.*\")
|| regex(str(?cmdLine),\".*pathping.*\")
|| regex(str(?cmdLine),\".*tracert.*\")
|| regex(str(?cmdLine),\".*netstat.*\")
|| regex(str(?cmdLine),\".*schtasks.*\")
|| regex(str(?cmdLine),\".*vssadmin.*\")
|| regex(str(?cmdLine),\".*wevtutil.*\")
|| regex(str(?cmdLine),\".*tasklist.*\")
|| regex(str(?cmdLine),\".*wmic /node:.*\")
|| regex(str(?cmdLine),\".*Test-NetConnection.*\")
|| regex(str(?cmdLine),\".*dir \")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/bumblebee-webshell-xhunt-campaign/",
    "https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-ii.html";
  rule:hasDetectedRule "attack.t1018", "attack.t1087", "attack.persistence", "attack.privilege_escalation",
    "attack.t1100", "attack.t1505.003", "attack.t1033";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/01/01";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects certain command line parameters often used during reconnaissance activity via web shells";
  <http://purl.org/dc/terms/id> "bed2a484-9348-4143-8a8a-b801c979301c";
  <http://purl.org/dc/terms/modified> "2021/01/11";
  <http://purl.org/dc/terms/title> "Webshell Detection With Command Line Keywords";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"apache.*\")
|| regex(str(?ParentImage),\"tomcat.*\")
|| regex(str(?ParentImage),\"w3wp.exe\")
|| regex(str(?ParentImage),\"php-cgi.exe\")
|| regex(str(?ParentImage),\"nginx.exe\")
|| regex(str(?ParentImage),\"httpd.exe\")
)
FILTER (regex(str(?cmdLine),\".*whoami.*\")
|| regex(str(?cmdLine),\".*net user .*\")
|| regex(str(?cmdLine),\".*net use .*\")
|| regex(str(?cmdLine),\".*net group .*\")
|| regex(str(?cmdLine),\".*quser.*\")
|| regex(str(?cmdLine),\".*ping -n .*\")
|| regex(str(?cmdLine),\".*systeminfo\")
|| regex(str(?cmdLine),\".*&cd&echo.*\")
|| regex(str(?cmdLine),\".*cd /d.*\")
|| regex(str(?cmdLine),\".*ipconfig.*\")
|| regex(str(?cmdLine),\".*pathping.*\")
|| regex(str(?cmdLine),\".*tracert.*\")
|| regex(str(?cmdLine),\".*netstat.*\")
|| regex(str(?cmdLine),\".*schtasks.*\")
|| regex(str(?cmdLine),\".*vssadmin.*\")
|| regex(str(?cmdLine),\".*wevtutil.*\")
|| regex(str(?cmdLine),\".*tasklist.*\")
|| regex(str(?cmdLine),\".*wmic /node:.*\")
|| regex(str(?cmdLine),\".*Test-NetConnection.*\")
|| regex(str(?cmdLine),\".*dir \")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/bumblebee-webshell-xhunt-campaign/",
    "https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-ii.html";
  rule:hasDetectedRule "attack.t1018", "attack.t1087", "attack.persistence", "attack.privilege_escalation",
    "attack.t1100", "attack.t1505.003", "attack.t1033";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/01/01";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects certain command line parameters often used during reconnaissance activity via web shells";
  <http://purl.org/dc/terms/id> "bed2a484-9348-4143-8a8a-b801c979301c";
  <http://purl.org/dc/terms/modified> "2021/01/11";
  <http://purl.org/dc/terms/title> "Webshell Detection With Command Line Keywords";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"apache.*\")
|| regex(str(?ParentImage),\"tomcat.*\")
|| regex(str(?ParentImage),\"w3wp.exe\")
|| regex(str(?ParentImage),\"php-cgi.exe\")
|| regex(str(?ParentImage),\"nginx.exe\")
|| regex(str(?ParentImage),\"httpd.exe\")
)
FILTER (regex(str(?cmdLine),\".*whoami.*\")
|| regex(str(?cmdLine),\".*net user .*\")
|| regex(str(?cmdLine),\".*net use .*\")
|| regex(str(?cmdLine),\".*net group .*\")
|| regex(str(?cmdLine),\".*quser.*\")
|| regex(str(?cmdLine),\".*ping -n .*\")
|| regex(str(?cmdLine),\".*systeminfo\")
|| regex(str(?cmdLine),\".*&cd&echo.*\")
|| regex(str(?cmdLine),\".*cd /d.*\")
|| regex(str(?cmdLine),\".*ipconfig.*\")
|| regex(str(?cmdLine),\".*pathping.*\")
|| regex(str(?cmdLine),\".*tracert.*\")
|| regex(str(?cmdLine),\".*netstat.*\")
|| regex(str(?cmdLine),\".*schtasks.*\")
|| regex(str(?cmdLine),\".*vssadmin.*\")
|| regex(str(?cmdLine),\".*wevtutil.*\")
|| regex(str(?cmdLine),\".*tasklist.*\")
|| regex(str(?cmdLine),\".*wmic /node:.*\")
|| regex(str(?cmdLine),\".*Test-NetConnection.*\")
|| regex(str(?cmdLine),\".*dir \")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/bumblebee-webshell-xhunt-campaign/",
    "https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-ii.html";
  rule:hasDetectedRule "attack.t1018", "attack.t1087", "attack.persistence", "attack.privilege_escalation",
    "attack.t1100", "attack.t1505.003", "attack.t1033";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/01/01";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects certain command line parameters often used during reconnaissance activity via web shells";
  <http://purl.org/dc/terms/id> "bed2a484-9348-4143-8a8a-b801c979301c";
  <http://purl.org/dc/terms/modified> "2021/01/11";
  <http://purl.org/dc/terms/title> "Webshell Detection With Command Line Keywords";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"apache.*\")
|| regex(str(?ParentImage),\"tomcat.*\")
|| regex(str(?ParentImage),\"w3wp.exe\")
|| regex(str(?ParentImage),\"php-cgi.exe\")
|| regex(str(?ParentImage),\"nginx.exe\")
|| regex(str(?ParentImage),\"httpd.exe\")
)
FILTER (regex(str(?cmdLine),\".*whoami.*\")
|| regex(str(?cmdLine),\".*net user .*\")
|| regex(str(?cmdLine),\".*net use .*\")
|| regex(str(?cmdLine),\".*net group .*\")
|| regex(str(?cmdLine),\".*quser.*\")
|| regex(str(?cmdLine),\".*ping -n .*\")
|| regex(str(?cmdLine),\".*systeminfo\")
|| regex(str(?cmdLine),\".*&cd&echo.*\")
|| regex(str(?cmdLine),\".*cd /d.*\")
|| regex(str(?cmdLine),\".*ipconfig.*\")
|| regex(str(?cmdLine),\".*pathping.*\")
|| regex(str(?cmdLine),\".*tracert.*\")
|| regex(str(?cmdLine),\".*netstat.*\")
|| regex(str(?cmdLine),\".*schtasks.*\")
|| regex(str(?cmdLine),\".*vssadmin.*\")
|| regex(str(?cmdLine),\".*wevtutil.*\")
|| regex(str(?cmdLine),\".*tasklist.*\")
|| regex(str(?cmdLine),\".*wmic /node:.*\")
|| regex(str(?cmdLine),\".*Test-NetConnection.*\")
|| regex(str(?cmdLine),\".*dir \")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/bumblebee-webshell-xhunt-campaign/",
    "https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-ii.html";
  rule:hasDetectedRule "attack.t1018", "attack.t1087", "attack.persistence", "attack.privilege_escalation",
    "attack.t1100", "attack.t1505.003", "attack.t1033";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/01/01";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects certain command line parameters often used during reconnaissance activity via web shells";
  <http://purl.org/dc/terms/id> "bed2a484-9348-4143-8a8a-b801c979301c";
  <http://purl.org/dc/terms/modified> "2021/01/11";
  <http://purl.org/dc/terms/title> "Webshell Detection With Command Line Keywords";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"apache.*\")
|| regex(str(?ParentImage),\"tomcat.*\")
|| regex(str(?ParentImage),\"w3wp.exe\")
|| regex(str(?ParentImage),\"php-cgi.exe\")
|| regex(str(?ParentImage),\"nginx.exe\")
|| regex(str(?ParentImage),\"httpd.exe\")
)
FILTER (regex(str(?cmdLine),\".*whoami.*\")
|| regex(str(?cmdLine),\".*net user .*\")
|| regex(str(?cmdLine),\".*net use .*\")
|| regex(str(?cmdLine),\".*net group .*\")
|| regex(str(?cmdLine),\".*quser.*\")
|| regex(str(?cmdLine),\".*ping -n .*\")
|| regex(str(?cmdLine),\".*systeminfo\")
|| regex(str(?cmdLine),\".*&cd&echo.*\")
|| regex(str(?cmdLine),\".*cd /d.*\")
|| regex(str(?cmdLine),\".*ipconfig.*\")
|| regex(str(?cmdLine),\".*pathping.*\")
|| regex(str(?cmdLine),\".*tracert.*\")
|| regex(str(?cmdLine),\".*netstat.*\")
|| regex(str(?cmdLine),\".*schtasks.*\")
|| regex(str(?cmdLine),\".*vssadmin.*\")
|| regex(str(?cmdLine),\".*wevtutil.*\")
|| regex(str(?cmdLine),\".*tasklist.*\")
|| regex(str(?cmdLine),\".*wmic /node:.*\")
|| regex(str(?cmdLine),\".*Test-NetConnection.*\")
|| regex(str(?cmdLine),\".*dir \")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/bumblebee-webshell-xhunt-campaign/",
    "https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-ii.html";
  rule:hasDetectedRule "attack.t1018", "attack.t1087", "attack.persistence", "attack.privilege_escalation",
    "attack.t1100", "attack.t1505.003", "attack.t1033";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/01/01";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects certain command line parameters often used during reconnaissance activity via web shells";
  <http://purl.org/dc/terms/id> "bed2a484-9348-4143-8a8a-b801c979301c";
  <http://purl.org/dc/terms/modified> "2021/01/11";
  <http://purl.org/dc/terms/title> "Webshell Detection With Command Line Keywords";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"apache.*\")
|| regex(str(?ParentImage),\"tomcat.*\")
|| regex(str(?ParentImage),\"w3wp.exe\")
|| regex(str(?ParentImage),\"php-cgi.exe\")
|| regex(str(?ParentImage),\"nginx.exe\")
|| regex(str(?ParentImage),\"httpd.exe\")
)
FILTER (regex(str(?cmdLine),\".*whoami.*\")
|| regex(str(?cmdLine),\".*net user .*\")
|| regex(str(?cmdLine),\".*net use .*\")
|| regex(str(?cmdLine),\".*net group .*\")
|| regex(str(?cmdLine),\".*quser.*\")
|| regex(str(?cmdLine),\".*ping -n .*\")
|| regex(str(?cmdLine),\".*systeminfo\")
|| regex(str(?cmdLine),\".*&cd&echo.*\")
|| regex(str(?cmdLine),\".*cd /d.*\")
|| regex(str(?cmdLine),\".*ipconfig.*\")
|| regex(str(?cmdLine),\".*pathping.*\")
|| regex(str(?cmdLine),\".*tracert.*\")
|| regex(str(?cmdLine),\".*netstat.*\")
|| regex(str(?cmdLine),\".*schtasks.*\")
|| regex(str(?cmdLine),\".*vssadmin.*\")
|| regex(str(?cmdLine),\".*wevtutil.*\")
|| regex(str(?cmdLine),\".*tasklist.*\")
|| regex(str(?cmdLine),\".*wmic /node:.*\")
|| regex(str(?cmdLine),\".*Test-NetConnection.*\")
|| regex(str(?cmdLine),\".*dir \")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/bumblebee-webshell-xhunt-campaign/",
    "https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-ii.html";
  rule:hasDetectedRule "attack.t1018", "attack.t1087", "attack.persistence", "attack.privilege_escalation",
    "attack.t1100", "attack.t1505.003", "attack.t1033" .

<http://w3id.org/sepses/resource/sigma/sigma-07f8bdc2-c9b3-472a-9817-5a670b872f53>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "jmallette";
  <http://purl.org/dc/terms/description> "Detects usage of cmdkey to look for cached credentials";
  <http://purl.org/dc/terms/id> "07f8bdc2-c9b3-472a-9817-5a670b872f53";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Cmdkey Cached Credentials Recon";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrative tasks.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /list .*\")
FILTER regex(str(?cmdLine),\"cmdkey.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://technet.microsoft.com/en-us/library/cc754243(v=ws.11).aspx",
    "https://www.peew.pw/blog/2017/11/26/exploring-cmdkey-an-edge-case-for-privilege-escalation";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.005";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "jmallette";
  <http://purl.org/dc/terms/description> "Detects usage of cmdkey to look for cached credentials";
  <http://purl.org/dc/terms/id> "07f8bdc2-c9b3-472a-9817-5a670b872f53";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Cmdkey Cached Credentials Recon";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrative tasks.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /list .*\")
FILTER regex(str(?cmdLine),\"cmdkey.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://technet.microsoft.com/en-us/library/cc754243(v=ws.11).aspx",
    "https://www.peew.pw/blog/2017/11/26/exploring-cmdkey-an-edge-case-for-privilege-escalation";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.005";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "jmallette";
  <http://purl.org/dc/terms/description> "Detects usage of cmdkey to look for cached credentials";
  <http://purl.org/dc/terms/id> "07f8bdc2-c9b3-472a-9817-5a670b872f53";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Cmdkey Cached Credentials Recon";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrative tasks.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /list .*\")
FILTER regex(str(?cmdLine),\"cmdkey.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://technet.microsoft.com/en-us/library/cc754243(v=ws.11).aspx",
    "https://www.peew.pw/blog/2017/11/26/exploring-cmdkey-an-edge-case-for-privilege-escalation";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.005" .

<http://w3id.org/sepses/resource/sigma/sigma-812837bb-b17f-45e9-8bd0-0ec35d2e3bd6>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/29";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Harish Segar (rule)";
  <http://purl.org/dc/terms/description> "Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands.";
  <http://purl.org/dc/terms/id> "812837bb-b17f-45e9-8bd0-0ec35d2e3bd6";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious XOR Encoded PowerShell Command Line";
  sigma:detectionCondition "selection and filter";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"bxor\")
|| regex(str(?cmdLine),\"join\")
|| regex(str(?cmdLine),\"char\")
)
}""";
  sigma:level "medium";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086";
  sigma:logSourceService "powershell-classic";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/29";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Harish Segar (rule)";
  <http://purl.org/dc/terms/description> "Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands.";
  <http://purl.org/dc/terms/id> "812837bb-b17f-45e9-8bd0-0ec35d2e3bd6";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious XOR Encoded PowerShell Command Line";
  sigma:detectionCondition "selection and filter";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"bxor\")
|| regex(str(?cmdLine),\"join\")
|| regex(str(?cmdLine),\"char\")
)
}""";
  sigma:level "medium";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086";
  sigma:logSourceService "powershell-classic";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/29";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Harish Segar (rule)";
  <http://purl.org/dc/terms/description> "Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands.";
  <http://purl.org/dc/terms/id> "812837bb-b17f-45e9-8bd0-0ec35d2e3bd6";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious XOR Encoded PowerShell Command Line";
  sigma:detectionCondition "selection and filter";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"bxor\")
|| regex(str(?cmdLine),\"join\")
|| regex(str(?cmdLine),\"char\")
)
}""";
  sigma:level "medium";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086";
  sigma:logSourceService "powershell-classic" .

<http://w3id.org/sepses/resource/sigma/sigma-e62a9f0c-ca1e-46b2-85d5-a6da77f86d1a>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration";
  <http://purl.org/dc/terms/id> "e62a9f0c-ca1e-46b2-85d5-a6da77f86d1a";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Certutil Encode";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"certutil -f -encode .*\")
|| regex(str(?cmdLine),\"certutil.exe -f -encode .*\")
|| regex(str(?cmdLine),\"certutil -encode -f .*\")
|| regex(str(?cmdLine),\"certutil.exe -encode -f .*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/",
    "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious a certutil command that used to encode files, which is sometimes used for data exfiltration";
  <http://purl.org/dc/terms/id> "e62a9f0c-ca1e-46b2-85d5-a6da77f86d1a";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Certutil Encode";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"certutil -f -encode .*\")
|| regex(str(?cmdLine),\"certutil.exe -f -encode .*\")
|| regex(str(?cmdLine),\"certutil -encode -f .*\")
|| regex(str(?cmdLine),\"certutil.exe -encode -f .*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/",
    "https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1027" .

<http://w3id.org/sepses/resource/sigma/sigma-138d3531-8793-4f50-a2cd-f291b2863d78>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Victor Sergeev, oscd.community";
  <http://purl.org/dc/terms/description> "Detects service path modification to powershell/cmd";
  <http://purl.org/dc/terms/id> "138d3531-8793-4f50-a2cd-f291b2863d78";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Service Path Modification";
  sigma:detectionCondition "selection_1 and selection_2";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"powershell\")
|| regex(str(?cmdLine),\"cmd\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1031/T1031.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1543.003",
    "attack.t1031";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Victor Sergeev, oscd.community";
  <http://purl.org/dc/terms/description> "Detects service path modification to powershell/cmd";
  <http://purl.org/dc/terms/id> "138d3531-8793-4f50-a2cd-f291b2863d78";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Service Path Modification";
  sigma:detectionCondition "selection_1 and selection_2";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"powershell\")
|| regex(str(?cmdLine),\"cmd\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1031/T1031.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1543.003",
    "attack.t1031";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Victor Sergeev, oscd.community";
  <http://purl.org/dc/terms/description> "Detects service path modification to powershell/cmd";
  <http://purl.org/dc/terms/id> "138d3531-8793-4f50-a2cd-f291b2863d78";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Service Path Modification";
  sigma:detectionCondition "selection_1 and selection_2";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"powershell\")
|| regex(str(?cmdLine),\"cmd\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1031/T1031.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1543.003",
    "attack.t1031";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Victor Sergeev, oscd.community";
  <http://purl.org/dc/terms/description> "Detects service path modification to powershell/cmd";
  <http://purl.org/dc/terms/id> "138d3531-8793-4f50-a2cd-f291b2863d78";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Service Path Modification";
  sigma:detectionCondition "selection_1 and selection_2";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"powershell\")
|| regex(str(?cmdLine),\"cmd\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1031/T1031.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1543.003",
    "attack.t1031" .

<http://w3id.org/sepses/resource/sigma/sigma-ca2092a1-c273-4878-9b4b-0d60115bf5ea>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/09/03";
  <http://purl.org/dc/terms/creator> "Florian Roth, Markus Neis";
  <http://purl.org/dc/terms/description> "Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)";
  <http://purl.org/dc/terms/id> "ca2092a1-c273-4878-9b4b-0d60115bf5ea";
  <http://purl.org/dc/terms/modified> "2020/10/20";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Encoded PowerShell Command Line";
  sigma:detectionCondition "selection and not falsepositive1";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -e JAB.*\")
|| regex(str(?cmdLine),\".* -e  JAB.*\")
|| regex(str(?cmdLine),\".* -e   JAB.*\")
|| regex(str(?cmdLine),\".* -e    JAB.*\")
|| regex(str(?cmdLine),\".* -e     JAB.*\")
|| regex(str(?cmdLine),\".* -e      JAB.*\")
|| regex(str(?cmdLine),\".* -en JAB.*\")
|| regex(str(?cmdLine),\".* -enc JAB.*\")
|| regex(str(?cmdLine),\".* -enc.* JAB.*\")
|| regex(str(?cmdLine),\".* -w hidden -e.* JAB.*\")
|| regex(str(?cmdLine),\".* BA^J e-\")
|| regex(str(?cmdLine),\".* -e SUVYI.*\")
|| regex(str(?cmdLine),\".* -e aWV4I.*\")
|| regex(str(?cmdLine),\".* -e SQBFAFgA.*\")
|| regex(str(?cmdLine),\".* -e aQBlAHgA.*\")
|| regex(str(?cmdLine),\".* -enc SUVYI.*\")
|| regex(str(?cmdLine),\".* -enc aWV4I.*\")
|| regex(str(?cmdLine),\".* -enc SQBFAFgA.*\")
|| regex(str(?cmdLine),\".* -enc aQBlAHgA.*\")
|| regex(str(?cmdLine),\".* -e.* IAA.*\")
|| regex(str(?cmdLine),\".* -e.* IAB.*\")
|| regex(str(?cmdLine),\".* -e.* UwB.*\")
|| regex(str(?cmdLine),\".* -e.* cwB.*\")
|| regex(str(?cmdLine),\".*.exe -ENCOD .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/6217d77d-3189-4db2-a957-8ab239f3e01e";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/09/03";
  <http://purl.org/dc/terms/creator> "Florian Roth, Markus Neis";
  <http://purl.org/dc/terms/description> "Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)";
  <http://purl.org/dc/terms/id> "ca2092a1-c273-4878-9b4b-0d60115bf5ea";
  <http://purl.org/dc/terms/modified> "2020/10/20";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Encoded PowerShell Command Line";
  sigma:detectionCondition "selection and not falsepositive1";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -e JAB.*\")
|| regex(str(?cmdLine),\".* -e  JAB.*\")
|| regex(str(?cmdLine),\".* -e   JAB.*\")
|| regex(str(?cmdLine),\".* -e    JAB.*\")
|| regex(str(?cmdLine),\".* -e     JAB.*\")
|| regex(str(?cmdLine),\".* -e      JAB.*\")
|| regex(str(?cmdLine),\".* -en JAB.*\")
|| regex(str(?cmdLine),\".* -enc JAB.*\")
|| regex(str(?cmdLine),\".* -enc.* JAB.*\")
|| regex(str(?cmdLine),\".* -w hidden -e.* JAB.*\")
|| regex(str(?cmdLine),\".* BA^J e-\")
|| regex(str(?cmdLine),\".* -e SUVYI.*\")
|| regex(str(?cmdLine),\".* -e aWV4I.*\")
|| regex(str(?cmdLine),\".* -e SQBFAFgA.*\")
|| regex(str(?cmdLine),\".* -e aQBlAHgA.*\")
|| regex(str(?cmdLine),\".* -enc SUVYI.*\")
|| regex(str(?cmdLine),\".* -enc aWV4I.*\")
|| regex(str(?cmdLine),\".* -enc SQBFAFgA.*\")
|| regex(str(?cmdLine),\".* -enc aQBlAHgA.*\")
|| regex(str(?cmdLine),\".* -e.* IAA.*\")
|| regex(str(?cmdLine),\".* -e.* IAB.*\")
|| regex(str(?cmdLine),\".* -e.* UwB.*\")
|| regex(str(?cmdLine),\".* -e.* cwB.*\")
|| regex(str(?cmdLine),\".*.exe -ENCOD .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/6217d77d-3189-4db2-a957-8ab239f3e01e";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/09/03";
  <http://purl.org/dc/terms/creator> "Florian Roth, Markus Neis";
  <http://purl.org/dc/terms/description> "Detects suspicious powershell process starts with base64 encoded commands (e.g. Emotet)";
  <http://purl.org/dc/terms/id> "ca2092a1-c273-4878-9b4b-0d60115bf5ea";
  <http://purl.org/dc/terms/modified> "2020/10/20";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Encoded PowerShell Command Line";
  sigma:detectionCondition "selection and not falsepositive1";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -e JAB.*\")
|| regex(str(?cmdLine),\".* -e  JAB.*\")
|| regex(str(?cmdLine),\".* -e   JAB.*\")
|| regex(str(?cmdLine),\".* -e    JAB.*\")
|| regex(str(?cmdLine),\".* -e     JAB.*\")
|| regex(str(?cmdLine),\".* -e      JAB.*\")
|| regex(str(?cmdLine),\".* -en JAB.*\")
|| regex(str(?cmdLine),\".* -enc JAB.*\")
|| regex(str(?cmdLine),\".* -enc.* JAB.*\")
|| regex(str(?cmdLine),\".* -w hidden -e.* JAB.*\")
|| regex(str(?cmdLine),\".* BA^J e-\")
|| regex(str(?cmdLine),\".* -e SUVYI.*\")
|| regex(str(?cmdLine),\".* -e aWV4I.*\")
|| regex(str(?cmdLine),\".* -e SQBFAFgA.*\")
|| regex(str(?cmdLine),\".* -e aQBlAHgA.*\")
|| regex(str(?cmdLine),\".* -enc SUVYI.*\")
|| regex(str(?cmdLine),\".* -enc aWV4I.*\")
|| regex(str(?cmdLine),\".* -enc SQBFAFgA.*\")
|| regex(str(?cmdLine),\".* -enc aQBlAHgA.*\")
|| regex(str(?cmdLine),\".* -e.* IAA.*\")
|| regex(str(?cmdLine),\".* -e.* IAB.*\")
|| regex(str(?cmdLine),\".* -e.* UwB.*\")
|| regex(str(?cmdLine),\".* -e.* cwB.*\")
|| regex(str(?cmdLine),\".*.exe -ENCOD .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/6217d77d-3189-4db2-a957-8ab239f3e01e";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086" .

<http://w3id.org/sepses/resource/sigma/sigma-cec8e918-30f7-4e2d-9bfa-a59cc97ae60f>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/12";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community (rule), @harr0ey (idea)";
  <http://purl.org/dc/terms/description> "The OpenWith.exe executes other binary";
  <http://purl.org/dc/terms/id> "cec8e918-30f7-4e2d-9bfa-a59cc97ae60f";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "OpenWith.exe Executes Specified Binary";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of OpenWith.exe by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"/c\")
FILTER regex(str(?cmdLine),\"\\\\OpenWith.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/LOLUtilz/OSBinaries/Openwith.yml",
    "https://twitter.com/harr0ey/status/991670870384021504";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/12";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community (rule), @harr0ey (idea)";
  <http://purl.org/dc/terms/description> "The OpenWith.exe executes other binary";
  <http://purl.org/dc/terms/id> "cec8e918-30f7-4e2d-9bfa-a59cc97ae60f";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "OpenWith.exe Executes Specified Binary";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of OpenWith.exe by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"/c\")
FILTER regex(str(?cmdLine),\"\\\\OpenWith.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/LOLUtilz/OSBinaries/Openwith.yml",
    "https://twitter.com/harr0ey/status/991670870384021504";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/12";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community (rule), @harr0ey (idea)";
  <http://purl.org/dc/terms/description> "The OpenWith.exe executes other binary";
  <http://purl.org/dc/terms/id> "cec8e918-30f7-4e2d-9bfa-a59cc97ae60f";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "OpenWith.exe Executes Specified Binary";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of OpenWith.exe by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"/c\")
FILTER regex(str(?cmdLine),\"\\\\OpenWith.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/LOLUtilz/OSBinaries/Openwith.yml",
    "https://twitter.com/harr0ey/status/991670870384021504";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution" .

<http://w3id.org/sepses/resource/sigma/sigma-e218595b-bbe7-4ee5-8a96-f32a24ad3468>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/03";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious curl process start on Windows and outputs the requested document to a local file";
  <http://purl.org/dc/terms/id> "e218595b-bbe7-4ee5-8a96-f32a24ad3468";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Curl Usage on Windows";
  sigma:detectionCondition "( selection1 or selection2 ) and selection3";
  sigma:falsePositive "Administrative activity", "Scripts created by developers and admins";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\" -O \")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/reegun21/status/1222093798009790464";
  rule:hasDetectedRule "attack.command_and_control", "attack.t1105";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/03";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious curl process start on Windows and outputs the requested document to a local file";
  <http://purl.org/dc/terms/id> "e218595b-bbe7-4ee5-8a96-f32a24ad3468";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Curl Usage on Windows";
  sigma:detectionCondition "( selection1 or selection2 ) and selection3";
  sigma:falsePositive "Administrative activity", "Scripts created by developers and admins";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\" -O \")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/reegun21/status/1222093798009790464";
  rule:hasDetectedRule "attack.command_and_control", "attack.t1105" .

<http://w3id.org/sepses/resource/sigma/sigma-1444443e-6757-43e4-9ea4-c8fc705f79a2>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique.";
  <http://purl.org/dc/terms/id> "1444443e-6757-43e4-9ea4-c8fc705f79a2";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Modification of Boot Configuration";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Unlikely";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/c4732632-9c1d-4980-9fa8-1d98c93f918e.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1490/T1490.yaml";
  rule:hasDetectedRule "attack.impact", "attack.t1490";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Identifies use of the bcdedit command to delete boot configuration data. This tactic is sometimes used as by malware or an attacker as a destructive technique.";
  <http://purl.org/dc/terms/id> "1444443e-6757-43e4-9ea4-c8fc705f79a2";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Modification of Boot Configuration";
  sigma:detectionCondition "selection1 and selection2";
  sigma:falsePositive "Unlikely";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/c4732632-9c1d-4980-9fa8-1d98c93f918e.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1490/T1490.yaml";
  rule:hasDetectedRule "attack.impact", "attack.t1490" .

<http://w3id.org/sepses/resource/sigma/sigma-0c79148b-118e-472b-bdb7-9b57b444cc19>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "Downloads payload from remote server";
  <http://purl.org/dc/terms/id> "0c79148b-118e-472b-bdb7-9b57b444cc19";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Malicious Payload Download via Office Binaries";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"http\")
FILTER (regex(str(?cmdLine),\"\\\\powerpnt.exe\")
|| regex(str(?cmdLine),\"\\\\winword.exe\")
|| regex(str(?cmdLine),\"\\\\excel.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "Reegun J (OCBC Bank)", "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Powerpnt.yml",
    "https://medium.com/@reegun/unsanitized-file-validation-leads-to-malicious-payload-download-via-office-binaries-202d02db7191";
  rule:hasDetectedRule "attack.command_and_control", "attack.t1105";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "Downloads payload from remote server";
  <http://purl.org/dc/terms/id> "0c79148b-118e-472b-bdb7-9b57b444cc19";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Malicious Payload Download via Office Binaries";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"http\")
FILTER (regex(str(?cmdLine),\"\\\\powerpnt.exe\")
|| regex(str(?cmdLine),\"\\\\winword.exe\")
|| regex(str(?cmdLine),\"\\\\excel.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "Reegun J (OCBC Bank)", "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Powerpnt.yml",
    "https://medium.com/@reegun/unsanitized-file-validation-leads-to-malicious-payload-download-via-office-binaries-202d02db7191";
  rule:hasDetectedRule "attack.command_and_control", "attack.t1105" .

<http://w3id.org/sepses/resource/sigma/sigma-5325945e-f1f0-406e-97b8-65104d393fff>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/08/26";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects specific process characteristics of Snatch ransomware word document droppers";
  <http://purl.org/dc/terms/id> "5325945e-f1f0-406e-97b8-65104d393fff";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Snatch Ransomware";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Scripts that shutdown the system immediatly and reboot them in safe mode are unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"shutdown /r /f /t 00\")
|| regex(str(?cmdLine),\"net stop SuperBackupMan\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://news.sophos.com/en-us/2019/12/09/snatch-ransomware-reboots-pcs-into-safe-mode-to-bypass-protection/";
  rule:hasDetectedRule "attack.execution", "attack.t1204";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/08/26";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects specific process characteristics of Snatch ransomware word document droppers";
  <http://purl.org/dc/terms/id> "5325945e-f1f0-406e-97b8-65104d393fff";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Snatch Ransomware";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Scripts that shutdown the system immediatly and reboot them in safe mode are unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"shutdown /r /f /t 00\")
|| regex(str(?cmdLine),\"net stop SuperBackupMan\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://news.sophos.com/en-us/2019/12/09/snatch-ransomware-reboots-pcs-into-safe-mode-to-bypass-protection/";
  rule:hasDetectedRule "attack.execution", "attack.t1204" .

<http://w3id.org/sepses/resource/sigma/sigma-183e7ea8-ac4b-4c23-9aec-b3dac4e401ac>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)";
  <http://purl.org/dc/terms/description> "Detects execution of Net.exe, whether suspicious or benign.";
  <http://purl.org/dc/terms/id> "183e7ea8-ac4b-4c23-9aec-b3dac4e401ac";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe Execution";
  sigma:detectionCondition "selection and cmdline";
  sigma:falsePositive "Will need to be tuned. If using Splunk, I recommend | stats count by Computer,CommandLine following the search for easy hunting by computer/CommandLine.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* group.*\")
|| regex(str(?cmdLine),\".* localgroup.*\")
|| regex(str(?cmdLine),\".* user.*\")
|| regex(str(?cmdLine),\".* view.*\")
|| regex(str(?cmdLine),\".* share\")
|| regex(str(?cmdLine),\".* accounts.*\")
|| regex(str(?cmdLine),\".* use.*\")
|| regex(str(?cmdLine),\".* stop .*\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/4d2e7fc1-af0b-4915-89aa-03d25ba7805e.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/9b3dd402-891c-4c4d-a662-28947168ce61.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/e61f557c-a9d0-4c25-ab5b-bbc46bb24deb.html",
    "https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.discovery", "attack.t1018",
    "attack.t1087.001", "attack.t1087.002", "attack.t1021.002", "attack.t1077", "attack.t1069.001",
    "attack.t1069.002", "attack.t1135", "attack.s0039", "attack.t1049", "attack.t1201";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)";
  <http://purl.org/dc/terms/description> "Detects execution of Net.exe, whether suspicious or benign.";
  <http://purl.org/dc/terms/id> "183e7ea8-ac4b-4c23-9aec-b3dac4e401ac";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe Execution";
  sigma:detectionCondition "selection and cmdline";
  sigma:falsePositive "Will need to be tuned. If using Splunk, I recommend | stats count by Computer,CommandLine following the search for easy hunting by computer/CommandLine.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* group.*\")
|| regex(str(?cmdLine),\".* localgroup.*\")
|| regex(str(?cmdLine),\".* user.*\")
|| regex(str(?cmdLine),\".* view.*\")
|| regex(str(?cmdLine),\".* share\")
|| regex(str(?cmdLine),\".* accounts.*\")
|| regex(str(?cmdLine),\".* use.*\")
|| regex(str(?cmdLine),\".* stop .*\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/4d2e7fc1-af0b-4915-89aa-03d25ba7805e.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/9b3dd402-891c-4c4d-a662-28947168ce61.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/e61f557c-a9d0-4c25-ab5b-bbc46bb24deb.html",
    "https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.discovery", "attack.t1018",
    "attack.t1087.001", "attack.t1087.002", "attack.t1021.002", "attack.t1077", "attack.t1069.001",
    "attack.t1069.002", "attack.t1135", "attack.s0039", "attack.t1049", "attack.t1201";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)";
  <http://purl.org/dc/terms/description> "Detects execution of Net.exe, whether suspicious or benign.";
  <http://purl.org/dc/terms/id> "183e7ea8-ac4b-4c23-9aec-b3dac4e401ac";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe Execution";
  sigma:detectionCondition "selection and cmdline";
  sigma:falsePositive "Will need to be tuned. If using Splunk, I recommend | stats count by Computer,CommandLine following the search for easy hunting by computer/CommandLine.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* group.*\")
|| regex(str(?cmdLine),\".* localgroup.*\")
|| regex(str(?cmdLine),\".* user.*\")
|| regex(str(?cmdLine),\".* view.*\")
|| regex(str(?cmdLine),\".* share\")
|| regex(str(?cmdLine),\".* accounts.*\")
|| regex(str(?cmdLine),\".* use.*\")
|| regex(str(?cmdLine),\".* stop .*\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/4d2e7fc1-af0b-4915-89aa-03d25ba7805e.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/9b3dd402-891c-4c4d-a662-28947168ce61.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/e61f557c-a9d0-4c25-ab5b-bbc46bb24deb.html",
    "https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.discovery", "attack.t1018",
    "attack.t1087.001", "attack.t1087.002", "attack.t1021.002", "attack.t1077", "attack.t1069.001",
    "attack.t1069.002", "attack.t1135", "attack.s0039", "attack.t1049", "attack.t1201";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)";
  <http://purl.org/dc/terms/description> "Detects execution of Net.exe, whether suspicious or benign.";
  <http://purl.org/dc/terms/id> "183e7ea8-ac4b-4c23-9aec-b3dac4e401ac";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe Execution";
  sigma:detectionCondition "selection and cmdline";
  sigma:falsePositive "Will need to be tuned. If using Splunk, I recommend | stats count by Computer,CommandLine following the search for easy hunting by computer/CommandLine.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* group.*\")
|| regex(str(?cmdLine),\".* localgroup.*\")
|| regex(str(?cmdLine),\".* user.*\")
|| regex(str(?cmdLine),\".* view.*\")
|| regex(str(?cmdLine),\".* share\")
|| regex(str(?cmdLine),\".* accounts.*\")
|| regex(str(?cmdLine),\".* use.*\")
|| regex(str(?cmdLine),\".* stop .*\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/4d2e7fc1-af0b-4915-89aa-03d25ba7805e.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/9b3dd402-891c-4c4d-a662-28947168ce61.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/e61f557c-a9d0-4c25-ab5b-bbc46bb24deb.html",
    "https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.discovery", "attack.t1018",
    "attack.t1087.001", "attack.t1087.002", "attack.t1021.002", "attack.t1077", "attack.t1069.001",
    "attack.t1069.002", "attack.t1135", "attack.s0039", "attack.t1049", "attack.t1201";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)";
  <http://purl.org/dc/terms/description> "Detects execution of Net.exe, whether suspicious or benign.";
  <http://purl.org/dc/terms/id> "183e7ea8-ac4b-4c23-9aec-b3dac4e401ac";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe Execution";
  sigma:detectionCondition "selection and cmdline";
  sigma:falsePositive "Will need to be tuned. If using Splunk, I recommend | stats count by Computer,CommandLine following the search for easy hunting by computer/CommandLine.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* group.*\")
|| regex(str(?cmdLine),\".* localgroup.*\")
|| regex(str(?cmdLine),\".* user.*\")
|| regex(str(?cmdLine),\".* view.*\")
|| regex(str(?cmdLine),\".* share\")
|| regex(str(?cmdLine),\".* accounts.*\")
|| regex(str(?cmdLine),\".* use.*\")
|| regex(str(?cmdLine),\".* stop .*\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/4d2e7fc1-af0b-4915-89aa-03d25ba7805e.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/9b3dd402-891c-4c4d-a662-28947168ce61.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/e61f557c-a9d0-4c25-ab5b-bbc46bb24deb.html",
    "https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.discovery", "attack.t1018",
    "attack.t1087.001", "attack.t1087.002", "attack.t1021.002", "attack.t1077", "attack.t1069.001",
    "attack.t1069.002", "attack.t1135", "attack.s0039", "attack.t1049", "attack.t1201";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)";
  <http://purl.org/dc/terms/description> "Detects execution of Net.exe, whether suspicious or benign.";
  <http://purl.org/dc/terms/id> "183e7ea8-ac4b-4c23-9aec-b3dac4e401ac";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe Execution";
  sigma:detectionCondition "selection and cmdline";
  sigma:falsePositive "Will need to be tuned. If using Splunk, I recommend | stats count by Computer,CommandLine following the search for easy hunting by computer/CommandLine.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* group.*\")
|| regex(str(?cmdLine),\".* localgroup.*\")
|| regex(str(?cmdLine),\".* user.*\")
|| regex(str(?cmdLine),\".* view.*\")
|| regex(str(?cmdLine),\".* share\")
|| regex(str(?cmdLine),\".* accounts.*\")
|| regex(str(?cmdLine),\".* use.*\")
|| regex(str(?cmdLine),\".* stop .*\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/4d2e7fc1-af0b-4915-89aa-03d25ba7805e.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/9b3dd402-891c-4c4d-a662-28947168ce61.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/e61f557c-a9d0-4c25-ab5b-bbc46bb24deb.html",
    "https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.discovery", "attack.t1018",
    "attack.t1087.001", "attack.t1087.002", "attack.t1021.002", "attack.t1077", "attack.t1069.001",
    "attack.t1069.002", "attack.t1135", "attack.s0039", "attack.t1049", "attack.t1201";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)";
  <http://purl.org/dc/terms/description> "Detects execution of Net.exe, whether suspicious or benign.";
  <http://purl.org/dc/terms/id> "183e7ea8-ac4b-4c23-9aec-b3dac4e401ac";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe Execution";
  sigma:detectionCondition "selection and cmdline";
  sigma:falsePositive "Will need to be tuned. If using Splunk, I recommend | stats count by Computer,CommandLine following the search for easy hunting by computer/CommandLine.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* group.*\")
|| regex(str(?cmdLine),\".* localgroup.*\")
|| regex(str(?cmdLine),\".* user.*\")
|| regex(str(?cmdLine),\".* view.*\")
|| regex(str(?cmdLine),\".* share\")
|| regex(str(?cmdLine),\".* accounts.*\")
|| regex(str(?cmdLine),\".* use.*\")
|| regex(str(?cmdLine),\".* stop .*\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/4d2e7fc1-af0b-4915-89aa-03d25ba7805e.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/9b3dd402-891c-4c4d-a662-28947168ce61.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/e61f557c-a9d0-4c25-ab5b-bbc46bb24deb.html",
    "https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.discovery", "attack.t1018",
    "attack.t1087.001", "attack.t1087.002", "attack.t1021.002", "attack.t1077", "attack.t1069.001",
    "attack.t1069.002", "attack.t1135", "attack.s0039", "attack.t1049", "attack.t1201";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)";
  <http://purl.org/dc/terms/description> "Detects execution of Net.exe, whether suspicious or benign.";
  <http://purl.org/dc/terms/id> "183e7ea8-ac4b-4c23-9aec-b3dac4e401ac";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe Execution";
  sigma:detectionCondition "selection and cmdline";
  sigma:falsePositive "Will need to be tuned. If using Splunk, I recommend | stats count by Computer,CommandLine following the search for easy hunting by computer/CommandLine.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* group.*\")
|| regex(str(?cmdLine),\".* localgroup.*\")
|| regex(str(?cmdLine),\".* user.*\")
|| regex(str(?cmdLine),\".* view.*\")
|| regex(str(?cmdLine),\".* share\")
|| regex(str(?cmdLine),\".* accounts.*\")
|| regex(str(?cmdLine),\".* use.*\")
|| regex(str(?cmdLine),\".* stop .*\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/4d2e7fc1-af0b-4915-89aa-03d25ba7805e.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/9b3dd402-891c-4c4d-a662-28947168ce61.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/e61f557c-a9d0-4c25-ab5b-bbc46bb24deb.html",
    "https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.discovery", "attack.t1018",
    "attack.t1087.001", "attack.t1087.002", "attack.t1021.002", "attack.t1077", "attack.t1069.001",
    "attack.t1069.002", "attack.t1135", "attack.s0039", "attack.t1049", "attack.t1201";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)";
  <http://purl.org/dc/terms/description> "Detects execution of Net.exe, whether suspicious or benign.";
  <http://purl.org/dc/terms/id> "183e7ea8-ac4b-4c23-9aec-b3dac4e401ac";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe Execution";
  sigma:detectionCondition "selection and cmdline";
  sigma:falsePositive "Will need to be tuned. If using Splunk, I recommend | stats count by Computer,CommandLine following the search for easy hunting by computer/CommandLine.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* group.*\")
|| regex(str(?cmdLine),\".* localgroup.*\")
|| regex(str(?cmdLine),\".* user.*\")
|| regex(str(?cmdLine),\".* view.*\")
|| regex(str(?cmdLine),\".* share\")
|| regex(str(?cmdLine),\".* accounts.*\")
|| regex(str(?cmdLine),\".* use.*\")
|| regex(str(?cmdLine),\".* stop .*\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/4d2e7fc1-af0b-4915-89aa-03d25ba7805e.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/9b3dd402-891c-4c4d-a662-28947168ce61.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/e61f557c-a9d0-4c25-ab5b-bbc46bb24deb.html",
    "https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.discovery", "attack.t1018",
    "attack.t1087.001", "attack.t1087.002", "attack.t1021.002", "attack.t1077", "attack.t1069.001",
    "attack.t1069.002", "attack.t1135", "attack.s0039", "attack.t1049", "attack.t1201";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)";
  <http://purl.org/dc/terms/description> "Detects execution of Net.exe, whether suspicious or benign.";
  <http://purl.org/dc/terms/id> "183e7ea8-ac4b-4c23-9aec-b3dac4e401ac";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe Execution";
  sigma:detectionCondition "selection and cmdline";
  sigma:falsePositive "Will need to be tuned. If using Splunk, I recommend | stats count by Computer,CommandLine following the search for easy hunting by computer/CommandLine.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* group.*\")
|| regex(str(?cmdLine),\".* localgroup.*\")
|| regex(str(?cmdLine),\".* user.*\")
|| regex(str(?cmdLine),\".* view.*\")
|| regex(str(?cmdLine),\".* share\")
|| regex(str(?cmdLine),\".* accounts.*\")
|| regex(str(?cmdLine),\".* use.*\")
|| regex(str(?cmdLine),\".* stop .*\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/4d2e7fc1-af0b-4915-89aa-03d25ba7805e.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/9b3dd402-891c-4c4d-a662-28947168ce61.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/e61f557c-a9d0-4c25-ab5b-bbc46bb24deb.html",
    "https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.discovery", "attack.t1018",
    "attack.t1087.001", "attack.t1087.002", "attack.t1021.002", "attack.t1077", "attack.t1069.001",
    "attack.t1069.002", "attack.t1135", "attack.s0039", "attack.t1049", "attack.t1201";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)";
  <http://purl.org/dc/terms/description> "Detects execution of Net.exe, whether suspicious or benign.";
  <http://purl.org/dc/terms/id> "183e7ea8-ac4b-4c23-9aec-b3dac4e401ac";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe Execution";
  sigma:detectionCondition "selection and cmdline";
  sigma:falsePositive "Will need to be tuned. If using Splunk, I recommend | stats count by Computer,CommandLine following the search for easy hunting by computer/CommandLine.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* group.*\")
|| regex(str(?cmdLine),\".* localgroup.*\")
|| regex(str(?cmdLine),\".* user.*\")
|| regex(str(?cmdLine),\".* view.*\")
|| regex(str(?cmdLine),\".* share\")
|| regex(str(?cmdLine),\".* accounts.*\")
|| regex(str(?cmdLine),\".* use.*\")
|| regex(str(?cmdLine),\".* stop .*\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/4d2e7fc1-af0b-4915-89aa-03d25ba7805e.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/9b3dd402-891c-4c4d-a662-28947168ce61.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/e61f557c-a9d0-4c25-ab5b-bbc46bb24deb.html",
    "https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.discovery", "attack.t1018",
    "attack.t1087.001", "attack.t1087.002", "attack.t1021.002", "attack.t1077", "attack.t1069.001",
    "attack.t1069.002", "attack.t1135", "attack.s0039", "attack.t1049", "attack.t1201";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)";
  <http://purl.org/dc/terms/description> "Detects execution of Net.exe, whether suspicious or benign.";
  <http://purl.org/dc/terms/id> "183e7ea8-ac4b-4c23-9aec-b3dac4e401ac";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe Execution";
  sigma:detectionCondition "selection and cmdline";
  sigma:falsePositive "Will need to be tuned. If using Splunk, I recommend | stats count by Computer,CommandLine following the search for easy hunting by computer/CommandLine.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* group.*\")
|| regex(str(?cmdLine),\".* localgroup.*\")
|| regex(str(?cmdLine),\".* user.*\")
|| regex(str(?cmdLine),\".* view.*\")
|| regex(str(?cmdLine),\".* share\")
|| regex(str(?cmdLine),\".* accounts.*\")
|| regex(str(?cmdLine),\".* use.*\")
|| regex(str(?cmdLine),\".* stop .*\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/4d2e7fc1-af0b-4915-89aa-03d25ba7805e.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/9b3dd402-891c-4c4d-a662-28947168ce61.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/e61f557c-a9d0-4c25-ab5b-bbc46bb24deb.html",
    "https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.discovery", "attack.t1018",
    "attack.t1087.001", "attack.t1087.002", "attack.t1021.002", "attack.t1077", "attack.t1069.001",
    "attack.t1069.002", "attack.t1135", "attack.s0039", "attack.t1049", "attack.t1201";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag, Mark Woan (improvements), James Pemberton / @4A616D6573 / oscd.community (improvements)";
  <http://purl.org/dc/terms/description> "Detects execution of Net.exe, whether suspicious or benign.";
  <http://purl.org/dc/terms/id> "183e7ea8-ac4b-4c23-9aec-b3dac4e401ac";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Net.exe Execution";
  sigma:detectionCondition "selection and cmdline";
  sigma:falsePositive "Will need to be tuned. If using Splunk, I recommend | stats count by Computer,CommandLine following the search for easy hunting by computer/CommandLine.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* group.*\")
|| regex(str(?cmdLine),\".* localgroup.*\")
|| regex(str(?cmdLine),\".* user.*\")
|| regex(str(?cmdLine),\".* view.*\")
|| regex(str(?cmdLine),\".* share\")
|| regex(str(?cmdLine),\".* accounts.*\")
|| regex(str(?cmdLine),\".* use.*\")
|| regex(str(?cmdLine),\".* stop .*\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/4d2e7fc1-af0b-4915-89aa-03d25ba7805e.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/9b3dd402-891c-4c4d-a662-28947168ce61.html",
    "https://eqllib.readthedocs.io/en/latest/analytics/e61f557c-a9d0-4c25-ab5b-bbc46bb24deb.html",
    "https://pentest.blog/windows-privilege-escalation-methods-for-pentesters/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.discovery", "attack.t1018",
    "attack.t1087.001", "attack.t1087.002", "attack.t1021.002", "attack.t1077", "attack.t1069.001",
    "attack.t1069.002", "attack.t1135", "attack.s0039", "attack.t1049", "attack.t1201" .

<http://w3id.org/sepses/resource/sigma/sigma-aaf46cdc-934e-4284-b329-34aa701e3771>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "Execute VBscript code that is referenced within the .*.bgi file.";
  <http://purl.org/dc/terms/id> "aaf46cdc-934e-4284-b329-34aa701e3771";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Application Whitelisting Bypass via Bginfo";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"/popup\")
|| regex(str(?cmdLine),\"/nolicprompt\")
)
FILTER regex(str(?cmdLine),\"\\\\bginfo.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Bginfo.yml",
    "https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution",
    "attack.t1059.005", "attack.t1202";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "Execute VBscript code that is referenced within the .*.bgi file.";
  <http://purl.org/dc/terms/id> "aaf46cdc-934e-4284-b329-34aa701e3771";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Application Whitelisting Bypass via Bginfo";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"/popup\")
|| regex(str(?cmdLine),\"/nolicprompt\")
)
FILTER regex(str(?cmdLine),\"\\\\bginfo.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Bginfo.yml",
    "https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution",
    "attack.t1059.005", "attack.t1202";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "Execute VBscript code that is referenced within the .*.bgi file.";
  <http://purl.org/dc/terms/id> "aaf46cdc-934e-4284-b329-34aa701e3771";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Application Whitelisting Bypass via Bginfo";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"/popup\")
|| regex(str(?cmdLine),\"/nolicprompt\")
)
FILTER regex(str(?cmdLine),\"\\\\bginfo.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Bginfo.yml",
    "https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution",
    "attack.t1059.005", "attack.t1202";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "Execute VBscript code that is referenced within the .*.bgi file.";
  <http://purl.org/dc/terms/id> "aaf46cdc-934e-4284-b329-34aa701e3771";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Application Whitelisting Bypass via Bginfo";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"/popup\")
|| regex(str(?cmdLine),\"/nolicprompt\")
)
FILTER regex(str(?cmdLine),\"\\\\bginfo.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Bginfo.yml",
    "https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution",
    "attack.t1059.005", "attack.t1202";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Beyu Denis, oscd.community";
  <http://purl.org/dc/terms/description> "Execute VBscript code that is referenced within the .*.bgi file.";
  <http://purl.org/dc/terms/id> "aaf46cdc-934e-4284-b329-34aa701e3771";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Application Whitelisting Bypass via Bginfo";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"/popup\")
|| regex(str(?cmdLine),\"/nolicprompt\")
)
FILTER regex(str(?cmdLine),\"\\\\bginfo.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Bginfo.yml",
    "https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution",
    "attack.t1059.005", "attack.t1202" .

<http://w3id.org/sepses/resource/sigma/sigma-1e33157c-53b1-41ad-bbcc-780b80b58288>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag";
  <http://purl.org/dc/terms/description> "Detects suspicious file execution by wscript and cscript";
  <http://purl.org/dc/terms/id> "1e33157c-53b1-41ad-bbcc-780b80b58288";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "WSF/JSE/JS/VBA/VBE File Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Will need to be tuned. I recommend adding the user profile path in CommandLine if it is getting too noisy.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".jse\")
|| regex(str(?cmdLine),\".vbe\")
|| regex(str(?cmdLine),\".js\")
|| regex(str(?cmdLine),\".vba\")
)
FILTER (regex(str(?cmdLine),\"\\\\wscript.exe\")
|| regex(str(?cmdLine),\"\\\\cscript.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1059.005", "attack.t1059.007", "attack.t1064";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag";
  <http://purl.org/dc/terms/description> "Detects suspicious file execution by wscript and cscript";
  <http://purl.org/dc/terms/id> "1e33157c-53b1-41ad-bbcc-780b80b58288";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "WSF/JSE/JS/VBA/VBE File Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Will need to be tuned. I recommend adding the user profile path in CommandLine if it is getting too noisy.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".jse\")
|| regex(str(?cmdLine),\".vbe\")
|| regex(str(?cmdLine),\".js\")
|| regex(str(?cmdLine),\".vba\")
)
FILTER (regex(str(?cmdLine),\"\\\\wscript.exe\")
|| regex(str(?cmdLine),\"\\\\cscript.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1059.005", "attack.t1059.007", "attack.t1064";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag";
  <http://purl.org/dc/terms/description> "Detects suspicious file execution by wscript and cscript";
  <http://purl.org/dc/terms/id> "1e33157c-53b1-41ad-bbcc-780b80b58288";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "WSF/JSE/JS/VBA/VBE File Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Will need to be tuned. I recommend adding the user profile path in CommandLine if it is getting too noisy.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".jse\")
|| regex(str(?cmdLine),\".vbe\")
|| regex(str(?cmdLine),\".js\")
|| regex(str(?cmdLine),\".vba\")
)
FILTER (regex(str(?cmdLine),\"\\\\wscript.exe\")
|| regex(str(?cmdLine),\"\\\\cscript.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1059.005", "attack.t1059.007", "attack.t1064";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Michael Haag";
  <http://purl.org/dc/terms/description> "Detects suspicious file execution by wscript and cscript";
  <http://purl.org/dc/terms/id> "1e33157c-53b1-41ad-bbcc-780b80b58288";
  <http://purl.org/dc/terms/modified> "2020/08/28";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "WSF/JSE/JS/VBA/VBE File Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Will need to be tuned. I recommend adding the user profile path in CommandLine if it is getting too noisy.";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".jse\")
|| regex(str(?cmdLine),\".vbe\")
|| regex(str(?cmdLine),\".js\")
|| regex(str(?cmdLine),\".vba\")
)
FILTER (regex(str(?cmdLine),\"\\\\wscript.exe\")
|| regex(str(?cmdLine),\"\\\\cscript.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1059.005", "attack.t1059.007", "attack.t1064" .

<http://w3id.org/sepses/resource/sigma/sigma-d7eb979b-c2b5-4a6f-a3a7-c87ce6763819>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/04/15";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits";
  <http://purl.org/dc/terms/id> "d7eb979b-c2b5-4a6f-a3a7-c87ce6763819";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Control Panel DLL Load";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER regex(str(?ParentImage),\"System32\\\\control.exe\")
FILTER regex(str(?cmdLine),\"rundll32.exe .*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/rikvduijn/status/853251879320662017";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1085", "attack.t1218.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/04/15";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits";
  <http://purl.org/dc/terms/id> "d7eb979b-c2b5-4a6f-a3a7-c87ce6763819";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Control Panel DLL Load";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER regex(str(?ParentImage),\"System32\\\\control.exe\")
FILTER regex(str(?cmdLine),\"rundll32.exe .*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/rikvduijn/status/853251879320662017";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1085", "attack.t1218.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/04/15";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits";
  <http://purl.org/dc/terms/id> "d7eb979b-c2b5-4a6f-a3a7-c87ce6763819";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Control Panel DLL Load";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER regex(str(?ParentImage),\"System32\\\\control.exe\")
FILTER regex(str(?cmdLine),\"rundll32.exe .*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/rikvduijn/status/853251879320662017";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1085", "attack.t1218.011" .

<http://w3id.org/sepses/resource/sigma/sigma-1eeed653-dbc8-4187-ad0c-eeebb20e6599>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/11/14";
  <http://purl.org/dc/terms/creator> "Markus Neis, keepwatch";
  <http://purl.org/dc/terms/description> "Detects Service Principal Name Enumeration used for Kerberoasting";
  <http://purl.org/dc/terms/id> "1eeed653-dbc8-4187-ad0c-eeebb20e6599";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible SPN Enumeration";
  sigma:detectionCondition "(selection_image or selection_desc) and cmd";
  sigma:falsePositive "Administrator Activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*-q.*\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://p16.praetorian.com/blog/how-to-use-kerberoasting-t1208-for-privilege-escalation";
  rule:hasDetectedRule "attack.credential_access", "attack.t1558.003", "attack.t1208";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/11/14";
  <http://purl.org/dc/terms/creator> "Markus Neis, keepwatch";
  <http://purl.org/dc/terms/description> "Detects Service Principal Name Enumeration used for Kerberoasting";
  <http://purl.org/dc/terms/id> "1eeed653-dbc8-4187-ad0c-eeebb20e6599";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible SPN Enumeration";
  sigma:detectionCondition "(selection_image or selection_desc) and cmd";
  sigma:falsePositive "Administrator Activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*-q.*\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://p16.praetorian.com/blog/how-to-use-kerberoasting-t1208-for-privilege-escalation";
  rule:hasDetectedRule "attack.credential_access", "attack.t1558.003", "attack.t1208";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/11/14";
  <http://purl.org/dc/terms/creator> "Markus Neis, keepwatch";
  <http://purl.org/dc/terms/description> "Detects Service Principal Name Enumeration used for Kerberoasting";
  <http://purl.org/dc/terms/id> "1eeed653-dbc8-4187-ad0c-eeebb20e6599";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible SPN Enumeration";
  sigma:detectionCondition "(selection_image or selection_desc) and cmd";
  sigma:falsePositive "Administrator Activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*-q.*\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://p16.praetorian.com/blog/how-to-use-kerberoasting-t1208-for-privilege-escalation";
  rule:hasDetectedRule "attack.credential_access", "attack.t1558.003", "attack.t1208" .

<http://w3id.org/sepses/resource/sigma/sigma-56c217c3-2de2-479b-990f-5c109ba8458f>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/06";
  <http://purl.org/dc/terms/creator> "Markus Neis, @Karneades";
  <http://purl.org/dc/terms/description> "Detects the creation of a schtask via PowerSploit or Empire Default Configuration.";
  <http://purl.org/dc/terms/id> "56c217c3-2de2-479b-990f-5c109ba8458f";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Default PowerSploit and Empire Schtasks Persistence";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives are possible, depends on organisation and processes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"powershell.exe\")
)
FILTER (regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONLOGON.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*DAILY.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONIDLE.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*Updater.*/TN .*Updater.*/TR .*powershell.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.t1059.001",
    "attack.t1086", "attack.privilege_escalation", "attack.s0111", "attack.t1053", "attack.t1053.005",
    "car.2013-08-001", "attack.g0022", "attack.g0060";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/06";
  <http://purl.org/dc/terms/creator> "Markus Neis, @Karneades";
  <http://purl.org/dc/terms/description> "Detects the creation of a schtask via PowerSploit or Empire Default Configuration.";
  <http://purl.org/dc/terms/id> "56c217c3-2de2-479b-990f-5c109ba8458f";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Default PowerSploit and Empire Schtasks Persistence";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives are possible, depends on organisation and processes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"powershell.exe\")
)
FILTER (regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONLOGON.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*DAILY.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONIDLE.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*Updater.*/TN .*Updater.*/TR .*powershell.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.t1059.001",
    "attack.t1086", "attack.privilege_escalation", "attack.s0111", "attack.t1053", "attack.t1053.005",
    "car.2013-08-001", "attack.g0022", "attack.g0060";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/06";
  <http://purl.org/dc/terms/creator> "Markus Neis, @Karneades";
  <http://purl.org/dc/terms/description> "Detects the creation of a schtask via PowerSploit or Empire Default Configuration.";
  <http://purl.org/dc/terms/id> "56c217c3-2de2-479b-990f-5c109ba8458f";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Default PowerSploit and Empire Schtasks Persistence";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives are possible, depends on organisation and processes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"powershell.exe\")
)
FILTER (regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONLOGON.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*DAILY.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONIDLE.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*Updater.*/TN .*Updater.*/TR .*powershell.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.t1059.001",
    "attack.t1086", "attack.privilege_escalation", "attack.s0111", "attack.t1053", "attack.t1053.005",
    "car.2013-08-001", "attack.g0022", "attack.g0060";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/06";
  <http://purl.org/dc/terms/creator> "Markus Neis, @Karneades";
  <http://purl.org/dc/terms/description> "Detects the creation of a schtask via PowerSploit or Empire Default Configuration.";
  <http://purl.org/dc/terms/id> "56c217c3-2de2-479b-990f-5c109ba8458f";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Default PowerSploit and Empire Schtasks Persistence";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives are possible, depends on organisation and processes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"powershell.exe\")
)
FILTER (regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONLOGON.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*DAILY.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONIDLE.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*Updater.*/TN .*Updater.*/TR .*powershell.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.t1059.001",
    "attack.t1086", "attack.privilege_escalation", "attack.s0111", "attack.t1053", "attack.t1053.005",
    "car.2013-08-001", "attack.g0022", "attack.g0060";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/06";
  <http://purl.org/dc/terms/creator> "Markus Neis, @Karneades";
  <http://purl.org/dc/terms/description> "Detects the creation of a schtask via PowerSploit or Empire Default Configuration.";
  <http://purl.org/dc/terms/id> "56c217c3-2de2-479b-990f-5c109ba8458f";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Default PowerSploit and Empire Schtasks Persistence";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives are possible, depends on organisation and processes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"powershell.exe\")
)
FILTER (regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONLOGON.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*DAILY.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONIDLE.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*Updater.*/TN .*Updater.*/TR .*powershell.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.t1059.001",
    "attack.t1086", "attack.privilege_escalation", "attack.s0111", "attack.t1053", "attack.t1053.005",
    "car.2013-08-001", "attack.g0022", "attack.g0060";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/06";
  <http://purl.org/dc/terms/creator> "Markus Neis, @Karneades";
  <http://purl.org/dc/terms/description> "Detects the creation of a schtask via PowerSploit or Empire Default Configuration.";
  <http://purl.org/dc/terms/id> "56c217c3-2de2-479b-990f-5c109ba8458f";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Default PowerSploit and Empire Schtasks Persistence";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives are possible, depends on organisation and processes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"powershell.exe\")
)
FILTER (regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONLOGON.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*DAILY.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONIDLE.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*Updater.*/TN .*Updater.*/TR .*powershell.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.t1059.001",
    "attack.t1086", "attack.privilege_escalation", "attack.s0111", "attack.t1053", "attack.t1053.005",
    "car.2013-08-001", "attack.g0022", "attack.g0060";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/06";
  <http://purl.org/dc/terms/creator> "Markus Neis, @Karneades";
  <http://purl.org/dc/terms/description> "Detects the creation of a schtask via PowerSploit or Empire Default Configuration.";
  <http://purl.org/dc/terms/id> "56c217c3-2de2-479b-990f-5c109ba8458f";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Default PowerSploit and Empire Schtasks Persistence";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives are possible, depends on organisation and processes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"powershell.exe\")
)
FILTER (regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONLOGON.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*DAILY.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONIDLE.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*Updater.*/TN .*Updater.*/TR .*powershell.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.t1059.001",
    "attack.t1086", "attack.privilege_escalation", "attack.s0111", "attack.t1053", "attack.t1053.005",
    "car.2013-08-001", "attack.g0022", "attack.g0060";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/06";
  <http://purl.org/dc/terms/creator> "Markus Neis, @Karneades";
  <http://purl.org/dc/terms/description> "Detects the creation of a schtask via PowerSploit or Empire Default Configuration.";
  <http://purl.org/dc/terms/id> "56c217c3-2de2-479b-990f-5c109ba8458f";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Default PowerSploit and Empire Schtasks Persistence";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives are possible, depends on organisation and processes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"powershell.exe\")
)
FILTER (regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONLOGON.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*DAILY.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONIDLE.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*Updater.*/TN .*Updater.*/TR .*powershell.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.t1059.001",
    "attack.t1086", "attack.privilege_escalation", "attack.s0111", "attack.t1053", "attack.t1053.005",
    "car.2013-08-001", "attack.g0022", "attack.g0060";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/06";
  <http://purl.org/dc/terms/creator> "Markus Neis, @Karneades";
  <http://purl.org/dc/terms/description> "Detects the creation of a schtask via PowerSploit or Empire Default Configuration.";
  <http://purl.org/dc/terms/id> "56c217c3-2de2-479b-990f-5c109ba8458f";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Default PowerSploit and Empire Schtasks Persistence";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives are possible, depends on organisation and processes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"powershell.exe\")
)
FILTER (regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONLOGON.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*DAILY.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONIDLE.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*Updater.*/TN .*Updater.*/TR .*powershell.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.t1059.001",
    "attack.t1086", "attack.privilege_escalation", "attack.s0111", "attack.t1053", "attack.t1053.005",
    "car.2013-08-001", "attack.g0022", "attack.g0060";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/06";
  <http://purl.org/dc/terms/creator> "Markus Neis, @Karneades";
  <http://purl.org/dc/terms/description> "Detects the creation of a schtask via PowerSploit or Empire Default Configuration.";
  <http://purl.org/dc/terms/id> "56c217c3-2de2-479b-990f-5c109ba8458f";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Default PowerSploit and Empire Schtasks Persistence";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives are possible, depends on organisation and processes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"powershell.exe\")
)
FILTER (regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONLOGON.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*DAILY.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONIDLE.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*Updater.*/TN .*Updater.*/TR .*powershell.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.t1059.001",
    "attack.t1086", "attack.privilege_escalation", "attack.s0111", "attack.t1053", "attack.t1053.005",
    "car.2013-08-001", "attack.g0022", "attack.g0060";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/06";
  <http://purl.org/dc/terms/creator> "Markus Neis, @Karneades";
  <http://purl.org/dc/terms/description> "Detects the creation of a schtask via PowerSploit or Empire Default Configuration.";
  <http://purl.org/dc/terms/id> "56c217c3-2de2-479b-990f-5c109ba8458f";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Default PowerSploit and Empire Schtasks Persistence";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives are possible, depends on organisation and processes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?ParentImage),\"powershell.exe\")
)
FILTER (regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONLOGON.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*DAILY.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*ONIDLE.*/TN .*Updater.*/TR .*powershell.*\")
|| regex(str(?cmdLine),\".*schtasks.*/Create.*/SC .*Updater.*/TN .*Updater.*/TR .*powershell.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py",
    "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py";
  rule:hasDetectedRule "attack.execution", "attack.persistence", "attack.t1059.001",
    "attack.t1086", "attack.privilege_escalation", "attack.s0111", "attack.t1053", "attack.t1053.005",
    "car.2013-08-001", "attack.g0022", "attack.g0060" .

<http://w3id.org/sepses/resource/sigma/sigma-bb780e0c-16cf-4383-8383-1e5471db6cf9>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/09/05";
  <http://purl.org/dc/terms/creator> "Sami Ruohonen, Harish Segar (improvement)";
  <http://purl.org/dc/terms/description> "Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands.";
  <http://purl.org/dc/terms/id> "bb780e0c-16cf-4383-8383-1e5471db6cf9";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious XOR Encoded PowerShell Command Line";
  sigma:detectionCondition "selection and filter";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"bxor\")
|| regex(str(?cmdLine),\"join\")
|| regex(str(?cmdLine),\"char\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1059.001", "attack.t1086",
    "attack.t1140", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/09/05";
  <http://purl.org/dc/terms/creator> "Sami Ruohonen, Harish Segar (improvement)";
  <http://purl.org/dc/terms/description> "Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands.";
  <http://purl.org/dc/terms/id> "bb780e0c-16cf-4383-8383-1e5471db6cf9";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious XOR Encoded PowerShell Command Line";
  sigma:detectionCondition "selection and filter";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"bxor\")
|| regex(str(?cmdLine),\"join\")
|| regex(str(?cmdLine),\"char\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1059.001", "attack.t1086",
    "attack.t1140", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/09/05";
  <http://purl.org/dc/terms/creator> "Sami Ruohonen, Harish Segar (improvement)";
  <http://purl.org/dc/terms/description> "Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands.";
  <http://purl.org/dc/terms/id> "bb780e0c-16cf-4383-8383-1e5471db6cf9";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious XOR Encoded PowerShell Command Line";
  sigma:detectionCondition "selection and filter";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"bxor\")
|| regex(str(?cmdLine),\"join\")
|| regex(str(?cmdLine),\"char\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1059.001", "attack.t1086",
    "attack.t1140", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/09/05";
  <http://purl.org/dc/terms/creator> "Sami Ruohonen, Harish Segar (improvement)";
  <http://purl.org/dc/terms/description> "Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands.";
  <http://purl.org/dc/terms/id> "bb780e0c-16cf-4383-8383-1e5471db6cf9";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious XOR Encoded PowerShell Command Line";
  sigma:detectionCondition "selection and filter";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"bxor\")
|| regex(str(?cmdLine),\"join\")
|| regex(str(?cmdLine),\"char\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1059.001", "attack.t1086",
    "attack.t1140", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/09/05";
  <http://purl.org/dc/terms/creator> "Sami Ruohonen, Harish Segar (improvement)";
  <http://purl.org/dc/terms/description> "Detects suspicious powershell process which includes bxor command, alternative obfuscation method to b64 encoded commands.";
  <http://purl.org/dc/terms/id> "bb780e0c-16cf-4383-8383-1e5471db6cf9";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious XOR Encoded PowerShell Command Line";
  sigma:detectionCondition "selection and filter";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"bxor\")
|| regex(str(?cmdLine),\"join\")
|| regex(str(?cmdLine),\"char\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1059.001", "attack.t1086",
    "attack.t1140", "attack.t1027" .

<http://w3id.org/sepses/resource/sigma/sigma-56a8189f-11b2-48c8-8ca7-c54b03c2fbf7>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/23";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects flags often used with the LOLBAS Esentutl for malicious activity. It could be used in rare cases by administrators to access locked files or during maintenance.";
  <http://purl.org/dc/terms/id> "56a8189f-11b2-48c8-8ca7-c54b03c2fbf7";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Esentutl Use";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" /vss \")
|| regex(str(?cmdLine),\" /y \")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://lolbas-project.github.io/", "https://twitter.com/chadtilbury/status/1264226341408452610";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution",
    "attack.s0404";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/23";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects flags often used with the LOLBAS Esentutl for malicious activity. It could be used in rare cases by administrators to access locked files or during maintenance.";
  <http://purl.org/dc/terms/id> "56a8189f-11b2-48c8-8ca7-c54b03c2fbf7";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Esentutl Use";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" /vss \")
|| regex(str(?cmdLine),\" /y \")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://lolbas-project.github.io/", "https://twitter.com/chadtilbury/status/1264226341408452610";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution",
    "attack.s0404";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/23";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects flags often used with the LOLBAS Esentutl for malicious activity. It could be used in rare cases by administrators to access locked files or during maintenance.";
  <http://purl.org/dc/terms/id> "56a8189f-11b2-48c8-8ca7-c54b03c2fbf7";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Esentutl Use";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" /vss \")
|| regex(str(?cmdLine),\" /y \")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://lolbas-project.github.io/", "https://twitter.com/chadtilbury/status/1264226341408452610";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution",
    "attack.s0404";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/23";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects flags often used with the LOLBAS Esentutl for malicious activity. It could be used in rare cases by administrators to access locked files or during maintenance.";
  <http://purl.org/dc/terms/id> "56a8189f-11b2-48c8-8ca7-c54b03c2fbf7";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Esentutl Use";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" /vss \")
|| regex(str(?cmdLine),\" /y \")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://lolbas-project.github.io/", "https://twitter.com/chadtilbury/status/1264226341408452610";
  rule:hasDetectedRule "attack.t1218", "attack.defense_evasion", "attack.execution",
    "attack.s0404" .

<http://w3id.org/sepses/resource/sigma/sigma-fff9d2b7-e11c-4a69-93d3-40ef66189767>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/03";
  <http://purl.org/dc/terms/creator> "Florian Roth, Markus Neis";
  <http://purl.org/dc/terms/description> "Detects a suspicious copy command that copies a system program from System32 to another directory on disk - sometimes used to use LOLBINs like certutil or desktopimgdownldr to a different location with a different name";
  <http://purl.org/dc/terms/id> "fff9d2b7-e11c-4a69-93d3-40ef66189767";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Copy From or To System32";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Admin scripts like https://www.itexperience.net/sccm-batch-files-and-32-bits-processes-on-64-bits-os/";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" /c copy System32\\\\\")
|| regex(str(?cmdLine),\"xcopySystem32\\\\\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/8da5b75b6380a41eee3a399c43dfe0d99eeefaa1fd21027a07b1ecaa4cd96fdd?environmentId=120";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1036.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/03";
  <http://purl.org/dc/terms/creator> "Florian Roth, Markus Neis";
  <http://purl.org/dc/terms/description> "Detects a suspicious copy command that copies a system program from System32 to another directory on disk - sometimes used to use LOLBINs like certutil or desktopimgdownldr to a different location with a different name";
  <http://purl.org/dc/terms/id> "fff9d2b7-e11c-4a69-93d3-40ef66189767";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Copy From or To System32";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Admin scripts like https://www.itexperience.net/sccm-batch-files-and-32-bits-processes-on-64-bits-os/";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" /c copy System32\\\\\")
|| regex(str(?cmdLine),\"xcopySystem32\\\\\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/8da5b75b6380a41eee3a399c43dfe0d99eeefaa1fd21027a07b1ecaa4cd96fdd?environmentId=120";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1036.003" .

<http://w3id.org/sepses/resource/sigma/sigma-33339be3-148b-4e16-af56-ad16ec6c7e7b>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/01";
  <http://purl.org/dc/terms/creator> "Trent Liffick";
  <http://purl.org/dc/terms/description> "Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack";
  <http://purl.org/dc/terms/id> "33339be3-148b-4e16-af56-ad16ec6c7e7b";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Findstr Launching .lnk File";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*.lnk\")
FILTER regex(str(?cmdLine),\"findstr.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.bleepingcomputer.com/news/security/hhsgov-open-redirect-used-by-coronavirus-phishing-to-spread-malware/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1036", "attack.t1202", "attack.t1027.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/01";
  <http://purl.org/dc/terms/creator> "Trent Liffick";
  <http://purl.org/dc/terms/description> "Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack";
  <http://purl.org/dc/terms/id> "33339be3-148b-4e16-af56-ad16ec6c7e7b";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Findstr Launching .lnk File";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*.lnk\")
FILTER regex(str(?cmdLine),\"findstr.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.bleepingcomputer.com/news/security/hhsgov-open-redirect-used-by-coronavirus-phishing-to-spread-malware/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1036", "attack.t1202", "attack.t1027.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/01";
  <http://purl.org/dc/terms/creator> "Trent Liffick";
  <http://purl.org/dc/terms/description> "Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack";
  <http://purl.org/dc/terms/id> "33339be3-148b-4e16-af56-ad16ec6c7e7b";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Findstr Launching .lnk File";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*.lnk\")
FILTER regex(str(?cmdLine),\"findstr.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.bleepingcomputer.com/news/security/hhsgov-open-redirect-used-by-coronavirus-phishing-to-spread-malware/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1036", "attack.t1202", "attack.t1027.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/05/01";
  <http://purl.org/dc/terms/creator> "Trent Liffick";
  <http://purl.org/dc/terms/description> "Detects usage of findstr to identify and execute a lnk file as seen within the HHS redirect attack";
  <http://purl.org/dc/terms/id> "33339be3-148b-4e16-af56-ad16ec6c7e7b";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Findstr Launching .lnk File";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*.lnk\")
FILTER regex(str(?cmdLine),\"findstr.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.bleepingcomputer.com/news/security/hhsgov-open-redirect-used-by-coronavirus-phishing-to-spread-malware/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1036", "attack.t1202", "attack.t1027.003" .

<http://w3id.org/sepses/resource/sigma/sigma-c9fbe8e9-119d-40a6-9b59-dd58a5d84429>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/07";
  <http://purl.org/dc/terms/creator> "@neu5ron";
  <http://purl.org/dc/terms/description> "Detects, possibly, malicious unauthorized usage of bcdedit.exe";
  <http://purl.org/dc/terms/id> "c9fbe8e9-119d-40a6-9b59-dd58a5d84429";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Ransomware or Unauthorized MBR Modifications";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*delete.*\")
|| regex(str(?cmdLine),\".*deletevalue.*\")
|| regex(str(?cmdLine),\".*import.*\")
)
FILTER regex(str(?cmdLine),\"bcdedit.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/bcdedit--set";
  rule:hasDetectedRule "attack.defense_evasion", "attack.persistence", "attack.t1070",
    "attack.t1067", "attack.t1542.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/07";
  <http://purl.org/dc/terms/creator> "@neu5ron";
  <http://purl.org/dc/terms/description> "Detects, possibly, malicious unauthorized usage of bcdedit.exe";
  <http://purl.org/dc/terms/id> "c9fbe8e9-119d-40a6-9b59-dd58a5d84429";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Ransomware or Unauthorized MBR Modifications";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*delete.*\")
|| regex(str(?cmdLine),\".*deletevalue.*\")
|| regex(str(?cmdLine),\".*import.*\")
)
FILTER regex(str(?cmdLine),\"bcdedit.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/bcdedit--set";
  rule:hasDetectedRule "attack.defense_evasion", "attack.persistence", "attack.t1070",
    "attack.t1067", "attack.t1542.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/07";
  <http://purl.org/dc/terms/creator> "@neu5ron";
  <http://purl.org/dc/terms/description> "Detects, possibly, malicious unauthorized usage of bcdedit.exe";
  <http://purl.org/dc/terms/id> "c9fbe8e9-119d-40a6-9b59-dd58a5d84429";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Ransomware or Unauthorized MBR Modifications";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*delete.*\")
|| regex(str(?cmdLine),\".*deletevalue.*\")
|| regex(str(?cmdLine),\".*import.*\")
)
FILTER regex(str(?cmdLine),\"bcdedit.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/bcdedit--set";
  rule:hasDetectedRule "attack.defense_evasion", "attack.persistence", "attack.t1070",
    "attack.t1067", "attack.t1542.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/07";
  <http://purl.org/dc/terms/creator> "@neu5ron";
  <http://purl.org/dc/terms/description> "Detects, possibly, malicious unauthorized usage of bcdedit.exe";
  <http://purl.org/dc/terms/id> "c9fbe8e9-119d-40a6-9b59-dd58a5d84429";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Ransomware or Unauthorized MBR Modifications";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*delete.*\")
|| regex(str(?cmdLine),\".*deletevalue.*\")
|| regex(str(?cmdLine),\".*import.*\")
)
FILTER regex(str(?cmdLine),\"bcdedit.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/bcdedit--set";
  rule:hasDetectedRule "attack.defense_evasion", "attack.persistence", "attack.t1070",
    "attack.t1067", "attack.t1542.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/07";
  <http://purl.org/dc/terms/creator> "@neu5ron";
  <http://purl.org/dc/terms/description> "Detects, possibly, malicious unauthorized usage of bcdedit.exe";
  <http://purl.org/dc/terms/id> "c9fbe8e9-119d-40a6-9b59-dd58a5d84429";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Ransomware or Unauthorized MBR Modifications";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*delete.*\")
|| regex(str(?cmdLine),\".*deletevalue.*\")
|| regex(str(?cmdLine),\".*import.*\")
)
FILTER regex(str(?cmdLine),\"bcdedit.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/bcdedit--set";
  rule:hasDetectedRule "attack.defense_evasion", "attack.persistence", "attack.t1070",
    "attack.t1067", "attack.t1542.003" .

<http://w3id.org/sepses/resource/sigma/sigma-60fc936d-2eb0-4543-8a13-911c750a1dfc>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Detect an interactive AT job, which may be used as a form of privilege escalation";
  <http://purl.org/dc/terms/id> "60fc936d-2eb0-4543-8a13-911c750a1dfc";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Interactive AT Job";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely (at.exe deprecated as of Windows 8)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"interactive\")
FILTER regex(str(?cmdLine),\"\\\\at.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/d8db43cf-ed52-4f5c-9fb3-c9a4b95a0b56.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1053/T1053.yaml";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.t1053", "attack.t1053.002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Detect an interactive AT job, which may be used as a form of privilege escalation";
  <http://purl.org/dc/terms/id> "60fc936d-2eb0-4543-8a13-911c750a1dfc";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Interactive AT Job";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely (at.exe deprecated as of Windows 8)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"interactive\")
FILTER regex(str(?cmdLine),\"\\\\at.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/d8db43cf-ed52-4f5c-9fb3-c9a4b95a0b56.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1053/T1053.yaml";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.t1053", "attack.t1053.002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Detect an interactive AT job, which may be used as a form of privilege escalation";
  <http://purl.org/dc/terms/id> "60fc936d-2eb0-4543-8a13-911c750a1dfc";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Interactive AT Job";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely (at.exe deprecated as of Windows 8)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"interactive\")
FILTER regex(str(?cmdLine),\"\\\\at.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/d8db43cf-ed52-4f5c-9fb3-c9a4b95a0b56.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1053/T1053.yaml";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.t1053", "attack.t1053.002" .

<http://w3id.org/sepses/resource/sigma/sigma-bd70d3f8-e60e-4d25-89f0-0b5a9cff20e0>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/02";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report";
  <http://purl.org/dc/terms/id> "bd70d3f8-e60e-4d25-89f0-0b5a9cff20e0";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "BlueMashroom DLL Load";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"regsvr32AppData\\\\Local\\\\\")
|| regex(str(?cmdLine),\"AppData\\\\Local\\\\,DllEntry.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.virusbulletin.com/conference/vb2019/abstracts/apt-cases-exploiting-vulnerabilities-region-specific-software";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1117", "attack.t1218.010";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/02";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report";
  <http://purl.org/dc/terms/id> "bd70d3f8-e60e-4d25-89f0-0b5a9cff20e0";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "BlueMashroom DLL Load";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"regsvr32AppData\\\\Local\\\\\")
|| regex(str(?cmdLine),\"AppData\\\\Local\\\\,DllEntry.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.virusbulletin.com/conference/vb2019/abstracts/apt-cases-exploiting-vulnerabilities-region-specific-software";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1117", "attack.t1218.010";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/02";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report";
  <http://purl.org/dc/terms/id> "bd70d3f8-e60e-4d25-89f0-0b5a9cff20e0";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "BlueMashroom DLL Load";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"regsvr32AppData\\\\Local\\\\\")
|| regex(str(?cmdLine),\"AppData\\\\Local\\\\,DllEntry.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.virusbulletin.com/conference/vb2019/abstracts/apt-cases-exploiting-vulnerabilities-region-specific-software";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1117", "attack.t1218.010" .

<http://w3id.org/sepses/resource/sigma/sigma-1a0d4aba-7668-4365-9ce4-6d79ab088dfd>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/23";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a ping command that uses a hex encoded IP address";
  <http://purl.org/dc/terms/id> "1a0d4aba-7668-4365-9ce4-6d79ab088dfd";
  <http://purl.org/dc/terms/modified> "2020/10/16";
  <http://purl.org/dc/terms/title> "Ping Hex IP";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely, because no sane admin pings IP addresses in a hexadecimal form";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"ping.exe\")
)
FILTER (regex(str(?cmdLine),\"\\\\ping.exe 0x\")
|| regex(str(?cmdLine),\"\\\\ping 0x\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/vysec/Aggressor-VYSEC/blob/master/ping.cna",
    "https://twitter.com/vysecurity/status/977198418354491392";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1140", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/23";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a ping command that uses a hex encoded IP address";
  <http://purl.org/dc/terms/id> "1a0d4aba-7668-4365-9ce4-6d79ab088dfd";
  <http://purl.org/dc/terms/modified> "2020/10/16";
  <http://purl.org/dc/terms/title> "Ping Hex IP";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely, because no sane admin pings IP addresses in a hexadecimal form";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"ping.exe\")
)
FILTER (regex(str(?cmdLine),\"\\\\ping.exe 0x\")
|| regex(str(?cmdLine),\"\\\\ping 0x\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/vysec/Aggressor-VYSEC/blob/master/ping.cna",
    "https://twitter.com/vysecurity/status/977198418354491392";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1140", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/23";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a ping command that uses a hex encoded IP address";
  <http://purl.org/dc/terms/id> "1a0d4aba-7668-4365-9ce4-6d79ab088dfd";
  <http://purl.org/dc/terms/modified> "2020/10/16";
  <http://purl.org/dc/terms/title> "Ping Hex IP";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely, because no sane admin pings IP addresses in a hexadecimal form";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"ping.exe\")
)
FILTER (regex(str(?cmdLine),\"\\\\ping.exe 0x\")
|| regex(str(?cmdLine),\"\\\\ping 0x\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/vysec/Aggressor-VYSEC/blob/master/ping.cna",
    "https://twitter.com/vysecurity/status/977198418354491392";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1140", "attack.t1027" .

<http://w3id.org/sepses/resource/sigma/sigma-646ea171-dded-4578-8a4d-65e9822892e3>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/02/18";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a process memory dump performed via ordinal function 24 in comsvcs.dll";
  <http://purl.org/dc/terms/id> "646ea171-dded-4578-8a4d-65e9822892e3";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Process Dump via Rundll32 and Comsvcs.dll";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely, because no one should dump the process memory in that way";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"comsvcs.dll,#24\")
|| regex(str(?cmdLine),\"comsvcs.dll,MiniDump\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/shantanukhande/status/1229348874298388484";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.defense_evasion",
    "attack.t1003.001", "attack.t1036", "car.2013-05-009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/02/18";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a process memory dump performed via ordinal function 24 in comsvcs.dll";
  <http://purl.org/dc/terms/id> "646ea171-dded-4578-8a4d-65e9822892e3";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Process Dump via Rundll32 and Comsvcs.dll";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely, because no one should dump the process memory in that way";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"comsvcs.dll,#24\")
|| regex(str(?cmdLine),\"comsvcs.dll,MiniDump\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/shantanukhande/status/1229348874298388484";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.defense_evasion",
    "attack.t1003.001", "attack.t1036", "car.2013-05-009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/02/18";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a process memory dump performed via ordinal function 24 in comsvcs.dll";
  <http://purl.org/dc/terms/id> "646ea171-dded-4578-8a4d-65e9822892e3";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Process Dump via Rundll32 and Comsvcs.dll";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely, because no one should dump the process memory in that way";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"comsvcs.dll,#24\")
|| regex(str(?cmdLine),\"comsvcs.dll,MiniDump\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/shantanukhande/status/1229348874298388484";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.defense_evasion",
    "attack.t1003.001", "attack.t1036", "car.2013-05-009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/02/18";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a process memory dump performed via ordinal function 24 in comsvcs.dll";
  <http://purl.org/dc/terms/id> "646ea171-dded-4578-8a4d-65e9822892e3";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Process Dump via Rundll32 and Comsvcs.dll";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely, because no one should dump the process memory in that way";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"comsvcs.dll,#24\")
|| regex(str(?cmdLine),\"comsvcs.dll,MiniDump\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/shantanukhande/status/1229348874298388484";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.defense_evasion",
    "attack.t1003.001", "attack.t1036", "car.2013-05-009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/02/18";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a process memory dump performed via ordinal function 24 in comsvcs.dll";
  <http://purl.org/dc/terms/id> "646ea171-dded-4578-8a4d-65e9822892e3";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Process Dump via Rundll32 and Comsvcs.dll";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely, because no one should dump the process memory in that way";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"comsvcs.dll,#24\")
|| regex(str(?cmdLine),\"comsvcs.dll,MiniDump\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/shantanukhande/status/1229348874298388484";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.defense_evasion",
    "attack.t1003.001", "attack.t1036", "car.2013-05-009";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/02/18";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a process memory dump performed via ordinal function 24 in comsvcs.dll";
  <http://purl.org/dc/terms/id> "646ea171-dded-4578-8a4d-65e9822892e3";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Process Dump via Rundll32 and Comsvcs.dll";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely, because no one should dump the process memory in that way";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"comsvcs.dll,#24\")
|| regex(str(?cmdLine),\"comsvcs.dll,MiniDump\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/shantanukhande/status/1229348874298388484";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.defense_evasion",
    "attack.t1003.001", "attack.t1036", "car.2013-05-009" .

<http://w3id.org/sepses/resource/sigma/sigma-1c373b6d-76ce-4553-997d-8c1da9a6b5f5>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/15";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd decribed in CVE-2019-1378";
  <http://purl.org/dc/terms/id> "1c373b6d-76ce-4553-997d-8c1da9a6b5f5";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Exploiting SetupComplete.cmd CVE-2019-1378";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER (regex(str(?ParentcmdLine),\"cmd.exe /c C:\\\\Windows\\\\Setup\\\\Scripts\\\\SetupComplete.cmd\")
|| regex(str(?ParentcmdLine),\"cmd.exe /c C:\\\\Windows\\\\Setup\\\\Scripts\\\\PartnerSetupComplete.cmd\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.embercybersecurity.com/blog/cve-2019-1378-exploiting-an-access-control-privilege-escalation-vulnerability-in-windows-10-update-assistant-wua";
  rule:hasDetectedRule "attack.execution", "attack.privilege_escalation", "attack.t1059",
    "attack.t1059.003", "attack.t1068", "attack.t1574";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/15";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd decribed in CVE-2019-1378";
  <http://purl.org/dc/terms/id> "1c373b6d-76ce-4553-997d-8c1da9a6b5f5";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Exploiting SetupComplete.cmd CVE-2019-1378";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER (regex(str(?ParentcmdLine),\"cmd.exe /c C:\\\\Windows\\\\Setup\\\\Scripts\\\\SetupComplete.cmd\")
|| regex(str(?ParentcmdLine),\"cmd.exe /c C:\\\\Windows\\\\Setup\\\\Scripts\\\\PartnerSetupComplete.cmd\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.embercybersecurity.com/blog/cve-2019-1378-exploiting-an-access-control-privilege-escalation-vulnerability-in-windows-10-update-assistant-wua";
  rule:hasDetectedRule "attack.execution", "attack.privilege_escalation", "attack.t1059",
    "attack.t1059.003", "attack.t1068", "attack.t1574";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/15";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd decribed in CVE-2019-1378";
  <http://purl.org/dc/terms/id> "1c373b6d-76ce-4553-997d-8c1da9a6b5f5";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Exploiting SetupComplete.cmd CVE-2019-1378";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER (regex(str(?ParentcmdLine),\"cmd.exe /c C:\\\\Windows\\\\Setup\\\\Scripts\\\\SetupComplete.cmd\")
|| regex(str(?ParentcmdLine),\"cmd.exe /c C:\\\\Windows\\\\Setup\\\\Scripts\\\\PartnerSetupComplete.cmd\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.embercybersecurity.com/blog/cve-2019-1378-exploiting-an-access-control-privilege-escalation-vulnerability-in-windows-10-update-assistant-wua";
  rule:hasDetectedRule "attack.execution", "attack.privilege_escalation", "attack.t1059",
    "attack.t1059.003", "attack.t1068", "attack.t1574";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/15";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd decribed in CVE-2019-1378";
  <http://purl.org/dc/terms/id> "1c373b6d-76ce-4553-997d-8c1da9a6b5f5";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Exploiting SetupComplete.cmd CVE-2019-1378";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER (regex(str(?ParentcmdLine),\"cmd.exe /c C:\\\\Windows\\\\Setup\\\\Scripts\\\\SetupComplete.cmd\")
|| regex(str(?ParentcmdLine),\"cmd.exe /c C:\\\\Windows\\\\Setup\\\\Scripts\\\\PartnerSetupComplete.cmd\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.embercybersecurity.com/blog/cve-2019-1378-exploiting-an-access-control-privilege-escalation-vulnerability-in-windows-10-update-assistant-wua";
  rule:hasDetectedRule "attack.execution", "attack.privilege_escalation", "attack.t1059",
    "attack.t1059.003", "attack.t1068", "attack.t1574";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/15";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd decribed in CVE-2019-1378";
  <http://purl.org/dc/terms/id> "1c373b6d-76ce-4553-997d-8c1da9a6b5f5";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Exploiting SetupComplete.cmd CVE-2019-1378";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER (regex(str(?ParentcmdLine),\"cmd.exe /c C:\\\\Windows\\\\Setup\\\\Scripts\\\\SetupComplete.cmd\")
|| regex(str(?ParentcmdLine),\"cmd.exe /c C:\\\\Windows\\\\Setup\\\\Scripts\\\\PartnerSetupComplete.cmd\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.embercybersecurity.com/blog/cve-2019-1378-exploiting-an-access-control-privilege-escalation-vulnerability-in-windows-10-update-assistant-wua";
  rule:hasDetectedRule "attack.execution", "attack.privilege_escalation", "attack.t1059",
    "attack.t1059.003", "attack.t1068", "attack.t1574";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/15";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd decribed in CVE-2019-1378";
  <http://purl.org/dc/terms/id> "1c373b6d-76ce-4553-997d-8c1da9a6b5f5";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Exploiting SetupComplete.cmd CVE-2019-1378";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER (regex(str(?ParentcmdLine),\"cmd.exe /c C:\\\\Windows\\\\Setup\\\\Scripts\\\\SetupComplete.cmd\")
|| regex(str(?ParentcmdLine),\"cmd.exe /c C:\\\\Windows\\\\Setup\\\\Scripts\\\\PartnerSetupComplete.cmd\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.embercybersecurity.com/blog/cve-2019-1378-exploiting-an-access-control-privilege-escalation-vulnerability-in-windows-10-update-assistant-wua";
  rule:hasDetectedRule "attack.execution", "attack.privilege_escalation", "attack.t1059",
    "attack.t1059.003", "attack.t1068", "attack.t1574" .

<http://w3id.org/sepses/resource/sigma/sigma-1012f107-b8f1-4271-af30-5aed2de89b39>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/05/22";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)";
  <http://purl.org/dc/terms/id> "1012f107-b8f1-4271-af30-5aed2de89b39";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Terminal Service Process Spawn";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER regex(str(?ParentcmdLine),\"svchost.exe.*termsvcs\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/rdp-stands-for-really-do-patch-understanding-the-wormable-rdp-vulnerability-cve-2019-0708/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.initial_access", "attack.t1190",
    "attack.t1210", "car.2013-07-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/05/22";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)";
  <http://purl.org/dc/terms/id> "1012f107-b8f1-4271-af30-5aed2de89b39";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Terminal Service Process Spawn";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER regex(str(?ParentcmdLine),\"svchost.exe.*termsvcs\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/rdp-stands-for-really-do-patch-understanding-the-wormable-rdp-vulnerability-cve-2019-0708/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.initial_access", "attack.t1190",
    "attack.t1210", "car.2013-07-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/05/22";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)";
  <http://purl.org/dc/terms/id> "1012f107-b8f1-4271-af30-5aed2de89b39";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Terminal Service Process Spawn";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER regex(str(?ParentcmdLine),\"svchost.exe.*termsvcs\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/rdp-stands-for-really-do-patch-understanding-the-wormable-rdp-vulnerability-cve-2019-0708/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.initial_access", "attack.t1190",
    "attack.t1210", "car.2013-07-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/05/22";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)";
  <http://purl.org/dc/terms/id> "1012f107-b8f1-4271-af30-5aed2de89b39";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Terminal Service Process Spawn";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER regex(str(?ParentcmdLine),\"svchost.exe.*termsvcs\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/rdp-stands-for-really-do-patch-understanding-the-wormable-rdp-vulnerability-cve-2019-0708/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.initial_access", "attack.t1190",
    "attack.t1210", "car.2013-07-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/05/22";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a process spawned by the terminal service server process (this could be an indicator for an exploitation of CVE-2019-0708)";
  <http://purl.org/dc/terms/id> "1012f107-b8f1-4271-af30-5aed2de89b39";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Terminal Service Process Spawn";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine?ParentcmdLine.
FILTER regex(str(?ParentcmdLine),\"svchost.exe.*termsvcs\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/rdp-stands-for-really-do-patch-understanding-the-wormable-rdp-vulnerability-cve-2019-0708/";
  rule:hasDetectedRule "attack.lateral_movement", "attack.initial_access", "attack.t1190",
    "attack.t1210", "car.2013-07-002" .

<http://w3id.org/sepses/resource/sigma/sigma-40b19fa6-d835-400c-b301-41f3a2baacaf>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, oscd.community";
  <http://purl.org/dc/terms/description> "Shadow Copies storage symbolic link creation using operating systems utilities";
  <http://purl.org/dc/terms/id> "40b19fa6-d835-400c-b301-41f3a2baacaf";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Shadow Copies Access via Symlink";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator working with shadow copies, access for backup purposes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"mklink\")
|| regex(str(?cmdLine),\"HarddiskVolumeShadowCopy\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, oscd.community";
  <http://purl.org/dc/terms/description> "Shadow Copies storage symbolic link creation using operating systems utilities";
  <http://purl.org/dc/terms/id> "40b19fa6-d835-400c-b301-41f3a2baacaf";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Shadow Copies Access via Symlink";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator working with shadow copies, access for backup purposes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"mklink\")
|| regex(str(?cmdLine),\"HarddiskVolumeShadowCopy\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, oscd.community";
  <http://purl.org/dc/terms/description> "Shadow Copies storage symbolic link creation using operating systems utilities";
  <http://purl.org/dc/terms/id> "40b19fa6-d835-400c-b301-41f3a2baacaf";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Shadow Copies Access via Symlink";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator working with shadow copies, access for backup purposes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"mklink\")
|| regex(str(?cmdLine),\"HarddiskVolumeShadowCopy\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, oscd.community";
  <http://purl.org/dc/terms/description> "Shadow Copies storage symbolic link creation using operating systems utilities";
  <http://purl.org/dc/terms/id> "40b19fa6-d835-400c-b301-41f3a2baacaf";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Shadow Copies Access via Symlink";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator working with shadow copies, access for backup purposes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"mklink\")
|| regex(str(?cmdLine),\"HarddiskVolumeShadowCopy\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.003" .

<http://w3id.org/sepses/resource/sigma/sigma-322ed9ec-fcab-4f67-9a34-e7c6aef43614>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/29";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects netsh commands that configure a port forwarding";
  <http://purl.org/dc/terms/id> "322ed9ec-fcab-4f67-9a34-e7c6aef43614";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Netsh Port Forwarding";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh interface portproxy add v4tov4 .*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html";
  rule:hasDetectedRule "attack.lateral_movement", "attack.defense_evasion", "attack.command_and_control",
    "attack.t1090";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/29";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects netsh commands that configure a port forwarding";
  <http://purl.org/dc/terms/id> "322ed9ec-fcab-4f67-9a34-e7c6aef43614";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Netsh Port Forwarding";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh interface portproxy add v4tov4 .*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html";
  rule:hasDetectedRule "attack.lateral_movement", "attack.defense_evasion", "attack.command_and_control",
    "attack.t1090";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/29";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects netsh commands that configure a port forwarding";
  <http://purl.org/dc/terms/id> "322ed9ec-fcab-4f67-9a34-e7c6aef43614";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Netsh Port Forwarding";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh interface portproxy add v4tov4 .*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html";
  rule:hasDetectedRule "attack.lateral_movement", "attack.defense_evasion", "attack.command_and_control",
    "attack.t1090";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/29";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects netsh commands that configure a port forwarding";
  <http://purl.org/dc/terms/id> "322ed9ec-fcab-4f67-9a34-e7c6aef43614";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Netsh Port Forwarding";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administration";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"netsh interface portproxy add v4tov4 .*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html";
  rule:hasDetectedRule "attack.lateral_movement", "attack.defense_evasion", "attack.command_and_control",
    "attack.t1090" .

<http://w3id.org/sepses/resource/sigma/sigma-56321594-9087-49d9-bf10-524fe8479452>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/25";
  <http://purl.org/dc/terms/creator> "Victor Sergeev, oscd.community";
  <http://purl.org/dc/terms/description> "Detects persitence via netsh helper";
  <http://purl.org/dc/terms/id> "56321594-9087-49d9-bf10-524fe8479452";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "testing";
  <http://purl.org/dc/terms/title> "Suspicious Netsh DLL Persistence";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"add\")
|| regex(str(?cmdLine),\"helper\")
)
FILTER regex(str(?cmdLine),\"\\\\netsh.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1128/T1128.md";
  rule:hasDetectedRule "attack.persistence", "attack.s0108", "attack.t1128", "attack.t1546.007";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/25";
  <http://purl.org/dc/terms/creator> "Victor Sergeev, oscd.community";
  <http://purl.org/dc/terms/description> "Detects persitence via netsh helper";
  <http://purl.org/dc/terms/id> "56321594-9087-49d9-bf10-524fe8479452";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "testing";
  <http://purl.org/dc/terms/title> "Suspicious Netsh DLL Persistence";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"add\")
|| regex(str(?cmdLine),\"helper\")
)
FILTER regex(str(?cmdLine),\"\\\\netsh.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1128/T1128.md";
  rule:hasDetectedRule "attack.persistence", "attack.s0108", "attack.t1128", "attack.t1546.007";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/25";
  <http://purl.org/dc/terms/creator> "Victor Sergeev, oscd.community";
  <http://purl.org/dc/terms/description> "Detects persitence via netsh helper";
  <http://purl.org/dc/terms/id> "56321594-9087-49d9-bf10-524fe8479452";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "testing";
  <http://purl.org/dc/terms/title> "Suspicious Netsh DLL Persistence";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"add\")
|| regex(str(?cmdLine),\"helper\")
)
FILTER regex(str(?cmdLine),\"\\\\netsh.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1128/T1128.md";
  rule:hasDetectedRule "attack.persistence", "attack.s0108", "attack.t1128", "attack.t1546.007";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/25";
  <http://purl.org/dc/terms/creator> "Victor Sergeev, oscd.community";
  <http://purl.org/dc/terms/description> "Detects persitence via netsh helper";
  <http://purl.org/dc/terms/id> "56321594-9087-49d9-bf10-524fe8479452";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "testing";
  <http://purl.org/dc/terms/title> "Suspicious Netsh DLL Persistence";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"add\")
|| regex(str(?cmdLine),\"helper\")
)
FILTER regex(str(?cmdLine),\"\\\\netsh.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1128/T1128.md";
  rule:hasDetectedRule "attack.persistence", "attack.s0108", "attack.t1128", "attack.t1546.007" .

<http://w3id.org/sepses/resource/sigma/sigma-3ede524d-21cc-472d-a3ce-d21b568d8db7>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/13";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a PsExec service start";
  <http://purl.org/dc/terms/id> "3ede524d-21cc-472d-a3ce-d21b568d8db7";
  <http://purl.org/dc/terms/modified> "2012/12/11";
  <http://purl.org/dc/terms/title> "PsExec Service Start";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"C:\\\\Windows\\\\PSEXESVC.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1569.002", "attack.t1035", "attack.s0029";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/13";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a PsExec service start";
  <http://purl.org/dc/terms/id> "3ede524d-21cc-472d-a3ce-d21b568d8db7";
  <http://purl.org/dc/terms/modified> "2012/12/11";
  <http://purl.org/dc/terms/title> "PsExec Service Start";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"C:\\\\Windows\\\\PSEXESVC.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1569.002", "attack.t1035", "attack.s0029";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/13";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a PsExec service start";
  <http://purl.org/dc/terms/id> "3ede524d-21cc-472d-a3ce-d21b568d8db7";
  <http://purl.org/dc/terms/modified> "2012/12/11";
  <http://purl.org/dc/terms/title> "PsExec Service Start";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"C:\\\\Windows\\\\PSEXESVC.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1569.002", "attack.t1035", "attack.s0029";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/13";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a PsExec service start";
  <http://purl.org/dc/terms/id> "3ede524d-21cc-472d-a3ce-d21b568d8db7";
  <http://purl.org/dc/terms/modified> "2012/12/11";
  <http://purl.org/dc/terms/title> "PsExec Service Start";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"C:\\\\Windows\\\\PSEXESVC.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1569.002", "attack.t1035", "attack.s0029" .

<http://w3id.org/sepses/resource/sigma/sigma-e79a9e79-eb72-4e78-a628-0e7e8f59e89c>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious calls of DLLs in rundll32.dll exports by ordinal";
  <http://purl.org/dc/terms/id> "e79a9e79-eb72-4e78-a628-0e7e8f59e89c";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Call by Ordinal";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Windows contol panel elements have been identified as source (mmc)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"rundll32.exe .*,#.*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/Neo23x0/DLLRunner", "https://techtalk.pcmatic.com/2017/11/30/running-dll-files-malware-analysis/",
    "https://twitter.com/cyb3rops/status/1186631731543236608";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious calls of DLLs in rundll32.dll exports by ordinal";
  <http://purl.org/dc/terms/id> "e79a9e79-eb72-4e78-a628-0e7e8f59e89c";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Call by Ordinal";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Windows contol panel elements have been identified as source (mmc)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"rundll32.exe .*,#.*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/Neo23x0/DLLRunner", "https://techtalk.pcmatic.com/2017/11/30/running-dll-files-malware-analysis/",
    "https://twitter.com/cyb3rops/status/1186631731543236608";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious calls of DLLs in rundll32.dll exports by ordinal";
  <http://purl.org/dc/terms/id> "e79a9e79-eb72-4e78-a628-0e7e8f59e89c";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Call by Ordinal";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Windows contol panel elements have been identified as source (mmc)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"rundll32.exe .*,#.*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/Neo23x0/DLLRunner", "https://techtalk.pcmatic.com/2017/11/30/running-dll-files-malware-analysis/",
    "https://twitter.com/cyb3rops/status/1186631731543236608";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious calls of DLLs in rundll32.dll exports by ordinal";
  <http://purl.org/dc/terms/id> "e79a9e79-eb72-4e78-a628-0e7e8f59e89c";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Call by Ordinal";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment",
    "Windows contol panel elements have been identified as source (mmc)";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"rundll32.exe .*,#.*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/Neo23x0/DLLRunner", "https://techtalk.pcmatic.com/2017/11/30/running-dll-files-malware-analysis/",
    "https://twitter.com/cyb3rops/status/1186631731543236608";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011" .

<http://w3id.org/sepses/resource/sigma/sigma-f7b5f842-a6af-4da5-9e95-e32478f3cd2f>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/02/09";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious msiexec process starts with web addreses as parameter";
  <http://purl.org/dc/terms/id> "f7b5f842-a6af-4da5-9e95-e32478f3cd2f";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "MsiExec Web Install";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* msiexec.*://.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.trendmicro.com/trendlabs-security-intelligence/attack-using-windows-installer-msiexec-exe-leads-lokibot/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.command_and_control", "attack.t1105",
    "attack.t1218.007";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/02/09";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious msiexec process starts with web addreses as parameter";
  <http://purl.org/dc/terms/id> "f7b5f842-a6af-4da5-9e95-e32478f3cd2f";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "MsiExec Web Install";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* msiexec.*://.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.trendmicro.com/trendlabs-security-intelligence/attack-using-windows-installer-msiexec-exe-leads-lokibot/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.command_and_control", "attack.t1105",
    "attack.t1218.007";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/02/09";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious msiexec process starts with web addreses as parameter";
  <http://purl.org/dc/terms/id> "f7b5f842-a6af-4da5-9e95-e32478f3cd2f";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "MsiExec Web Install";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* msiexec.*://.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.trendmicro.com/trendlabs-security-intelligence/attack-using-windows-installer-msiexec-exe-leads-lokibot/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.command_and_control", "attack.t1105",
    "attack.t1218.007";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/02/09";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious msiexec process starts with web addreses as parameter";
  <http://purl.org/dc/terms/id> "f7b5f842-a6af-4da5-9e95-e32478f3cd2f";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "MsiExec Web Install";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* msiexec.*://.*\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.trendmicro.com/trendlabs-security-intelligence/attack-using-windows-installer-msiexec-exe-leads-lokibot/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.command_and_control", "attack.t1105",
    "attack.t1218.007" .

<http://w3id.org/sepses/resource/sigma/sigma-ba778144-5e3d-40cf-8af9-e28fb1df1e20>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/01";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Trojan loader acitivty as used by APT28";
  <http://purl.org/dc/terms/id> "ba778144-5e3d-40cf-8af9-e28fb1df1e20";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Sofacy Trojan Loader Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dat,.*\")
|| regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dll,#1\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://researchcenter.paloaltonetworks.com/2018/02/unit42-sofacy-attacks-multiple-government-entities/",
    "https://twitter.com/ClearskySec/status/960924755355369472", "https://www.reverse.it/sample/e3399d4802f9e6d6d539e3ae57e7ea9a54610a7c4155a6541df8e94d67af086e?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0007", "car.2013-10-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/01";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Trojan loader acitivty as used by APT28";
  <http://purl.org/dc/terms/id> "ba778144-5e3d-40cf-8af9-e28fb1df1e20";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Sofacy Trojan Loader Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dat,.*\")
|| regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dll,#1\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://researchcenter.paloaltonetworks.com/2018/02/unit42-sofacy-attacks-multiple-government-entities/",
    "https://twitter.com/ClearskySec/status/960924755355369472", "https://www.reverse.it/sample/e3399d4802f9e6d6d539e3ae57e7ea9a54610a7c4155a6541df8e94d67af086e?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0007", "car.2013-10-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/01";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Trojan loader acitivty as used by APT28";
  <http://purl.org/dc/terms/id> "ba778144-5e3d-40cf-8af9-e28fb1df1e20";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Sofacy Trojan Loader Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dat,.*\")
|| regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dll,#1\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://researchcenter.paloaltonetworks.com/2018/02/unit42-sofacy-attacks-multiple-government-entities/",
    "https://twitter.com/ClearskySec/status/960924755355369472", "https://www.reverse.it/sample/e3399d4802f9e6d6d539e3ae57e7ea9a54610a7c4155a6541df8e94d67af086e?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0007", "car.2013-10-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/01";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Trojan loader acitivty as used by APT28";
  <http://purl.org/dc/terms/id> "ba778144-5e3d-40cf-8af9-e28fb1df1e20";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Sofacy Trojan Loader Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dat,.*\")
|| regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dll,#1\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://researchcenter.paloaltonetworks.com/2018/02/unit42-sofacy-attacks-multiple-government-entities/",
    "https://twitter.com/ClearskySec/status/960924755355369472", "https://www.reverse.it/sample/e3399d4802f9e6d6d539e3ae57e7ea9a54610a7c4155a6541df8e94d67af086e?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0007", "car.2013-10-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/01";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Trojan loader acitivty as used by APT28";
  <http://purl.org/dc/terms/id> "ba778144-5e3d-40cf-8af9-e28fb1df1e20";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Sofacy Trojan Loader Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dat,.*\")
|| regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dll,#1\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://researchcenter.paloaltonetworks.com/2018/02/unit42-sofacy-attacks-multiple-government-entities/",
    "https://twitter.com/ClearskySec/status/960924755355369472", "https://www.reverse.it/sample/e3399d4802f9e6d6d539e3ae57e7ea9a54610a7c4155a6541df8e94d67af086e?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0007", "car.2013-10-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/01";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Trojan loader acitivty as used by APT28";
  <http://purl.org/dc/terms/id> "ba778144-5e3d-40cf-8af9-e28fb1df1e20";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Sofacy Trojan Loader Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dat,.*\")
|| regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dll,#1\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://researchcenter.paloaltonetworks.com/2018/02/unit42-sofacy-attacks-multiple-government-entities/",
    "https://twitter.com/ClearskySec/status/960924755355369472", "https://www.reverse.it/sample/e3399d4802f9e6d6d539e3ae57e7ea9a54610a7c4155a6541df8e94d67af086e?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0007", "car.2013-10-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/01";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Trojan loader acitivty as used by APT28";
  <http://purl.org/dc/terms/id> "ba778144-5e3d-40cf-8af9-e28fb1df1e20";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Sofacy Trojan Loader Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dat,.*\")
|| regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dll,#1\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://researchcenter.paloaltonetworks.com/2018/02/unit42-sofacy-attacks-multiple-government-entities/",
    "https://twitter.com/ClearskySec/status/960924755355369472", "https://www.reverse.it/sample/e3399d4802f9e6d6d539e3ae57e7ea9a54610a7c4155a6541df8e94d67af086e?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0007", "car.2013-10-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/01";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Trojan loader acitivty as used by APT28";
  <http://purl.org/dc/terms/id> "ba778144-5e3d-40cf-8af9-e28fb1df1e20";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Sofacy Trojan Loader Activity";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dat,.*\")
|| regex(str(?cmdLine),\"rundll32.exe %APPDATA%\\\\.dll,#1\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://researchcenter.paloaltonetworks.com/2018/02/unit42-sofacy-attacks-multiple-government-entities/",
    "https://twitter.com/ClearskySec/status/960924755355369472", "https://www.reverse.it/sample/e3399d4802f9e6d6d539e3ae57e7ea9a54610a7c4155a6541df8e94d67af086e?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0007", "car.2013-10-002" .

<http://w3id.org/sepses/resource/sigma/sigma-d5b9ae7a-e6fc-405e-80ff-2ff9dcc64e7e>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/06/22";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious sysprep process start with AppData folder as target (as used by Trojan Syndicasec in Thrip report by Symantec)";
  <http://purl.org/dc/terms/id> "d5b9ae7a-e6fc-405e-80ff-2ff9dcc64e7e";
  <http://purl.org/dc/terms/modified> "2018/12/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Sysprep on AppData Folder";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"sysprep.exe AppData\\\\\")
|| regex(str(?cmdLine),\"sysprep.exe AppData\\\\\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/61a296bb-81ad-4fee-955f-3b399f4aaf4b",
    "https://www.symantec.com/blogs/threat-intelligence/thrip-hits-satellite-telecoms-defense-targets";
  rule:hasDetectedRule "attack.execution" .

<http://w3id.org/sepses/resource/sigma/sigma-8c7090c3-e0a0-4944-bd08-08c3a0cecf79>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/12";
  <http://purl.org/dc/terms/creator> "@41thexplorer, Microsoft Defender ATP";
  <http://purl.org/dc/terms/description> "Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia";
  <http://purl.org/dc/terms/id> "8c7090c3-e0a0-4944-bd08-08c3a0cecf79";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "TropicTrooper Campaign November 2018";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*abCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc.*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://cloudblogs.microsoft.com/microsoftsecure/2018/11/28/windows-defender-atp-device-risk-score-exposes-new-cyberattack-drives-conditional-access-to-protect-networks/";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1059";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/12";
  <http://purl.org/dc/terms/creator> "@41thexplorer, Microsoft Defender ATP";
  <http://purl.org/dc/terms/description> "Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia";
  <http://purl.org/dc/terms/id> "8c7090c3-e0a0-4944-bd08-08c3a0cecf79";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "TropicTrooper Campaign November 2018";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*abCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc.*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://cloudblogs.microsoft.com/microsoftsecure/2018/11/28/windows-defender-atp-device-risk-score-exposes-new-cyberattack-drives-conditional-access-to-protect-networks/";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1059";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/11/12";
  <http://purl.org/dc/terms/creator> "@41thexplorer, Microsoft Defender ATP";
  <http://purl.org/dc/terms/description> "Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia";
  <http://purl.org/dc/terms/id> "8c7090c3-e0a0-4944-bd08-08c3a0cecf79";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "TropicTrooper Campaign November 2018";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".*abCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc.*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://cloudblogs.microsoft.com/microsoftsecure/2018/11/28/windows-defender-atp-device-risk-score-exposes-new-cyberattack-drives-conditional-access-to-protect-networks/";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1059" .

<http://w3id.org/sepses/resource/sigma/sigma-4281cb20-2994-4580-aa63-c8b86d019934>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Sami Ruohonen";
  <http://purl.org/dc/terms/description> "Detects usage of attrib.exe to hide files from users.";
  <http://purl.org/dc/terms/id> "4281cb20-2994-4580-aa63-c8b86d019934";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Hiding Files with Attrib.exe";
  sigma:detectionCondition "selection and not (ini or intel)";
  sigma:falsePositive "igfxCUIService.exe hiding .*.cui files via .bat script (attrib.exe a child of cmd.exe and igfxCUIService.exe is the parent of the cmd.exe)",
    "msiexec.exe hiding desktop.ini";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* +h .*\")
FILTER regex(str(?cmdLine),\"attrib.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1158", "attack.t1564.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Sami Ruohonen";
  <http://purl.org/dc/terms/description> "Detects usage of attrib.exe to hide files from users.";
  <http://purl.org/dc/terms/id> "4281cb20-2994-4580-aa63-c8b86d019934";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Hiding Files with Attrib.exe";
  sigma:detectionCondition "selection and not (ini or intel)";
  sigma:falsePositive "igfxCUIService.exe hiding .*.cui files via .bat script (attrib.exe a child of cmd.exe and igfxCUIService.exe is the parent of the cmd.exe)",
    "msiexec.exe hiding desktop.ini";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* +h .*\")
FILTER regex(str(?cmdLine),\"attrib.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1158", "attack.t1564.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Sami Ruohonen";
  <http://purl.org/dc/terms/description> "Detects usage of attrib.exe to hide files from users.";
  <http://purl.org/dc/terms/id> "4281cb20-2994-4580-aa63-c8b86d019934";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Hiding Files with Attrib.exe";
  sigma:detectionCondition "selection and not (ini or intel)";
  sigma:falsePositive "igfxCUIService.exe hiding .*.cui files via .bat script (attrib.exe a child of cmd.exe and igfxCUIService.exe is the parent of the cmd.exe)",
    "msiexec.exe hiding desktop.ini";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* +h .*\")
FILTER regex(str(?cmdLine),\"attrib.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1158", "attack.t1564.001" .

<http://w3id.org/sepses/resource/sigma/sigma-3b6ab547-8ec2-4991-b9d2-2b06702a48d7>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a Powershell process that contains download commands in its command line string";
  <http://purl.org/dc/terms/id> "3b6ab547-8ec2-4991-b9d2-2b06702a48d7";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Download from URL";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a Powershell process that contains download commands in its command line string";
  <http://purl.org/dc/terms/id> "3b6ab547-8ec2-4991-b9d2-2b06702a48d7";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Download from URL";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a Powershell process that contains download commands in its command line string";
  <http://purl.org/dc/terms/id> "3b6ab547-8ec2-4991-b9d2-2b06702a48d7";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Download from URL";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086" .

<http://w3id.org/sepses/resource/sigma/sigma-5cddf373-ef00-4112-ad72-960ac29bac34>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/01/12";
  <http://purl.org/dc/terms/creator> "wagga";
  <http://purl.org/dc/terms/description> "Detects command line parameters used by Koadic hack tool";
  <http://purl.org/dc/terms/id> "5cddf373-ef00-4112-ad72-960ac29bac34";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Koadic Execution";
  sigma:detectionCondition "selection1";
  sigma:falsePositive "Pentest";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*cmd.exe.* /q /c chcp .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.f-secure.com/hunting-for-koadic-a-com-based-rootkit/",
    "https://github.com/zerosum0x0/koadic/blob/master/data/stager/js/stdlib.js#L955",
    "https://unit42.paloaltonetworks.com/unit42-sofacy-groups-parallel-attacks/";
  rule:hasDetectedRule "attack.execution", "attack.t1059", "attack.t1059.005", "attack.t1059.007",
    "attack.t1059.003", "attack.t1064";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/01/12";
  <http://purl.org/dc/terms/creator> "wagga";
  <http://purl.org/dc/terms/description> "Detects command line parameters used by Koadic hack tool";
  <http://purl.org/dc/terms/id> "5cddf373-ef00-4112-ad72-960ac29bac34";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Koadic Execution";
  sigma:detectionCondition "selection1";
  sigma:falsePositive "Pentest";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*cmd.exe.* /q /c chcp .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.f-secure.com/hunting-for-koadic-a-com-based-rootkit/",
    "https://github.com/zerosum0x0/koadic/blob/master/data/stager/js/stdlib.js#L955",
    "https://unit42.paloaltonetworks.com/unit42-sofacy-groups-parallel-attacks/";
  rule:hasDetectedRule "attack.execution", "attack.t1059", "attack.t1059.005", "attack.t1059.007",
    "attack.t1059.003", "attack.t1064";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/01/12";
  <http://purl.org/dc/terms/creator> "wagga";
  <http://purl.org/dc/terms/description> "Detects command line parameters used by Koadic hack tool";
  <http://purl.org/dc/terms/id> "5cddf373-ef00-4112-ad72-960ac29bac34";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Koadic Execution";
  sigma:detectionCondition "selection1";
  sigma:falsePositive "Pentest";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*cmd.exe.* /q /c chcp .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.f-secure.com/hunting-for-koadic-a-com-based-rootkit/",
    "https://github.com/zerosum0x0/koadic/blob/master/data/stager/js/stdlib.js#L955",
    "https://unit42.paloaltonetworks.com/unit42-sofacy-groups-parallel-attacks/";
  rule:hasDetectedRule "attack.execution", "attack.t1059", "attack.t1059.005", "attack.t1059.007",
    "attack.t1059.003", "attack.t1064";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/01/12";
  <http://purl.org/dc/terms/creator> "wagga";
  <http://purl.org/dc/terms/description> "Detects command line parameters used by Koadic hack tool";
  <http://purl.org/dc/terms/id> "5cddf373-ef00-4112-ad72-960ac29bac34";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Koadic Execution";
  sigma:detectionCondition "selection1";
  sigma:falsePositive "Pentest";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*cmd.exe.* /q /c chcp .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.f-secure.com/hunting-for-koadic-a-com-based-rootkit/",
    "https://github.com/zerosum0x0/koadic/blob/master/data/stager/js/stdlib.js#L955",
    "https://unit42.paloaltonetworks.com/unit42-sofacy-groups-parallel-attacks/";
  rule:hasDetectedRule "attack.execution", "attack.t1059", "attack.t1059.005", "attack.t1059.007",
    "attack.t1059.003", "attack.t1064";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/01/12";
  <http://purl.org/dc/terms/creator> "wagga";
  <http://purl.org/dc/terms/description> "Detects command line parameters used by Koadic hack tool";
  <http://purl.org/dc/terms/id> "5cddf373-ef00-4112-ad72-960ac29bac34";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Koadic Execution";
  sigma:detectionCondition "selection1";
  sigma:falsePositive "Pentest";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*cmd.exe.* /q /c chcp .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.f-secure.com/hunting-for-koadic-a-com-based-rootkit/",
    "https://github.com/zerosum0x0/koadic/blob/master/data/stager/js/stdlib.js#L955",
    "https://unit42.paloaltonetworks.com/unit42-sofacy-groups-parallel-attacks/";
  rule:hasDetectedRule "attack.execution", "attack.t1059", "attack.t1059.005", "attack.t1059.007",
    "attack.t1059.003", "attack.t1064";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/01/12";
  <http://purl.org/dc/terms/creator> "wagga";
  <http://purl.org/dc/terms/description> "Detects command line parameters used by Koadic hack tool";
  <http://purl.org/dc/terms/id> "5cddf373-ef00-4112-ad72-960ac29bac34";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Koadic Execution";
  sigma:detectionCondition "selection1";
  sigma:falsePositive "Pentest";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*cmd.exe.* /q /c chcp .*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blog.f-secure.com/hunting-for-koadic-a-com-based-rootkit/",
    "https://github.com/zerosum0x0/koadic/blob/master/data/stager/js/stdlib.js#L955",
    "https://unit42.paloaltonetworks.com/unit42-sofacy-groups-parallel-attacks/";
  rule:hasDetectedRule "attack.execution", "attack.t1059", "attack.t1059.005", "attack.t1059.007",
    "attack.t1059.003", "attack.t1064" .

<http://w3id.org/sepses/resource/sigma/sigma-e011a729-98a6-4139-b5c4-bf6f6dd8239a>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, juju4, keepwatch";
  <http://purl.org/dc/terms/description> "Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility";
  <http://purl.org/dc/terms/id> "e011a729-98a6-4139-b5c4-bf6f6dd8239a";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Certutil Command";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -decode .*\")
|| regex(str(?cmdLine),\".* /decode .*\")
|| regex(str(?cmdLine),\".* -decodehex .*\")
|| regex(str(?cmdLine),\".* /decodehex .*\")
|| regex(str(?cmdLine),\".* -urlcache .*\")
|| regex(str(?cmdLine),\".* /urlcache .*\")
|| regex(str(?cmdLine),\".* -verifyctl .*\")
|| regex(str(?cmdLine),\".* /verifyctl .*\")
|| regex(str(?cmdLine),\".* -encode .*\")
|| regex(str(?cmdLine),\".* /encode .*\")
|| regex(str(?cmdLine),\".*certutil.* -URL.*\")
|| regex(str(?cmdLine),\".*certutil.* /URL.*\")
|| regex(str(?cmdLine),\".*certutil.* -ping.*\")
|| regex(str(?cmdLine),\".*certutil.* /ping.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.technet.microsoft.com/pki/2006/11/30/basic-crl-checking-with-certutil/",
    "https://lolbas-project.github.io/lolbas/Binaries/Certutil/", "https://twitter.com/JohnLaTwC/status/835149808817991680",
    "https://twitter.com/egre55/status/1087685529016193025", "https://twitter.com/subTee/status/888071631528235010",
    "https://twitter.com/subTee/status/888102593838362624", "https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.command_and_control", "attack.t1140",
    "attack.t1105", "attack.g0049", "attack.g0010", "attack.g0045", "attack.g0007", "attack.g0075",
    "attack.g0096", "attack.s0160";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, juju4, keepwatch";
  <http://purl.org/dc/terms/description> "Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility";
  <http://purl.org/dc/terms/id> "e011a729-98a6-4139-b5c4-bf6f6dd8239a";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Certutil Command";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -decode .*\")
|| regex(str(?cmdLine),\".* /decode .*\")
|| regex(str(?cmdLine),\".* -decodehex .*\")
|| regex(str(?cmdLine),\".* /decodehex .*\")
|| regex(str(?cmdLine),\".* -urlcache .*\")
|| regex(str(?cmdLine),\".* /urlcache .*\")
|| regex(str(?cmdLine),\".* -verifyctl .*\")
|| regex(str(?cmdLine),\".* /verifyctl .*\")
|| regex(str(?cmdLine),\".* -encode .*\")
|| regex(str(?cmdLine),\".* /encode .*\")
|| regex(str(?cmdLine),\".*certutil.* -URL.*\")
|| regex(str(?cmdLine),\".*certutil.* /URL.*\")
|| regex(str(?cmdLine),\".*certutil.* -ping.*\")
|| regex(str(?cmdLine),\".*certutil.* /ping.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.technet.microsoft.com/pki/2006/11/30/basic-crl-checking-with-certutil/",
    "https://lolbas-project.github.io/lolbas/Binaries/Certutil/", "https://twitter.com/JohnLaTwC/status/835149808817991680",
    "https://twitter.com/egre55/status/1087685529016193025", "https://twitter.com/subTee/status/888071631528235010",
    "https://twitter.com/subTee/status/888102593838362624", "https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.command_and_control", "attack.t1140",
    "attack.t1105", "attack.g0049", "attack.g0010", "attack.g0045", "attack.g0007", "attack.g0075",
    "attack.g0096", "attack.s0160";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, juju4, keepwatch";
  <http://purl.org/dc/terms/description> "Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility";
  <http://purl.org/dc/terms/id> "e011a729-98a6-4139-b5c4-bf6f6dd8239a";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Certutil Command";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -decode .*\")
|| regex(str(?cmdLine),\".* /decode .*\")
|| regex(str(?cmdLine),\".* -decodehex .*\")
|| regex(str(?cmdLine),\".* /decodehex .*\")
|| regex(str(?cmdLine),\".* -urlcache .*\")
|| regex(str(?cmdLine),\".* /urlcache .*\")
|| regex(str(?cmdLine),\".* -verifyctl .*\")
|| regex(str(?cmdLine),\".* /verifyctl .*\")
|| regex(str(?cmdLine),\".* -encode .*\")
|| regex(str(?cmdLine),\".* /encode .*\")
|| regex(str(?cmdLine),\".*certutil.* -URL.*\")
|| regex(str(?cmdLine),\".*certutil.* /URL.*\")
|| regex(str(?cmdLine),\".*certutil.* -ping.*\")
|| regex(str(?cmdLine),\".*certutil.* /ping.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.technet.microsoft.com/pki/2006/11/30/basic-crl-checking-with-certutil/",
    "https://lolbas-project.github.io/lolbas/Binaries/Certutil/", "https://twitter.com/JohnLaTwC/status/835149808817991680",
    "https://twitter.com/egre55/status/1087685529016193025", "https://twitter.com/subTee/status/888071631528235010",
    "https://twitter.com/subTee/status/888102593838362624", "https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.command_and_control", "attack.t1140",
    "attack.t1105", "attack.g0049", "attack.g0010", "attack.g0045", "attack.g0007", "attack.g0075",
    "attack.g0096", "attack.s0160";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, juju4, keepwatch";
  <http://purl.org/dc/terms/description> "Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility";
  <http://purl.org/dc/terms/id> "e011a729-98a6-4139-b5c4-bf6f6dd8239a";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Certutil Command";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -decode .*\")
|| regex(str(?cmdLine),\".* /decode .*\")
|| regex(str(?cmdLine),\".* -decodehex .*\")
|| regex(str(?cmdLine),\".* /decodehex .*\")
|| regex(str(?cmdLine),\".* -urlcache .*\")
|| regex(str(?cmdLine),\".* /urlcache .*\")
|| regex(str(?cmdLine),\".* -verifyctl .*\")
|| regex(str(?cmdLine),\".* /verifyctl .*\")
|| regex(str(?cmdLine),\".* -encode .*\")
|| regex(str(?cmdLine),\".* /encode .*\")
|| regex(str(?cmdLine),\".*certutil.* -URL.*\")
|| regex(str(?cmdLine),\".*certutil.* /URL.*\")
|| regex(str(?cmdLine),\".*certutil.* -ping.*\")
|| regex(str(?cmdLine),\".*certutil.* /ping.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.technet.microsoft.com/pki/2006/11/30/basic-crl-checking-with-certutil/",
    "https://lolbas-project.github.io/lolbas/Binaries/Certutil/", "https://twitter.com/JohnLaTwC/status/835149808817991680",
    "https://twitter.com/egre55/status/1087685529016193025", "https://twitter.com/subTee/status/888071631528235010",
    "https://twitter.com/subTee/status/888102593838362624", "https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.command_and_control", "attack.t1140",
    "attack.t1105", "attack.g0049", "attack.g0010", "attack.g0045", "attack.g0007", "attack.g0075",
    "attack.g0096", "attack.s0160";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, juju4, keepwatch";
  <http://purl.org/dc/terms/description> "Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility";
  <http://purl.org/dc/terms/id> "e011a729-98a6-4139-b5c4-bf6f6dd8239a";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Certutil Command";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -decode .*\")
|| regex(str(?cmdLine),\".* /decode .*\")
|| regex(str(?cmdLine),\".* -decodehex .*\")
|| regex(str(?cmdLine),\".* /decodehex .*\")
|| regex(str(?cmdLine),\".* -urlcache .*\")
|| regex(str(?cmdLine),\".* /urlcache .*\")
|| regex(str(?cmdLine),\".* -verifyctl .*\")
|| regex(str(?cmdLine),\".* /verifyctl .*\")
|| regex(str(?cmdLine),\".* -encode .*\")
|| regex(str(?cmdLine),\".* /encode .*\")
|| regex(str(?cmdLine),\".*certutil.* -URL.*\")
|| regex(str(?cmdLine),\".*certutil.* /URL.*\")
|| regex(str(?cmdLine),\".*certutil.* -ping.*\")
|| regex(str(?cmdLine),\".*certutil.* /ping.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.technet.microsoft.com/pki/2006/11/30/basic-crl-checking-with-certutil/",
    "https://lolbas-project.github.io/lolbas/Binaries/Certutil/", "https://twitter.com/JohnLaTwC/status/835149808817991680",
    "https://twitter.com/egre55/status/1087685529016193025", "https://twitter.com/subTee/status/888071631528235010",
    "https://twitter.com/subTee/status/888102593838362624", "https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.command_and_control", "attack.t1140",
    "attack.t1105", "attack.g0049", "attack.g0010", "attack.g0045", "attack.g0007", "attack.g0075",
    "attack.g0096", "attack.s0160";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, juju4, keepwatch";
  <http://purl.org/dc/terms/description> "Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility";
  <http://purl.org/dc/terms/id> "e011a729-98a6-4139-b5c4-bf6f6dd8239a";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Certutil Command";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -decode .*\")
|| regex(str(?cmdLine),\".* /decode .*\")
|| regex(str(?cmdLine),\".* -decodehex .*\")
|| regex(str(?cmdLine),\".* /decodehex .*\")
|| regex(str(?cmdLine),\".* -urlcache .*\")
|| regex(str(?cmdLine),\".* /urlcache .*\")
|| regex(str(?cmdLine),\".* -verifyctl .*\")
|| regex(str(?cmdLine),\".* /verifyctl .*\")
|| regex(str(?cmdLine),\".* -encode .*\")
|| regex(str(?cmdLine),\".* /encode .*\")
|| regex(str(?cmdLine),\".*certutil.* -URL.*\")
|| regex(str(?cmdLine),\".*certutil.* /URL.*\")
|| regex(str(?cmdLine),\".*certutil.* -ping.*\")
|| regex(str(?cmdLine),\".*certutil.* /ping.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.technet.microsoft.com/pki/2006/11/30/basic-crl-checking-with-certutil/",
    "https://lolbas-project.github.io/lolbas/Binaries/Certutil/", "https://twitter.com/JohnLaTwC/status/835149808817991680",
    "https://twitter.com/egre55/status/1087685529016193025", "https://twitter.com/subTee/status/888071631528235010",
    "https://twitter.com/subTee/status/888102593838362624", "https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.command_and_control", "attack.t1140",
    "attack.t1105", "attack.g0049", "attack.g0010", "attack.g0045", "attack.g0007", "attack.g0075",
    "attack.g0096", "attack.s0160";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, juju4, keepwatch";
  <http://purl.org/dc/terms/description> "Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility";
  <http://purl.org/dc/terms/id> "e011a729-98a6-4139-b5c4-bf6f6dd8239a";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Certutil Command";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -decode .*\")
|| regex(str(?cmdLine),\".* /decode .*\")
|| regex(str(?cmdLine),\".* -decodehex .*\")
|| regex(str(?cmdLine),\".* /decodehex .*\")
|| regex(str(?cmdLine),\".* -urlcache .*\")
|| regex(str(?cmdLine),\".* /urlcache .*\")
|| regex(str(?cmdLine),\".* -verifyctl .*\")
|| regex(str(?cmdLine),\".* /verifyctl .*\")
|| regex(str(?cmdLine),\".* -encode .*\")
|| regex(str(?cmdLine),\".* /encode .*\")
|| regex(str(?cmdLine),\".*certutil.* -URL.*\")
|| regex(str(?cmdLine),\".*certutil.* /URL.*\")
|| regex(str(?cmdLine),\".*certutil.* -ping.*\")
|| regex(str(?cmdLine),\".*certutil.* /ping.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.technet.microsoft.com/pki/2006/11/30/basic-crl-checking-with-certutil/",
    "https://lolbas-project.github.io/lolbas/Binaries/Certutil/", "https://twitter.com/JohnLaTwC/status/835149808817991680",
    "https://twitter.com/egre55/status/1087685529016193025", "https://twitter.com/subTee/status/888071631528235010",
    "https://twitter.com/subTee/status/888102593838362624", "https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.command_and_control", "attack.t1140",
    "attack.t1105", "attack.g0049", "attack.g0010", "attack.g0045", "attack.g0007", "attack.g0075",
    "attack.g0096", "attack.s0160";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, juju4, keepwatch";
  <http://purl.org/dc/terms/description> "Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility";
  <http://purl.org/dc/terms/id> "e011a729-98a6-4139-b5c4-bf6f6dd8239a";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Certutil Command";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -decode .*\")
|| regex(str(?cmdLine),\".* /decode .*\")
|| regex(str(?cmdLine),\".* -decodehex .*\")
|| regex(str(?cmdLine),\".* /decodehex .*\")
|| regex(str(?cmdLine),\".* -urlcache .*\")
|| regex(str(?cmdLine),\".* /urlcache .*\")
|| regex(str(?cmdLine),\".* -verifyctl .*\")
|| regex(str(?cmdLine),\".* /verifyctl .*\")
|| regex(str(?cmdLine),\".* -encode .*\")
|| regex(str(?cmdLine),\".* /encode .*\")
|| regex(str(?cmdLine),\".*certutil.* -URL.*\")
|| regex(str(?cmdLine),\".*certutil.* /URL.*\")
|| regex(str(?cmdLine),\".*certutil.* -ping.*\")
|| regex(str(?cmdLine),\".*certutil.* /ping.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.technet.microsoft.com/pki/2006/11/30/basic-crl-checking-with-certutil/",
    "https://lolbas-project.github.io/lolbas/Binaries/Certutil/", "https://twitter.com/JohnLaTwC/status/835149808817991680",
    "https://twitter.com/egre55/status/1087685529016193025", "https://twitter.com/subTee/status/888071631528235010",
    "https://twitter.com/subTee/status/888102593838362624", "https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.command_and_control", "attack.t1140",
    "attack.t1105", "attack.g0049", "attack.g0010", "attack.g0045", "attack.g0007", "attack.g0075",
    "attack.g0096", "attack.s0160";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, juju4, keepwatch";
  <http://purl.org/dc/terms/description> "Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility";
  <http://purl.org/dc/terms/id> "e011a729-98a6-4139-b5c4-bf6f6dd8239a";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Certutil Command";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -decode .*\")
|| regex(str(?cmdLine),\".* /decode .*\")
|| regex(str(?cmdLine),\".* -decodehex .*\")
|| regex(str(?cmdLine),\".* /decodehex .*\")
|| regex(str(?cmdLine),\".* -urlcache .*\")
|| regex(str(?cmdLine),\".* /urlcache .*\")
|| regex(str(?cmdLine),\".* -verifyctl .*\")
|| regex(str(?cmdLine),\".* /verifyctl .*\")
|| regex(str(?cmdLine),\".* -encode .*\")
|| regex(str(?cmdLine),\".* /encode .*\")
|| regex(str(?cmdLine),\".*certutil.* -URL.*\")
|| regex(str(?cmdLine),\".*certutil.* /URL.*\")
|| regex(str(?cmdLine),\".*certutil.* -ping.*\")
|| regex(str(?cmdLine),\".*certutil.* /ping.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.technet.microsoft.com/pki/2006/11/30/basic-crl-checking-with-certutil/",
    "https://lolbas-project.github.io/lolbas/Binaries/Certutil/", "https://twitter.com/JohnLaTwC/status/835149808817991680",
    "https://twitter.com/egre55/status/1087685529016193025", "https://twitter.com/subTee/status/888071631528235010",
    "https://twitter.com/subTee/status/888102593838362624", "https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.command_and_control", "attack.t1140",
    "attack.t1105", "attack.g0049", "attack.g0010", "attack.g0045", "attack.g0007", "attack.g0075",
    "attack.g0096", "attack.s0160";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, juju4, keepwatch";
  <http://purl.org/dc/terms/description> "Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility";
  <http://purl.org/dc/terms/id> "e011a729-98a6-4139-b5c4-bf6f6dd8239a";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Certutil Command";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -decode .*\")
|| regex(str(?cmdLine),\".* /decode .*\")
|| regex(str(?cmdLine),\".* -decodehex .*\")
|| regex(str(?cmdLine),\".* /decodehex .*\")
|| regex(str(?cmdLine),\".* -urlcache .*\")
|| regex(str(?cmdLine),\".* /urlcache .*\")
|| regex(str(?cmdLine),\".* -verifyctl .*\")
|| regex(str(?cmdLine),\".* /verifyctl .*\")
|| regex(str(?cmdLine),\".* -encode .*\")
|| regex(str(?cmdLine),\".* /encode .*\")
|| regex(str(?cmdLine),\".*certutil.* -URL.*\")
|| regex(str(?cmdLine),\".*certutil.* /URL.*\")
|| regex(str(?cmdLine),\".*certutil.* -ping.*\")
|| regex(str(?cmdLine),\".*certutil.* /ping.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.technet.microsoft.com/pki/2006/11/30/basic-crl-checking-with-certutil/",
    "https://lolbas-project.github.io/lolbas/Binaries/Certutil/", "https://twitter.com/JohnLaTwC/status/835149808817991680",
    "https://twitter.com/egre55/status/1087685529016193025", "https://twitter.com/subTee/status/888071631528235010",
    "https://twitter.com/subTee/status/888102593838362624", "https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.command_and_control", "attack.t1140",
    "attack.t1105", "attack.g0049", "attack.g0010", "attack.g0045", "attack.g0007", "attack.g0075",
    "attack.g0096", "attack.s0160";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, juju4, keepwatch";
  <http://purl.org/dc/terms/description> "Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility";
  <http://purl.org/dc/terms/id> "e011a729-98a6-4139-b5c4-bf6f6dd8239a";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Certutil Command";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -decode .*\")
|| regex(str(?cmdLine),\".* /decode .*\")
|| regex(str(?cmdLine),\".* -decodehex .*\")
|| regex(str(?cmdLine),\".* /decodehex .*\")
|| regex(str(?cmdLine),\".* -urlcache .*\")
|| regex(str(?cmdLine),\".* /urlcache .*\")
|| regex(str(?cmdLine),\".* -verifyctl .*\")
|| regex(str(?cmdLine),\".* /verifyctl .*\")
|| regex(str(?cmdLine),\".* -encode .*\")
|| regex(str(?cmdLine),\".* /encode .*\")
|| regex(str(?cmdLine),\".*certutil.* -URL.*\")
|| regex(str(?cmdLine),\".*certutil.* /URL.*\")
|| regex(str(?cmdLine),\".*certutil.* -ping.*\")
|| regex(str(?cmdLine),\".*certutil.* /ping.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://blogs.technet.microsoft.com/pki/2006/11/30/basic-crl-checking-with-certutil/",
    "https://lolbas-project.github.io/lolbas/Binaries/Certutil/", "https://twitter.com/JohnLaTwC/status/835149808817991680",
    "https://twitter.com/egre55/status/1087685529016193025", "https://twitter.com/subTee/status/888071631528235010",
    "https://twitter.com/subTee/status/888102593838362624", "https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.command_and_control", "attack.t1140",
    "attack.t1105", "attack.g0049", "attack.g0010", "attack.g0045", "attack.g0007", "attack.g0075",
    "attack.g0096", "attack.s0160" .

<http://w3id.org/sepses/resource/sigma/sigma-2a072a96-a086-49fa-bcb5-15cc5a619093>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Detects manual service execution (start) via system utilities";
  <http://purl.org/dc/terms/id> "2a072a96-a086-49fa-bcb5-15cc5a619093";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Service Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator or user executes a service for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\" start \")
FILTER (regex(str(?cmdLine),\"\\\\net.exe\")
|| regex(str(?cmdLine),\"\\\\net1.exe\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1035/T1035.yaml";
  rule:hasDetectedRule "attack.execution", "attack.t1569.002", "attack.t1035";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Detects manual service execution (start) via system utilities";
  <http://purl.org/dc/terms/id> "2a072a96-a086-49fa-bcb5-15cc5a619093";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Service Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator or user executes a service for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\" start \")
FILTER (regex(str(?cmdLine),\"\\\\net.exe\")
|| regex(str(?cmdLine),\"\\\\net1.exe\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1035/T1035.yaml";
  rule:hasDetectedRule "attack.execution", "attack.t1569.002", "attack.t1035";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Detects manual service execution (start) via system utilities";
  <http://purl.org/dc/terms/id> "2a072a96-a086-49fa-bcb5-15cc5a619093";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Service Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator or user executes a service for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\" start \")
FILTER (regex(str(?cmdLine),\"\\\\net.exe\")
|| regex(str(?cmdLine),\"\\\\net1.exe\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1035/T1035.yaml";
  rule:hasDetectedRule "attack.execution", "attack.t1569.002", "attack.t1035" .

<http://w3id.org/sepses/resource/sigma/sigma-cea72823-df4d-4567-950c-0b579eaf0846>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Margaritis Dimitrios (idea), Florian Roth (rule)";
  <http://purl.org/dc/terms/description> "Detects wscript/cscript executions of scripts located in user directories";
  <http://purl.org/dc/terms/id> "cea72823-df4d-4567-950c-0b579eaf0846";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "WScript or CScript Dropper";
  sigma:detectionCondition "selection and not falsepositive";
  sigma:falsePositive "Other self-extractors", "Winzip";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* C:\\\\Users\\\\.jse .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.vbe .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.js .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.vba .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.vbs .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.jse .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.vbe .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.js .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.vba .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.vbs .*\")
)
FILTER (regex(str(?cmdLine),\"wscript.exe\")
|| regex(str(?cmdLine),\"cscript.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.005",
    "attack.t1059.007", "attack.t1064";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Margaritis Dimitrios (idea), Florian Roth (rule)";
  <http://purl.org/dc/terms/description> "Detects wscript/cscript executions of scripts located in user directories";
  <http://purl.org/dc/terms/id> "cea72823-df4d-4567-950c-0b579eaf0846";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "WScript or CScript Dropper";
  sigma:detectionCondition "selection and not falsepositive";
  sigma:falsePositive "Other self-extractors", "Winzip";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* C:\\\\Users\\\\.jse .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.vbe .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.js .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.vba .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.vbs .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.jse .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.vbe .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.js .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.vba .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.vbs .*\")
)
FILTER (regex(str(?cmdLine),\"wscript.exe\")
|| regex(str(?cmdLine),\"cscript.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.005",
    "attack.t1059.007", "attack.t1064";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Margaritis Dimitrios (idea), Florian Roth (rule)";
  <http://purl.org/dc/terms/description> "Detects wscript/cscript executions of scripts located in user directories";
  <http://purl.org/dc/terms/id> "cea72823-df4d-4567-950c-0b579eaf0846";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "WScript or CScript Dropper";
  sigma:detectionCondition "selection and not falsepositive";
  sigma:falsePositive "Other self-extractors", "Winzip";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* C:\\\\Users\\\\.jse .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.vbe .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.js .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.vba .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.vbs .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.jse .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.vbe .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.js .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.vba .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.vbs .*\")
)
FILTER (regex(str(?cmdLine),\"wscript.exe\")
|| regex(str(?cmdLine),\"cscript.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.005",
    "attack.t1059.007", "attack.t1064";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Margaritis Dimitrios (idea), Florian Roth (rule)";
  <http://purl.org/dc/terms/description> "Detects wscript/cscript executions of scripts located in user directories";
  <http://purl.org/dc/terms/id> "cea72823-df4d-4567-950c-0b579eaf0846";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "WScript or CScript Dropper";
  sigma:detectionCondition "selection and not falsepositive";
  sigma:falsePositive "Other self-extractors", "Winzip";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* C:\\\\Users\\\\.jse .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.vbe .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.js .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.vba .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.vbs .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.jse .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.vbe .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.js .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.vba .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.vbs .*\")
)
FILTER (regex(str(?cmdLine),\"wscript.exe\")
|| regex(str(?cmdLine),\"cscript.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.005",
    "attack.t1059.007", "attack.t1064";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Margaritis Dimitrios (idea), Florian Roth (rule)";
  <http://purl.org/dc/terms/description> "Detects wscript/cscript executions of scripts located in user directories";
  <http://purl.org/dc/terms/id> "cea72823-df4d-4567-950c-0b579eaf0846";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "WScript or CScript Dropper";
  sigma:detectionCondition "selection and not falsepositive";
  sigma:falsePositive "Other self-extractors", "Winzip";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* C:\\\\Users\\\\.jse .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.vbe .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.js .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.vba .*\")
|| regex(str(?cmdLine),\".* C:\\\\Users\\\\.vbs .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.jse .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.vbe .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.js .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.vba .*\")
|| regex(str(?cmdLine),\".* C:\\\\ProgramData\\\\.vbs .*\")
)
FILTER (regex(str(?cmdLine),\"wscript.exe\")
|| regex(str(?cmdLine),\"cscript.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.005",
    "attack.t1059.007", "attack.t1064" .

<http://w3id.org/sepses/resource/sigma/sigma-36222790-0d43-4fe8-86e4-674b27809543>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/04";
  <http://purl.org/dc/terms/creator> "@caliskanfurkan_";
  <http://purl.org/dc/terms/description> "Detecting DNS tunnel activity for Muddywater actor";
  <http://purl.org/dc/terms/id> "36222790-0d43-4fe8-86e4-674b27809543";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "DNS Tunnel Technique from MuddyWater";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"DataExchange.dll\")
)
FILTER (regex(str(?ParentImage),\"\\\\excel.exe\")
)
FILTER (regex(str(?cmdLine),\"\\\\powershell.exe\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.virustotal.com/gui/file/5ad401c3a568bd87dd13f8a9ddc4e450ece61cd9ce4d1b23f68ce0b1f3c190b7/",
    "https://www.vmray.com/analyses/5ad401c3a568/report/overview.html";
  rule:hasDetectedRule "attack.command_and_control", "attack.t1071", "attack.t1071.004";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/04";
  <http://purl.org/dc/terms/creator> "@caliskanfurkan_";
  <http://purl.org/dc/terms/description> "Detecting DNS tunnel activity for Muddywater actor";
  <http://purl.org/dc/terms/id> "36222790-0d43-4fe8-86e4-674b27809543";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "DNS Tunnel Technique from MuddyWater";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"DataExchange.dll\")
)
FILTER (regex(str(?ParentImage),\"\\\\excel.exe\")
)
FILTER (regex(str(?cmdLine),\"\\\\powershell.exe\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.virustotal.com/gui/file/5ad401c3a568bd87dd13f8a9ddc4e450ece61cd9ce4d1b23f68ce0b1f3c190b7/",
    "https://www.vmray.com/analyses/5ad401c3a568/report/overview.html";
  rule:hasDetectedRule "attack.command_and_control", "attack.t1071", "attack.t1071.004";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/04";
  <http://purl.org/dc/terms/creator> "@caliskanfurkan_";
  <http://purl.org/dc/terms/description> "Detecting DNS tunnel activity for Muddywater actor";
  <http://purl.org/dc/terms/id> "36222790-0d43-4fe8-86e4-674b27809543";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "DNS Tunnel Technique from MuddyWater";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :ParentImage ?ParentImage.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"DataExchange.dll\")
)
FILTER (regex(str(?ParentImage),\"\\\\excel.exe\")
)
FILTER (regex(str(?cmdLine),\"\\\\powershell.exe\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.virustotal.com/gui/file/5ad401c3a568bd87dd13f8a9ddc4e450ece61cd9ce4d1b23f68ce0b1f3c190b7/",
    "https://www.vmray.com/analyses/5ad401c3a568/report/overview.html";
  rule:hasDetectedRule "attack.command_and_control", "attack.t1071", "attack.t1071.004" .

<http://w3id.org/sepses/resource/sigma/sigma-d02e8cf5-6099-48cf-9bfc-1eec2d0c7b18>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/30";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects all Emotet like process executions that are not covered by the more generic rules";
  <http://purl.org/dc/terms/id> "d02e8cf5-6099-48cf-9bfc-1eec2d0c7b18";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Emotet Process Creation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -e.* PAA.*\")
|| regex(str(?cmdLine),\".*JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ.*\")
|| regex(str(?cmdLine),\".*QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA.*\")
|| regex(str(?cmdLine),\".*kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA.*\")
|| regex(str(?cmdLine),\".*IgAoACcAKgAnACkAOwAkA.*\")
|| regex(str(?cmdLine),\".*IAKAAnACoAJwApADsAJA.*\")
|| regex(str(?cmdLine),\".*iACgAJwAqACcAKQA7ACQA.*\")
|| regex(str(?cmdLine),\".*JABGAGwAeAByAGgAYwBmAGQ.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/81f3c28c-c686-425d-8a2b-a98198d244e1/",
    "https://app.any.run/tasks/84fc9b4a-ea2b-47b1-8aa6-9014402dfb56/", "https://app.any.run/tasks/97f875e8-0e08-4328-815f-055e971ba754/",
    "https://app.any.run/tasks/e13ab713-64cf-4b23-ad93-6dceaa5429ac/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/30";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects all Emotet like process executions that are not covered by the more generic rules";
  <http://purl.org/dc/terms/id> "d02e8cf5-6099-48cf-9bfc-1eec2d0c7b18";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Emotet Process Creation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -e.* PAA.*\")
|| regex(str(?cmdLine),\".*JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ.*\")
|| regex(str(?cmdLine),\".*QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA.*\")
|| regex(str(?cmdLine),\".*kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA.*\")
|| regex(str(?cmdLine),\".*IgAoACcAKgAnACkAOwAkA.*\")
|| regex(str(?cmdLine),\".*IAKAAnACoAJwApADsAJA.*\")
|| regex(str(?cmdLine),\".*iACgAJwAqACcAKQA7ACQA.*\")
|| regex(str(?cmdLine),\".*JABGAGwAeAByAGgAYwBmAGQ.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/81f3c28c-c686-425d-8a2b-a98198d244e1/",
    "https://app.any.run/tasks/84fc9b4a-ea2b-47b1-8aa6-9014402dfb56/", "https://app.any.run/tasks/97f875e8-0e08-4328-815f-055e971ba754/",
    "https://app.any.run/tasks/e13ab713-64cf-4b23-ad93-6dceaa5429ac/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/30";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects all Emotet like process executions that are not covered by the more generic rules";
  <http://purl.org/dc/terms/id> "d02e8cf5-6099-48cf-9bfc-1eec2d0c7b18";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Emotet Process Creation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -e.* PAA.*\")
|| regex(str(?cmdLine),\".*JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ.*\")
|| regex(str(?cmdLine),\".*QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA.*\")
|| regex(str(?cmdLine),\".*kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA.*\")
|| regex(str(?cmdLine),\".*IgAoACcAKgAnACkAOwAkA.*\")
|| regex(str(?cmdLine),\".*IAKAAnACoAJwApADsAJA.*\")
|| regex(str(?cmdLine),\".*iACgAJwAqACcAKQA7ACQA.*\")
|| regex(str(?cmdLine),\".*JABGAGwAeAByAGgAYwBmAGQ.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/81f3c28c-c686-425d-8a2b-a98198d244e1/",
    "https://app.any.run/tasks/84fc9b4a-ea2b-47b1-8aa6-9014402dfb56/", "https://app.any.run/tasks/97f875e8-0e08-4328-815f-055e971ba754/",
    "https://app.any.run/tasks/e13ab713-64cf-4b23-ad93-6dceaa5429ac/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/30";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects all Emotet like process executions that are not covered by the more generic rules";
  <http://purl.org/dc/terms/id> "d02e8cf5-6099-48cf-9bfc-1eec2d0c7b18";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Emotet Process Creation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -e.* PAA.*\")
|| regex(str(?cmdLine),\".*JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ.*\")
|| regex(str(?cmdLine),\".*QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA.*\")
|| regex(str(?cmdLine),\".*kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA.*\")
|| regex(str(?cmdLine),\".*IgAoACcAKgAnACkAOwAkA.*\")
|| regex(str(?cmdLine),\".*IAKAAnACoAJwApADsAJA.*\")
|| regex(str(?cmdLine),\".*iACgAJwAqACcAKQA7ACQA.*\")
|| regex(str(?cmdLine),\".*JABGAGwAeAByAGgAYwBmAGQ.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/81f3c28c-c686-425d-8a2b-a98198d244e1/",
    "https://app.any.run/tasks/84fc9b4a-ea2b-47b1-8aa6-9014402dfb56/", "https://app.any.run/tasks/97f875e8-0e08-4328-815f-055e971ba754/",
    "https://app.any.run/tasks/e13ab713-64cf-4b23-ad93-6dceaa5429ac/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/09/30";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects all Emotet like process executions that are not covered by the more generic rules";
  <http://purl.org/dc/terms/id> "d02e8cf5-6099-48cf-9bfc-1eec2d0c7b18";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Emotet Process Creation";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -e.* PAA.*\")
|| regex(str(?cmdLine),\".*JABlAG4AdgA6AHUAcwBlAHIAcAByAG8AZgBpAGwAZQ.*\")
|| regex(str(?cmdLine),\".*QAZQBuAHYAOgB1AHMAZQByAHAAcgBvAGYAaQBsAGUA.*\")
|| regex(str(?cmdLine),\".*kAGUAbgB2ADoAdQBzAGUAcgBwAHIAbwBmAGkAbABlA.*\")
|| regex(str(?cmdLine),\".*IgAoACcAKgAnACkAOwAkA.*\")
|| regex(str(?cmdLine),\".*IAKAAnACoAJwApADsAJA.*\")
|| regex(str(?cmdLine),\".*iACgAJwAqACcAKQA7ACQA.*\")
|| regex(str(?cmdLine),\".*JABGAGwAeAByAGgAYwBmAGQ.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/81f3c28c-c686-425d-8a2b-a98198d244e1/",
    "https://app.any.run/tasks/84fc9b4a-ea2b-47b1-8aa6-9014402dfb56/", "https://app.any.run/tasks/97f875e8-0e08-4328-815f-055e971ba754/",
    "https://app.any.run/tasks/e13ab713-64cf-4b23-ad93-6dceaa5429ac/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1027" .

<http://w3id.org/sepses/resource/sigma/sigma-c260b6db-48ba-4b4a-a76f-2f67644e99d2>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/04";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious command lines used in Covenant luanchers";
  <http://purl.org/dc/terms/id> "c260b6db-48ba-4b4a-a76f-2f67644e99d2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Covenant Launcher Indicators";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -Sta -Nop -Window Hidden -Command \")
|| regex(str(?cmdLine),\" -Sta -Nop -Window Hidden -EncodedCommand \")
|| regex(str(?cmdLine),\"sv o (New-Object IO.MemorySteam);sv d \")
|| regex(str(?cmdLine),\"mshta file.hta\")
|| regex(str(?cmdLine),\"GruntHTTP\")
|| regex(str(?cmdLine),\"-EncodedCommand cwB2ACAAbwAgA\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://posts.specterops.io/covenant-v0-5-eee0507b85ba";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1564.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/04";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious command lines used in Covenant luanchers";
  <http://purl.org/dc/terms/id> "c260b6db-48ba-4b4a-a76f-2f67644e99d2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Covenant Launcher Indicators";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -Sta -Nop -Window Hidden -Command \")
|| regex(str(?cmdLine),\" -Sta -Nop -Window Hidden -EncodedCommand \")
|| regex(str(?cmdLine),\"sv o (New-Object IO.MemorySteam);sv d \")
|| regex(str(?cmdLine),\"mshta file.hta\")
|| regex(str(?cmdLine),\"GruntHTTP\")
|| regex(str(?cmdLine),\"-EncodedCommand cwB2ACAAbwAgA\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://posts.specterops.io/covenant-v0-5-eee0507b85ba";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1564.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/04";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious command lines used in Covenant luanchers";
  <http://purl.org/dc/terms/id> "c260b6db-48ba-4b4a-a76f-2f67644e99d2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Covenant Launcher Indicators";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -Sta -Nop -Window Hidden -Command \")
|| regex(str(?cmdLine),\" -Sta -Nop -Window Hidden -EncodedCommand \")
|| regex(str(?cmdLine),\"sv o (New-Object IO.MemorySteam);sv d \")
|| regex(str(?cmdLine),\"mshta file.hta\")
|| regex(str(?cmdLine),\"GruntHTTP\")
|| regex(str(?cmdLine),\"-EncodedCommand cwB2ACAAbwAgA\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://posts.specterops.io/covenant-v0-5-eee0507b85ba";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1564.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/04";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious command lines used in Covenant luanchers";
  <http://purl.org/dc/terms/id> "c260b6db-48ba-4b4a-a76f-2f67644e99d2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Covenant Launcher Indicators";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -Sta -Nop -Window Hidden -Command \")
|| regex(str(?cmdLine),\" -Sta -Nop -Window Hidden -EncodedCommand \")
|| regex(str(?cmdLine),\"sv o (New-Object IO.MemorySteam);sv d \")
|| regex(str(?cmdLine),\"mshta file.hta\")
|| regex(str(?cmdLine),\"GruntHTTP\")
|| regex(str(?cmdLine),\"-EncodedCommand cwB2ACAAbwAgA\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://posts.specterops.io/covenant-v0-5-eee0507b85ba";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1564.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/06/04";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects suspicious command lines used in Covenant luanchers";
  <http://purl.org/dc/terms/id> "c260b6db-48ba-4b4a-a76f-2f67644e99d2";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Covenant Launcher Indicators";
  sigma:detectionCondition "selection";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -Sta -Nop -Window Hidden -Command \")
|| regex(str(?cmdLine),\" -Sta -Nop -Window Hidden -EncodedCommand \")
|| regex(str(?cmdLine),\"sv o (New-Object IO.MemorySteam);sv d \")
|| regex(str(?cmdLine),\"mshta file.hta\")
|| regex(str(?cmdLine),\"GruntHTTP\")
|| regex(str(?cmdLine),\"-EncodedCommand cwB2ACAAbwAgA\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://posts.specterops.io/covenant-v0-5-eee0507b85ba";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086", "attack.t1564.003" .

<http://w3id.org/sepses/resource/sigma/sigma-b3512211-c67e-4707-bedc-66efc7848863>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/03/20";
  <http://purl.org/dc/terms/creator> "Harish Segar (rule)";
  <http://purl.org/dc/terms/description> "Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0";
  <http://purl.org/dc/terms/id> "b3512211-c67e-4707-bedc-66efc7848863";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Downgrade Attack";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown", "Penetration Test";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -version 2 \")
|| regex(str(?cmdLine),\" -versio 2 \")
|| regex(str(?cmdLine),\" -versi 2 \")
|| regex(str(?cmdLine),\" -vers 2 \")
|| regex(str(?cmdLine),\" -ver 2 \")
|| regex(str(?cmdLine),\" -ve 2 \")
)
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/03/20";
  <http://purl.org/dc/terms/creator> "Harish Segar (rule)";
  <http://purl.org/dc/terms/description> "Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0";
  <http://purl.org/dc/terms/id> "b3512211-c67e-4707-bedc-66efc7848863";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Downgrade Attack";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown", "Penetration Test";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -version 2 \")
|| regex(str(?cmdLine),\" -versio 2 \")
|| regex(str(?cmdLine),\" -versi 2 \")
|| regex(str(?cmdLine),\" -vers 2 \")
|| regex(str(?cmdLine),\" -ver 2 \")
|| regex(str(?cmdLine),\" -ve 2 \")
)
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/03/20";
  <http://purl.org/dc/terms/creator> "Harish Segar (rule)";
  <http://purl.org/dc/terms/description> "Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0";
  <http://purl.org/dc/terms/id> "b3512211-c67e-4707-bedc-66efc7848863";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Downgrade Attack";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown", "Penetration Test";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -version 2 \")
|| regex(str(?cmdLine),\" -versio 2 \")
|| regex(str(?cmdLine),\" -versi 2 \")
|| regex(str(?cmdLine),\" -vers 2 \")
|| regex(str(?cmdLine),\" -ver 2 \")
|| regex(str(?cmdLine),\" -ve 2 \")
)
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/03/20";
  <http://purl.org/dc/terms/creator> "Harish Segar (rule)";
  <http://purl.org/dc/terms/description> "Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0";
  <http://purl.org/dc/terms/id> "b3512211-c67e-4707-bedc-66efc7848863";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "PowerShell Downgrade Attack";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown", "Penetration Test";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\" -version 2 \")
|| regex(str(?cmdLine),\" -versio 2 \")
|| regex(str(?cmdLine),\" -versi 2 \")
|| regex(str(?cmdLine),\" -vers 2 \")
|| regex(str(?cmdLine),\" -ver 2 \")
|| regex(str(?cmdLine),\" -ve 2 \")
)
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1059.001",
    "attack.t1086" .

<http://w3id.org/sepses/resource/sigma/sigma-8acf3cfa-1e8c-4099-83de-a0c4038e18f0>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/10";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Golden Chickens deployment method as used by Evilnum in report published in July 2020";
  <http://purl.org/dc/terms/id> "8acf3cfa-1e8c-4099-83de-a0c4038e18f0";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "EvilNum Golden Chickens Deployment via OCX Files";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"regsvr32\")
|| regex(str(?cmdLine),\" /s /i \")
|| regex(str(?cmdLine),\"\\\\AppData\\\\Roaming\\\\\")
|| regex(str(?cmdLine),\".ocx\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/33d37fdf-158d-4930-aa68-813e1d5eb8ba/",
    "https://www.welivesecurity.com/2020/07/09/more-evil-deep-look-evilnum-toolset/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1085", "attack.t1218.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/10";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Golden Chickens deployment method as used by Evilnum in report published in July 2020";
  <http://purl.org/dc/terms/id> "8acf3cfa-1e8c-4099-83de-a0c4038e18f0";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "EvilNum Golden Chickens Deployment via OCX Files";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"regsvr32\")
|| regex(str(?cmdLine),\" /s /i \")
|| regex(str(?cmdLine),\"\\\\AppData\\\\Roaming\\\\\")
|| regex(str(?cmdLine),\".ocx\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/33d37fdf-158d-4930-aa68-813e1d5eb8ba/",
    "https://www.welivesecurity.com/2020/07/09/more-evil-deep-look-evilnum-toolset/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1085", "attack.t1218.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2020/07/10";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects Golden Chickens deployment method as used by Evilnum in report published in July 2020";
  <http://purl.org/dc/terms/id> "8acf3cfa-1e8c-4099-83de-a0c4038e18f0";
  <http://purl.org/dc/terms/modified> "2020/08/27";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "EvilNum Golden Chickens Deployment via OCX Files";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"regsvr32\")
|| regex(str(?cmdLine),\" /s /i \")
|| regex(str(?cmdLine),\"\\\\AppData\\\\Roaming\\\\\")
|| regex(str(?cmdLine),\".ocx\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://app.any.run/tasks/33d37fdf-158d-4930-aa68-813e1d5eb8ba/",
    "https://www.welivesecurity.com/2020/07/09/more-evil-deep-look-evilnum-toolset/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1085", "attack.t1218.011" .

<http://w3id.org/sepses/resource/sigma/sigma-4d7cda18-1b12-4e52-b45c-d28653210df8>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/23";
  <http://purl.org/dc/terms/creator> "Kirill Kiryanov, oscd.community";
  <http://purl.org/dc/terms/description> "Detect possible Sysmon driver unload";
  <http://purl.org/dc/terms/id> "4d7cda18-1b12-4e52-b45c-d28653210df8";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Sysmon Driver Unload";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"unload\")
|| regex(str(?cmdLine),\"sys\")
)
FILTER regex(str(?cmdLine),\"\\\\fltmc.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.darkoperator.com/blog/2018/10/5/operating-offensively-against-sysmon";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1070";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/23";
  <http://purl.org/dc/terms/creator> "Kirill Kiryanov, oscd.community";
  <http://purl.org/dc/terms/description> "Detect possible Sysmon driver unload";
  <http://purl.org/dc/terms/id> "4d7cda18-1b12-4e52-b45c-d28653210df8";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Sysmon Driver Unload";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"unload\")
|| regex(str(?cmdLine),\"sys\")
)
FILTER regex(str(?cmdLine),\"\\\\fltmc.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.darkoperator.com/blog/2018/10/5/operating-offensively-against-sysmon";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1070" .

<http://w3id.org/sepses/resource/sigma/sigma-b243b280-65fe-48df-ba07-6ddea7646427>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system.";
  <http://purl.org/dc/terms/id> "b243b280-65fe-48df-ba07-6ddea7646427";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Discovery of a System Time";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of the system utilities to discover system time for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"Get-Date\")
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/fcdb99c2-ac3c-4bde-b664-4b336329bed2.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1124/T1124.md";
  rule:hasDetectedRule "attack.discovery", "attack.t1124";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Identifies use of various commands to query a systems time. This technique may be used before executing a scheduled task or to discover the time zone of a target system.";
  <http://purl.org/dc/terms/id> "b243b280-65fe-48df-ba07-6ddea7646427";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Discovery of a System Time";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of the system utilities to discover system time for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"Get-Date\")
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/fcdb99c2-ac3c-4bde-b664-4b336329bed2.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1124/T1124.md";
  rule:hasDetectedRule "attack.discovery", "attack.t1124" .

<http://w3id.org/sepses/resource/sigma/sigma-67f113fa-e23d-4271-befa-30113b3e08b1>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Identifies suspicious mshta.exe commands";
  <http://purl.org/dc/terms/id> "67f113fa-e23d-4271-befa-30113b3e08b1";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Mshta JavaScript Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"javascript\")
FILTER regex(str(?cmdLine),\"\\\\mshta.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/6bc283c4-21f2-4aed-a05c-a9a3ffa95dd4.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1170/T1170.yaml";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1218.005", "attack.t1170";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Identifies suspicious mshta.exe commands";
  <http://purl.org/dc/terms/id> "67f113fa-e23d-4271-befa-30113b3e08b1";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Mshta JavaScript Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"javascript\")
FILTER regex(str(?cmdLine),\"\\\\mshta.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/6bc283c4-21f2-4aed-a05c-a9a3ffa95dd4.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1170/T1170.yaml";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1218.005", "attack.t1170";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Identifies suspicious mshta.exe commands";
  <http://purl.org/dc/terms/id> "67f113fa-e23d-4271-befa-30113b3e08b1";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Mshta JavaScript Execution";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"javascript\")
FILTER regex(str(?cmdLine),\"\\\\mshta.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/6bc283c4-21f2-4aed-a05c-a9a3ffa95dd4.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1170/T1170.yaml";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1218.005", "attack.t1170" .

<http://w3id.org/sepses/resource/sigma/sigma-dcaa3f04-70c3-427a-80b4-b870d73c94c4>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/08/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)";
  <http://purl.org/dc/terms/id> "dcaa3f04-70c3-427a-80b4-b870d73c94c4";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Csc.exe Source File Folder";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "https://twitter.com/gN3mes1s/status/1206874118282448897", "https://twitter.com/gabriele_pippi/status/1206907900268072962";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"AppData\\\\\")
|| regex(str(?cmdLine),\"Windows\\\\Temp\\\\\")
)
FILTER regex(str(?cmdLine),\"csc.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/gN3mes1s/status/1206874118282448897", "https://app.any.run/tasks/c6993447-d1d8-414e-b856-675325e5aa09/",
    "https://securityboulevard.com/2019/08/agent-tesla-evading-edr-by-removing-api-hooks/",
    "https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1027.004", "attack.t1500";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/08/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)";
  <http://purl.org/dc/terms/id> "dcaa3f04-70c3-427a-80b4-b870d73c94c4";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Csc.exe Source File Folder";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "https://twitter.com/gN3mes1s/status/1206874118282448897", "https://twitter.com/gabriele_pippi/status/1206907900268072962";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"AppData\\\\\")
|| regex(str(?cmdLine),\"Windows\\\\Temp\\\\\")
)
FILTER regex(str(?cmdLine),\"csc.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/gN3mes1s/status/1206874118282448897", "https://app.any.run/tasks/c6993447-d1d8-414e-b856-675325e5aa09/",
    "https://securityboulevard.com/2019/08/agent-tesla-evading-edr-by-removing-api-hooks/",
    "https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1027.004", "attack.t1500";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/08/24";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)";
  <http://purl.org/dc/terms/id> "dcaa3f04-70c3-427a-80b4-b870d73c94c4";
  <http://purl.org/dc/terms/modified> "2020/09/05";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Csc.exe Source File Folder";
  sigma:detectionCondition "selection and not filter";
  sigma:falsePositive "https://twitter.com/gN3mes1s/status/1206874118282448897", "https://twitter.com/gabriele_pippi/status/1206907900268072962";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"AppData\\\\\")
|| regex(str(?cmdLine),\"Windows\\\\Temp\\\\\")
)
FILTER regex(str(?cmdLine),\"csc.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/gN3mes1s/status/1206874118282448897", "https://app.any.run/tasks/c6993447-d1d8-414e-b856-675325e5aa09/",
    "https://securityboulevard.com/2019/08/agent-tesla-evading-edr-by-removing-api-hooks/",
    "https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1027.004", "attack.t1500" .

<http://w3id.org/sepses/resource/sigma/sigma-949f1ffb-6e85-4f00-ae1e-c3c5b190d605>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/06/29";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a command line process that uses explorer.exe /root, which is similar to cmd.exe /c, only it breaks the process tree and makes its parent a new instance of explorer";
  <http://purl.org/dc/terms/id> "949f1ffb-6e85-4f00-ae1e-c3c5b190d605";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Explorer Root Flag Process Tree Break";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown how many legitimate software products use that method";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"explorer.exe\")
|| regex(str(?cmdLine),\" /root,\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/CyberRaiju/status/1273597319322058752", "https://twitter.com/bohops/status/1276357235954909188?s=12";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1036";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/06/29";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a command line process that uses explorer.exe /root, which is similar to cmd.exe /c, only it breaks the process tree and makes its parent a new instance of explorer";
  <http://purl.org/dc/terms/id> "949f1ffb-6e85-4f00-ae1e-c3c5b190d605";
  <http://purl.org/dc/terms/modified> "2020/08/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Explorer Root Flag Process Tree Break";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown how many legitimate software products use that method";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"explorer.exe\")
|| regex(str(?cmdLine),\" /root,\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://twitter.com/CyberRaiju/status/1273597319322058752", "https://twitter.com/bohops/status/1276357235954909188?s=12";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1036" .

<http://w3id.org/sepses/resource/sigma/sigma-3268b746-88d8-4cd3-bffc-30077d02c787>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/08/30";
  <http://purl.org/dc/terms/creator> "Ecco";
  <http://purl.org/dc/terms/description> "Detects some Empire PowerShell UAC bypass methods";
  <http://purl.org/dc/terms/id> "3268b746-88d8-4cd3-bffc-30077d02c787";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Empire PowerShell UAC Bypass";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update).Update).*\")
|| regex(str(?cmdLine),\".* -NoP -NonI -c $x=$((gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update).Update);.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64",
    "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-FodHelperBypass.ps1#L64";
  rule:hasDetectedRule "attack.defense_evasion", "attack.privilege_escalation", "attack.t1088",
    "attack.t1548.002", "car.2019-04-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/08/30";
  <http://purl.org/dc/terms/creator> "Ecco";
  <http://purl.org/dc/terms/description> "Detects some Empire PowerShell UAC bypass methods";
  <http://purl.org/dc/terms/id> "3268b746-88d8-4cd3-bffc-30077d02c787";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Empire PowerShell UAC Bypass";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update).Update).*\")
|| regex(str(?cmdLine),\".* -NoP -NonI -c $x=$((gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update).Update);.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64",
    "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-FodHelperBypass.ps1#L64";
  rule:hasDetectedRule "attack.defense_evasion", "attack.privilege_escalation", "attack.t1088",
    "attack.t1548.002", "car.2019-04-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/08/30";
  <http://purl.org/dc/terms/creator> "Ecco";
  <http://purl.org/dc/terms/description> "Detects some Empire PowerShell UAC bypass methods";
  <http://purl.org/dc/terms/id> "3268b746-88d8-4cd3-bffc-30077d02c787";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Empire PowerShell UAC Bypass";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update).Update).*\")
|| regex(str(?cmdLine),\".* -NoP -NonI -c $x=$((gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update).Update);.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64",
    "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-FodHelperBypass.ps1#L64";
  rule:hasDetectedRule "attack.defense_evasion", "attack.privilege_escalation", "attack.t1088",
    "attack.t1548.002", "car.2019-04-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/08/30";
  <http://purl.org/dc/terms/creator> "Ecco";
  <http://purl.org/dc/terms/description> "Detects some Empire PowerShell UAC bypass methods";
  <http://purl.org/dc/terms/id> "3268b746-88d8-4cd3-bffc-30077d02c787";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Empire PowerShell UAC Bypass";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update).Update).*\")
|| regex(str(?cmdLine),\".* -NoP -NonI -c $x=$((gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update).Update);.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64",
    "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-FodHelperBypass.ps1#L64";
  rule:hasDetectedRule "attack.defense_evasion", "attack.privilege_escalation", "attack.t1088",
    "attack.t1548.002", "car.2019-04-001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/08/30";
  <http://purl.org/dc/terms/creator> "Ecco";
  <http://purl.org/dc/terms/description> "Detects some Empire PowerShell UAC bypass methods";
  <http://purl.org/dc/terms/id> "3268b746-88d8-4cd3-bffc-30077d02c787";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Empire PowerShell UAC Bypass";
  sigma:detectionCondition "selection";
  sigma:falsePositive "unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update).Update).*\")
|| regex(str(?cmdLine),\".* -NoP -NonI -c $x=$((gp HKCU:Software\\\\\\\\Microsoft\\\\\\\\Windows Update).Update);.*\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64",
    "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-FodHelperBypass.ps1#L64";
  rule:hasDetectedRule "attack.defense_evasion", "attack.privilege_escalation", "attack.t1088",
    "attack.t1548.002", "car.2019-04-001" .

<http://w3id.org/sepses/resource/sigma/sigma-3d3aa6cd-6272-44d6-8afc-7e88dfef7061>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, oscd.community";
  <http://purl.org/dc/terms/description> "When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.";
  <http://purl.org/dc/terms/id> "3d3aa6cd-6272-44d6-8afc-7e88dfef7061";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Change Default File Association";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Admin activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"cmd\")
|| regex(str(?cmdLine),\"/c\")
|| regex(str(?cmdLine),\"assoc\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1042/T1042.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.t1042", "attack.t1546.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, oscd.community";
  <http://purl.org/dc/terms/description> "When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.";
  <http://purl.org/dc/terms/id> "3d3aa6cd-6272-44d6-8afc-7e88dfef7061";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Change Default File Association";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Admin activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"cmd\")
|| regex(str(?cmdLine),\"/c\")
|| regex(str(?cmdLine),\"assoc\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1042/T1042.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.t1042", "attack.t1546.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/21";
  <http://purl.org/dc/terms/creator> "Timur Zinniatullin, oscd.community";
  <http://purl.org/dc/terms/description> "When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.";
  <http://purl.org/dc/terms/id> "3d3aa6cd-6272-44d6-8afc-7e88dfef7061";
  <http://purl.org/dc/terms/modified> "2019/11/04";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Change Default File Association";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Admin activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"cmd\")
|| regex(str(?cmdLine),\"/c\")
|| regex(str(?cmdLine),\"assoc\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1042/T1042.yaml";
  rule:hasDetectedRule "attack.persistence", "attack.t1042", "attack.t1546.001" .

<http://w3id.org/sepses/resource/sigma/sigma-c947b146-0abc-4c87-9c64-b17e9d7274a2>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Florian Roth, Michael Haag, Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Shadow Copies deletion using operating systems utilities";
  <http://purl.org/dc/terms/id> "c947b146-0abc-4c87-9c64-b17e9d7274a2";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "Shadow Copies Deletion Using Operating Systems Utilities";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate Administrator deletes Shadow Copies using operating systems utilities for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"shadow\")
|| regex(str(?cmdLine),\"delete\")
)
FILTER (regex(str(?cmdLine),\"\\\\powershell.exe\")
|| regex(str(?cmdLine),\"\\\\wmic.exe\")
|| regex(str(?cmdLine),\"\\\\vssadmin.exe\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://www.hybrid-analysis.com/sample/ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa?environmentId=100",
    "https://blog.talosintelligence.com/2017/05/wannacry.html", "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/new-teslacrypt-ransomware-arrives-via-spam/",
    "https://www.bleepingcomputer.com/news/security/why-everyone-should-disable-vssadmin-exe-now/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.impact", "attack.t1070", "attack.t1490";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Florian Roth, Michael Haag, Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Shadow Copies deletion using operating systems utilities";
  <http://purl.org/dc/terms/id> "c947b146-0abc-4c87-9c64-b17e9d7274a2";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "Shadow Copies Deletion Using Operating Systems Utilities";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate Administrator deletes Shadow Copies using operating systems utilities for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"shadow\")
|| regex(str(?cmdLine),\"delete\")
)
FILTER (regex(str(?cmdLine),\"\\\\powershell.exe\")
|| regex(str(?cmdLine),\"\\\\wmic.exe\")
|| regex(str(?cmdLine),\"\\\\vssadmin.exe\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://www.hybrid-analysis.com/sample/ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa?environmentId=100",
    "https://blog.talosintelligence.com/2017/05/wannacry.html", "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/new-teslacrypt-ransomware-arrives-via-spam/",
    "https://www.bleepingcomputer.com/news/security/why-everyone-should-disable-vssadmin-exe-now/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.impact", "attack.t1070", "attack.t1490";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Florian Roth, Michael Haag, Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Shadow Copies deletion using operating systems utilities";
  <http://purl.org/dc/terms/id> "c947b146-0abc-4c87-9c64-b17e9d7274a2";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "Shadow Copies Deletion Using Operating Systems Utilities";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate Administrator deletes Shadow Copies using operating systems utilities for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"shadow\")
|| regex(str(?cmdLine),\"delete\")
)
FILTER (regex(str(?cmdLine),\"\\\\powershell.exe\")
|| regex(str(?cmdLine),\"\\\\wmic.exe\")
|| regex(str(?cmdLine),\"\\\\vssadmin.exe\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://www.hybrid-analysis.com/sample/ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa?environmentId=100",
    "https://blog.talosintelligence.com/2017/05/wannacry.html", "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/new-teslacrypt-ransomware-arrives-via-spam/",
    "https://www.bleepingcomputer.com/news/security/why-everyone-should-disable-vssadmin-exe-now/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.impact", "attack.t1070", "attack.t1490";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Florian Roth, Michael Haag, Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Shadow Copies deletion using operating systems utilities";
  <http://purl.org/dc/terms/id> "c947b146-0abc-4c87-9c64-b17e9d7274a2";
  <http://purl.org/dc/terms/status> "stable";
  <http://purl.org/dc/terms/title> "Shadow Copies Deletion Using Operating Systems Utilities";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate Administrator deletes Shadow Copies using operating systems utilities for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"shadow\")
|| regex(str(?cmdLine),\"delete\")
)
FILTER (regex(str(?cmdLine),\"\\\\powershell.exe\")
|| regex(str(?cmdLine),\"\\\\wmic.exe\")
|| regex(str(?cmdLine),\"\\\\vssadmin.exe\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://www.hybrid-analysis.com/sample/ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa?environmentId=100",
    "https://blog.talosintelligence.com/2017/05/wannacry.html", "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/new-teslacrypt-ransomware-arrives-via-spam/",
    "https://www.bleepingcomputer.com/news/security/why-everyone-should-disable-vssadmin-exe-now/";
  rule:hasDetectedRule "attack.defense_evasion", "attack.impact", "attack.t1070", "attack.t1490" .

<http://w3id.org/sepses/resource/sigma/sigma-b17ea6f7-6e90-447e-a799-e6c0a493d6ce>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Shadow Copies creation using operating systems utilities, possible credential access";
  <http://purl.org/dc/terms/id> "b17ea6f7-6e90-447e-a799-e6c0a493d6ce";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Shadow Copies Creation Using Operating Systems Utilities";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator working with shadow copies, access for backup purposes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"shadow\")
|| regex(str(?cmdLine),\"create\")
)
FILTER (regex(str(?cmdLine),\"\\\\powershell.exe\")
|| regex(str(?cmdLine),\"\\\\wmic.exe\")
|| regex(str(?cmdLine),\"\\\\vssadmin.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tutorial-for-ntds-goodness-vssadmin-wmis-ntdsdit-system/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Shadow Copies creation using operating systems utilities, possible credential access";
  <http://purl.org/dc/terms/id> "b17ea6f7-6e90-447e-a799-e6c0a493d6ce";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Shadow Copies Creation Using Operating Systems Utilities";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator working with shadow copies, access for backup purposes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"shadow\")
|| regex(str(?cmdLine),\"create\")
)
FILTER (regex(str(?cmdLine),\"\\\\powershell.exe\")
|| regex(str(?cmdLine),\"\\\\wmic.exe\")
|| regex(str(?cmdLine),\"\\\\vssadmin.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tutorial-for-ntds-goodness-vssadmin-wmis-ntdsdit-system/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Shadow Copies creation using operating systems utilities, possible credential access";
  <http://purl.org/dc/terms/id> "b17ea6f7-6e90-447e-a799-e6c0a493d6ce";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Shadow Copies Creation Using Operating Systems Utilities";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator working with shadow copies, access for backup purposes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"shadow\")
|| regex(str(?cmdLine),\"create\")
)
FILTER (regex(str(?cmdLine),\"\\\\powershell.exe\")
|| regex(str(?cmdLine),\"\\\\wmic.exe\")
|| regex(str(?cmdLine),\"\\\\vssadmin.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tutorial-for-ntds-goodness-vssadmin-wmis-ntdsdit-system/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/22";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Daniil Yugoslavskiy, oscd.community";
  <http://purl.org/dc/terms/description> "Shadow Copies creation using operating systems utilities, possible credential access";
  <http://purl.org/dc/terms/id> "b17ea6f7-6e90-447e-a799-e6c0a493d6ce";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Shadow Copies Creation Using Operating Systems Utilities";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate administrator working with shadow copies, access for backup purposes";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"shadow\")
|| regex(str(?cmdLine),\"create\")
)
FILTER (regex(str(?cmdLine),\"\\\\powershell.exe\")
|| regex(str(?cmdLine),\"\\\\wmic.exe\")
|| regex(str(?cmdLine),\"\\\\vssadmin.exe\")
)
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.slideshare.net/heirhabarov/hunting-for-credentials-dumping-in-windows-environment",
    "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/tutorial-for-ntds-goodness-vssadmin-wmis-ntdsdit-system/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003", "attack.t1003.002",
    "attack.t1003.003" .

<http://w3id.org/sepses/resource/sigma/sigma-f0cdd048-82dc-4f7a-8a7a-b87a52b6d0fd>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/12/11";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects suspicious process that use escape characters";
  <http://purl.org/dc/terms/id> "f0cdd048-82dc-4f7a-8a7a-b87a52b6d0fd";
  <http://purl.org/dc/terms/modified> "2020/03/14";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Commandline Escape";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*h^t^t^p.*\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.windowsinspired.com/understanding-the-command-line-string-and-arguments-received-by-a-windows-program/",
    "https://twitter.com/Hexacorn/status/885553465417756673", "https://twitter.com/Hexacorn/status/885570278637678592",
    "https://twitter.com/vysecurity/status/885545634958385153", "https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1140";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/12/11";
  <http://purl.org/dc/terms/creator> "juju4";
  <http://purl.org/dc/terms/description> "Detects suspicious process that use escape characters";
  <http://purl.org/dc/terms/id> "f0cdd048-82dc-4f7a-8a7a-b87a52b6d0fd";
  <http://purl.org/dc/terms/modified> "2020/03/14";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Commandline Escape";
  sigma:detectionCondition "selection";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*h^t^t^p.*\")
)
}""";
  sigma:level "low";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.windowsinspired.com/understanding-the-command-line-string-and-arguments-received-by-a-windows-program/",
    "https://twitter.com/Hexacorn/status/885553465417756673", "https://twitter.com/Hexacorn/status/885570278637678592",
    "https://twitter.com/vysecurity/status/885545634958385153", "https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1140" .

<http://w3id.org/sepses/resource/sigma/sigma-f72aa3e8-49f9-4c7d-bd74-f8ab84ff9bbb>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/17";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious RDP session redirect using tscon.exe";
  <http://purl.org/dc/terms/id> "f72aa3e8-49f9-4c7d-bd74-f8ab84ff9bbb";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious RDP Redirect Using TSCON";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /dest:rdp-tcp:.*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html",
    "https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6";
  rule:hasDetectedRule "attack.lateral_movement", "attack.t1563.002", "attack.t1021.001",
    "attack.t1076", "car.2013-07-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/17";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious RDP session redirect using tscon.exe";
  <http://purl.org/dc/terms/id> "f72aa3e8-49f9-4c7d-bd74-f8ab84ff9bbb";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious RDP Redirect Using TSCON";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /dest:rdp-tcp:.*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html",
    "https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6";
  rule:hasDetectedRule "attack.lateral_movement", "attack.t1563.002", "attack.t1021.001",
    "attack.t1076", "car.2013-07-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/17";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious RDP session redirect using tscon.exe";
  <http://purl.org/dc/terms/id> "f72aa3e8-49f9-4c7d-bd74-f8ab84ff9bbb";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious RDP Redirect Using TSCON";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /dest:rdp-tcp:.*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html",
    "https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6";
  rule:hasDetectedRule "attack.lateral_movement", "attack.t1563.002", "attack.t1021.001",
    "attack.t1076", "car.2013-07-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/17";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious RDP session redirect using tscon.exe";
  <http://purl.org/dc/terms/id> "f72aa3e8-49f9-4c7d-bd74-f8ab84ff9bbb";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious RDP Redirect Using TSCON";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /dest:rdp-tcp:.*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html",
    "https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6";
  rule:hasDetectedRule "attack.lateral_movement", "attack.t1563.002", "attack.t1021.001",
    "attack.t1076", "car.2013-07-002";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/03/17";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a suspicious RDP session redirect using tscon.exe";
  <http://purl.org/dc/terms/id> "f72aa3e8-49f9-4c7d-bd74-f8ab84ff9bbb";
  <http://purl.org/dc/terms/modified> "2020/08/29";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious RDP Redirect Using TSCON";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\".* /dest:rdp-tcp:.*\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html",
    "https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6";
  rule:hasDetectedRule "attack.lateral_movement", "attack.t1563.002", "attack.t1021.001",
    "attack.t1076", "car.2013-07-002" .

<http://w3id.org/sepses/resource/sigma/sigma-3bad990e-4848-4a78-9530-b427d854aac0>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Tony Lambert), oscd.community, omkar72";
  <http://purl.org/dc/terms/description> "Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts.";
  <http://purl.org/dc/terms/id> "3bad990e-4848-4a78-9530-b427d854aac0";
  <http://purl.org/dc/terms/modified> "2020/10/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Domain Trust Discovery";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of the utilities by legitimate user for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"trustedDomain\")
FILTER regex(str(?cmdLine),\"\\\\dsquery.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://redcanary.com/blog/how-one-hospital-thwarted-a-ryuk-ransomware-outbreak/",
    "https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/", "https://eqllib.readthedocs.io/en/latest/analytics/03e231a6-74bc-467a-acb1-e5676b0fb55e.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1482/T1482.md";
  rule:hasDetectedRule "attack.discovery", "attack.t1482";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Tony Lambert), oscd.community, omkar72";
  <http://purl.org/dc/terms/description> "Identifies execution of nltest.exe and dsquery.exe for domain trust discovery. This technique is used by attackers to enumerate Active Directory trusts.";
  <http://purl.org/dc/terms/id> "3bad990e-4848-4a78-9530-b427d854aac0";
  <http://purl.org/dc/terms/modified> "2020/10/30";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Domain Trust Discovery";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate use of the utilities by legitimate user for legitimate reason";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"trustedDomain\")
FILTER regex(str(?cmdLine),\"\\\\dsquery.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://redcanary.com/blog/how-one-hospital-thwarted-a-ryuk-ransomware-outbreak/",
    "https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/", "https://eqllib.readthedocs.io/en/latest/analytics/03e231a6-74bc-467a-acb1-e5676b0fb55e.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1482/T1482.md";
  rule:hasDetectedRule "attack.discovery", "attack.t1482" .

<http://w3id.org/sepses/resource/sigma/sigma-f26c6093-6f14-4b12-800f-0fcb46f5ffd0>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "John Lambert (rule)";
  <http://purl.org/dc/terms/description> "Detects base64 encoded strings used in hidden malicious PowerShell command lines";
  <http://purl.org/dc/terms/id> "f26c6093-6f14-4b12-800f-0fcb46f5ffd0";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Malicious Base64 Encoded PowerShell Keywords in Command Lines";
  sigma:detectionCondition "encoded and selection";
  sigma:falsePositive "Penetration tests";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA.*\")
|| regex(str(?cmdLine),\".*aXRzYWRtaW4gL3RyYW5zZmVy.*\")
|| regex(str(?cmdLine),\".*IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA.*\")
|| regex(str(?cmdLine),\".*JpdHNhZG1pbiAvdHJhbnNmZX.*\")
|| regex(str(?cmdLine),\".*YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg.*\")
|| regex(str(?cmdLine),\".*Yml0c2FkbWluIC90cmFuc2Zlc.*\")
|| regex(str(?cmdLine),\".*AGMAaAB1AG4AawBfAHMAaQB6AGUA.*\")
|| regex(str(?cmdLine),\".*JABjAGgAdQBuAGsAXwBzAGkAegBlA.*\")
|| regex(str(?cmdLine),\".*JGNodW5rX3Npem.*\")
|| regex(str(?cmdLine),\".*QAYwBoAHUAbgBrAF8AcwBpAHoAZQ.*\")
|| regex(str(?cmdLine),\".*RjaHVua19zaXpl.*\")
|| regex(str(?cmdLine),\".*Y2h1bmtfc2l6Z.*\")
|| regex(str(?cmdLine),\".*AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A.*\")
|| regex(str(?cmdLine),\".*kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg.*\")
|| regex(str(?cmdLine),\".*lPLkNvbXByZXNzaW9u.*\")
|| regex(str(?cmdLine),\".*SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA.*\")
|| regex(str(?cmdLine),\".*SU8uQ29tcHJlc3Npb2.*\")
|| regex(str(?cmdLine),\".*Ty5Db21wcmVzc2lvb.*\")
|| regex(str(?cmdLine),\".*AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ.*\")
|| regex(str(?cmdLine),\".*kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA.*\")
|| regex(str(?cmdLine),\".*lPLk1lbW9yeVN0cmVhb.*\")
|| regex(str(?cmdLine),\".*SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A.*\")
|| regex(str(?cmdLine),\".*SU8uTWVtb3J5U3RyZWFt.*\")
|| regex(str(?cmdLine),\".*Ty5NZW1vcnlTdHJlYW.*\")
|| regex(str(?cmdLine),\".*4ARwBlAHQAQwBoAHUAbgBrA.*\")
|| regex(str(?cmdLine),\".*5HZXRDaHVua.*\")
|| regex(str(?cmdLine),\".*AEcAZQB0AEMAaAB1AG4Aaw.*\")
|| regex(str(?cmdLine),\".*LgBHAGUAdABDAGgAdQBuAGsA.*\")
|| regex(str(?cmdLine),\".*LkdldENodW5r.*\")
|| regex(str(?cmdLine),\".*R2V0Q2h1bm.*\")
|| regex(str(?cmdLine),\".*AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A.*\")
|| regex(str(?cmdLine),\".*QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA.*\")
|| regex(str(?cmdLine),\".*RIUkVBRF9JTkZPNj.*\")
|| regex(str(?cmdLine),\".*SFJFQURfSU5GTzY0.*\")
|| regex(str(?cmdLine),\".*VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA.*\")
|| regex(str(?cmdLine),\".*VEhSRUFEX0lORk82N.*\")
|| regex(str(?cmdLine),\".*AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA.*\")
|| regex(str(?cmdLine),\".*cmVhdGVSZW1vdGVUaHJlYW.*\")
|| regex(str(?cmdLine),\".*MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA.*\")
|| regex(str(?cmdLine),\".*NyZWF0ZVJlbW90ZVRocmVhZ.*\")
|| regex(str(?cmdLine),\".*Q3JlYXRlUmVtb3RlVGhyZWFk.*\")
|| regex(str(?cmdLine),\".*QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA.*\")
|| regex(str(?cmdLine),\".*0AZQBtAG0AbwB2AGUA.*\")
|| regex(str(?cmdLine),\".*1lbW1vdm.*\")
|| regex(str(?cmdLine),\".*AGUAbQBtAG8AdgBlA.*\")
|| regex(str(?cmdLine),\".*bQBlAG0AbQBvAHYAZQ.*\")
|| regex(str(?cmdLine),\".*bWVtbW92Z.*\")
|| regex(str(?cmdLine),\".*ZW1tb3Zl.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.leeholmes.com/blog/2017/09/21/searching-for-content-in-base-64-strings/";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "John Lambert (rule)";
  <http://purl.org/dc/terms/description> "Detects base64 encoded strings used in hidden malicious PowerShell command lines";
  <http://purl.org/dc/terms/id> "f26c6093-6f14-4b12-800f-0fcb46f5ffd0";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Malicious Base64 Encoded PowerShell Keywords in Command Lines";
  sigma:detectionCondition "encoded and selection";
  sigma:falsePositive "Penetration tests";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA.*\")
|| regex(str(?cmdLine),\".*aXRzYWRtaW4gL3RyYW5zZmVy.*\")
|| regex(str(?cmdLine),\".*IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA.*\")
|| regex(str(?cmdLine),\".*JpdHNhZG1pbiAvdHJhbnNmZX.*\")
|| regex(str(?cmdLine),\".*YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg.*\")
|| regex(str(?cmdLine),\".*Yml0c2FkbWluIC90cmFuc2Zlc.*\")
|| regex(str(?cmdLine),\".*AGMAaAB1AG4AawBfAHMAaQB6AGUA.*\")
|| regex(str(?cmdLine),\".*JABjAGgAdQBuAGsAXwBzAGkAegBlA.*\")
|| regex(str(?cmdLine),\".*JGNodW5rX3Npem.*\")
|| regex(str(?cmdLine),\".*QAYwBoAHUAbgBrAF8AcwBpAHoAZQ.*\")
|| regex(str(?cmdLine),\".*RjaHVua19zaXpl.*\")
|| regex(str(?cmdLine),\".*Y2h1bmtfc2l6Z.*\")
|| regex(str(?cmdLine),\".*AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A.*\")
|| regex(str(?cmdLine),\".*kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg.*\")
|| regex(str(?cmdLine),\".*lPLkNvbXByZXNzaW9u.*\")
|| regex(str(?cmdLine),\".*SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA.*\")
|| regex(str(?cmdLine),\".*SU8uQ29tcHJlc3Npb2.*\")
|| regex(str(?cmdLine),\".*Ty5Db21wcmVzc2lvb.*\")
|| regex(str(?cmdLine),\".*AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ.*\")
|| regex(str(?cmdLine),\".*kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA.*\")
|| regex(str(?cmdLine),\".*lPLk1lbW9yeVN0cmVhb.*\")
|| regex(str(?cmdLine),\".*SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A.*\")
|| regex(str(?cmdLine),\".*SU8uTWVtb3J5U3RyZWFt.*\")
|| regex(str(?cmdLine),\".*Ty5NZW1vcnlTdHJlYW.*\")
|| regex(str(?cmdLine),\".*4ARwBlAHQAQwBoAHUAbgBrA.*\")
|| regex(str(?cmdLine),\".*5HZXRDaHVua.*\")
|| regex(str(?cmdLine),\".*AEcAZQB0AEMAaAB1AG4Aaw.*\")
|| regex(str(?cmdLine),\".*LgBHAGUAdABDAGgAdQBuAGsA.*\")
|| regex(str(?cmdLine),\".*LkdldENodW5r.*\")
|| regex(str(?cmdLine),\".*R2V0Q2h1bm.*\")
|| regex(str(?cmdLine),\".*AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A.*\")
|| regex(str(?cmdLine),\".*QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA.*\")
|| regex(str(?cmdLine),\".*RIUkVBRF9JTkZPNj.*\")
|| regex(str(?cmdLine),\".*SFJFQURfSU5GTzY0.*\")
|| regex(str(?cmdLine),\".*VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA.*\")
|| regex(str(?cmdLine),\".*VEhSRUFEX0lORk82N.*\")
|| regex(str(?cmdLine),\".*AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA.*\")
|| regex(str(?cmdLine),\".*cmVhdGVSZW1vdGVUaHJlYW.*\")
|| regex(str(?cmdLine),\".*MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA.*\")
|| regex(str(?cmdLine),\".*NyZWF0ZVJlbW90ZVRocmVhZ.*\")
|| regex(str(?cmdLine),\".*Q3JlYXRlUmVtb3RlVGhyZWFk.*\")
|| regex(str(?cmdLine),\".*QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA.*\")
|| regex(str(?cmdLine),\".*0AZQBtAG0AbwB2AGUA.*\")
|| regex(str(?cmdLine),\".*1lbW1vdm.*\")
|| regex(str(?cmdLine),\".*AGUAbQBtAG8AdgBlA.*\")
|| regex(str(?cmdLine),\".*bQBlAG0AbQBvAHYAZQ.*\")
|| regex(str(?cmdLine),\".*bWVtbW92Z.*\")
|| regex(str(?cmdLine),\".*ZW1tb3Zl.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.leeholmes.com/blog/2017/09/21/searching-for-content-in-base-64-strings/";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "John Lambert (rule)";
  <http://purl.org/dc/terms/description> "Detects base64 encoded strings used in hidden malicious PowerShell command lines";
  <http://purl.org/dc/terms/id> "f26c6093-6f14-4b12-800f-0fcb46f5ffd0";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Malicious Base64 Encoded PowerShell Keywords in Command Lines";
  sigma:detectionCondition "encoded and selection";
  sigma:falsePositive "Penetration tests";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA.*\")
|| regex(str(?cmdLine),\".*aXRzYWRtaW4gL3RyYW5zZmVy.*\")
|| regex(str(?cmdLine),\".*IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA.*\")
|| regex(str(?cmdLine),\".*JpdHNhZG1pbiAvdHJhbnNmZX.*\")
|| regex(str(?cmdLine),\".*YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg.*\")
|| regex(str(?cmdLine),\".*Yml0c2FkbWluIC90cmFuc2Zlc.*\")
|| regex(str(?cmdLine),\".*AGMAaAB1AG4AawBfAHMAaQB6AGUA.*\")
|| regex(str(?cmdLine),\".*JABjAGgAdQBuAGsAXwBzAGkAegBlA.*\")
|| regex(str(?cmdLine),\".*JGNodW5rX3Npem.*\")
|| regex(str(?cmdLine),\".*QAYwBoAHUAbgBrAF8AcwBpAHoAZQ.*\")
|| regex(str(?cmdLine),\".*RjaHVua19zaXpl.*\")
|| regex(str(?cmdLine),\".*Y2h1bmtfc2l6Z.*\")
|| regex(str(?cmdLine),\".*AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A.*\")
|| regex(str(?cmdLine),\".*kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg.*\")
|| regex(str(?cmdLine),\".*lPLkNvbXByZXNzaW9u.*\")
|| regex(str(?cmdLine),\".*SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA.*\")
|| regex(str(?cmdLine),\".*SU8uQ29tcHJlc3Npb2.*\")
|| regex(str(?cmdLine),\".*Ty5Db21wcmVzc2lvb.*\")
|| regex(str(?cmdLine),\".*AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ.*\")
|| regex(str(?cmdLine),\".*kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA.*\")
|| regex(str(?cmdLine),\".*lPLk1lbW9yeVN0cmVhb.*\")
|| regex(str(?cmdLine),\".*SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A.*\")
|| regex(str(?cmdLine),\".*SU8uTWVtb3J5U3RyZWFt.*\")
|| regex(str(?cmdLine),\".*Ty5NZW1vcnlTdHJlYW.*\")
|| regex(str(?cmdLine),\".*4ARwBlAHQAQwBoAHUAbgBrA.*\")
|| regex(str(?cmdLine),\".*5HZXRDaHVua.*\")
|| regex(str(?cmdLine),\".*AEcAZQB0AEMAaAB1AG4Aaw.*\")
|| regex(str(?cmdLine),\".*LgBHAGUAdABDAGgAdQBuAGsA.*\")
|| regex(str(?cmdLine),\".*LkdldENodW5r.*\")
|| regex(str(?cmdLine),\".*R2V0Q2h1bm.*\")
|| regex(str(?cmdLine),\".*AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A.*\")
|| regex(str(?cmdLine),\".*QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA.*\")
|| regex(str(?cmdLine),\".*RIUkVBRF9JTkZPNj.*\")
|| regex(str(?cmdLine),\".*SFJFQURfSU5GTzY0.*\")
|| regex(str(?cmdLine),\".*VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA.*\")
|| regex(str(?cmdLine),\".*VEhSRUFEX0lORk82N.*\")
|| regex(str(?cmdLine),\".*AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA.*\")
|| regex(str(?cmdLine),\".*cmVhdGVSZW1vdGVUaHJlYW.*\")
|| regex(str(?cmdLine),\".*MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA.*\")
|| regex(str(?cmdLine),\".*NyZWF0ZVJlbW90ZVRocmVhZ.*\")
|| regex(str(?cmdLine),\".*Q3JlYXRlUmVtb3RlVGhyZWFk.*\")
|| regex(str(?cmdLine),\".*QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA.*\")
|| regex(str(?cmdLine),\".*0AZQBtAG0AbwB2AGUA.*\")
|| regex(str(?cmdLine),\".*1lbW1vdm.*\")
|| regex(str(?cmdLine),\".*AGUAbQBtAG8AdgBlA.*\")
|| regex(str(?cmdLine),\".*bQBlAG0AbQBvAHYAZQ.*\")
|| regex(str(?cmdLine),\".*bWVtbW92Z.*\")
|| regex(str(?cmdLine),\".*ZW1tb3Zl.*\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://www.leeholmes.com/blog/2017/09/21/searching-for-content-in-base-64-strings/";
  rule:hasDetectedRule "attack.execution", "attack.t1059.001", "attack.t1086" .

<http://w3id.org/sepses/resource/sigma/sigma-b932b60f-fdda-4d53-8eda-a170c1d97bbd>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, Michael Haag";
  <http://purl.org/dc/terms/description> "Detects suspicious commands that could be related to activity that uses volume shadow copy to steal and retrieve hashes from the NTDS.dit file remotely";
  <http://purl.org/dc/terms/id> "b932b60f-fdda-4d53-8eda-a170c1d97bbd";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Activity Related to NTDS.dit Domain Hash Retrieval";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"vssadmin.exe Delete Shadows\")
|| regex(str(?cmdLine),\"vssadmin create shadow /for=C:\")
|| regex(str(?cmdLine),\"copy \\\\\\\\?\\\\GLOBALROOT\\\\Device\\\\\\\\windows\\\\ntds\\\\ntds.dit\")
|| regex(str(?cmdLine),\"copy \\\\\\\\?\\\\GLOBALROOT\\\\Device\\\\\\\\config\\\\SAM\")
|| regex(str(?cmdLine),\"vssadmin delete shadows /for=C:\")
|| regex(str(?cmdLine),\"reg SAVE HKLM\\\\SYSTEM \")
|| regex(str(?cmdLine),\"esentutl.exe /y /vss ntds.dit.*\")
|| regex(str(?cmdLine),\"esentutl.exe /y /vss SAM\")
|| regex(str(?cmdLine),\"esentutl.exe /y /vss SYSTEM\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://dfironthemountain.wordpress.com/2018/12/06/locked-file-access-using-esentutl-exe/",
    "https://room362.com/post/2013/2013-06-10-volume-shadow-copy-ntdsdit-domain-hashes-remotely-part-1/",
    "https://securingtomorrow.mcafee.com/mcafee-labs/new-teslacrypt-ransomware-arrives-via-spam/",
    "https://www.swordshield.com/2015/07/getting-hashes-from-ntds-dit-file/", "https://www.trustwave.com/Resources/SpiderLabs-Blog/Tutorial-for-NTDS-goodness-(VSSADMIN,-WMIS,-NTDS-dit,-SYSTEM)/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Florian Roth, Michael Haag";
  <http://purl.org/dc/terms/description> "Detects suspicious commands that could be related to activity that uses volume shadow copy to steal and retrieve hashes from the NTDS.dit file remotely";
  <http://purl.org/dc/terms/id> "b932b60f-fdda-4d53-8eda-a170c1d97bbd";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Activity Related to NTDS.dit Domain Hash Retrieval";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Administrative activity";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"vssadmin.exe Delete Shadows\")
|| regex(str(?cmdLine),\"vssadmin create shadow /for=C:\")
|| regex(str(?cmdLine),\"copy \\\\\\\\?\\\\GLOBALROOT\\\\Device\\\\\\\\windows\\\\ntds\\\\ntds.dit\")
|| regex(str(?cmdLine),\"copy \\\\\\\\?\\\\GLOBALROOT\\\\Device\\\\\\\\config\\\\SAM\")
|| regex(str(?cmdLine),\"vssadmin delete shadows /for=C:\")
|| regex(str(?cmdLine),\"reg SAVE HKLM\\\\SYSTEM \")
|| regex(str(?cmdLine),\"esentutl.exe /y /vss ntds.dit.*\")
|| regex(str(?cmdLine),\"esentutl.exe /y /vss SAM\")
|| regex(str(?cmdLine),\"esentutl.exe /y /vss SYSTEM\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://dfironthemountain.wordpress.com/2018/12/06/locked-file-access-using-esentutl-exe/",
    "https://room362.com/post/2013/2013-06-10-volume-shadow-copy-ntdsdit-domain-hashes-remotely-part-1/",
    "https://securingtomorrow.mcafee.com/mcafee-labs/new-teslacrypt-ransomware-arrives-via-spam/",
    "https://www.swordshield.com/2015/07/getting-hashes-from-ntds-dit-file/", "https://www.trustwave.com/Resources/SpiderLabs-Blog/Tutorial-for-NTDS-goodness-(VSSADMIN,-WMIS,-NTDS-dit,-SYSTEM)/";
  rule:hasDetectedRule "attack.credential_access", "attack.t1003" .

<http://w3id.org/sepses/resource/sigma/sigma-517490a7-115a-48c6-8862-1a481504d5a8>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Markus Neis";
  <http://purl.org/dc/terms/description> "Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications.";
  <http://purl.org/dc/terms/id> "517490a7-115a-48c6-8862-1a481504d5a8";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Shim Database Persistence via sdbinst.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*.sdb.*\")
)
FILTER (regex(str(?cmdLine),\"sdbinst.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1138",
    "attack.t1546.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Markus Neis";
  <http://purl.org/dc/terms/description> "Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications.";
  <http://purl.org/dc/terms/id> "517490a7-115a-48c6-8862-1a481504d5a8";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Shim Database Persistence via sdbinst.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*.sdb.*\")
)
FILTER (regex(str(?cmdLine),\"sdbinst.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1138",
    "attack.t1546.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Markus Neis";
  <http://purl.org/dc/terms/description> "Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications.";
  <http://purl.org/dc/terms/id> "517490a7-115a-48c6-8862-1a481504d5a8";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Shim Database Persistence via sdbinst.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*.sdb.*\")
)
FILTER (regex(str(?cmdLine),\"sdbinst.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1138",
    "attack.t1546.011";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/01/16";
  <http://purl.org/dc/terms/creator> "Markus Neis";
  <http://purl.org/dc/terms/description> "Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications.";
  <http://purl.org/dc/terms/id> "517490a7-115a-48c6-8862-1a481504d5a8";
  <http://purl.org/dc/terms/modified> "2020/09/06";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Possible Shim Database Persistence via sdbinst.exe";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*.sdb.*\")
)
FILTER (regex(str(?cmdLine),\"sdbinst.exe\")
)
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html";
  rule:hasDetectedRule "attack.persistence", "attack.privilege_escalation", "attack.t1138",
    "attack.t1546.011" .

<http://w3id.org/sepses/resource/sigma/sigma-15619216-e993-4721-b590-4c520615a67d>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Ecco";
  <http://purl.org/dc/terms/description> "Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting";
  <http://purl.org/dc/terms/id> "15619216-e993-4721-b590-4c520615a67d";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/title> "Meterpreter or Cobalt Strike Getsystem Service Start";
  sigma:detectionCondition "selection_1 and selection_2 and not filter1";
  sigma:falsePositive "Commandlines containing components like cmd accidentally", "Jobs and services started with cmd";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
    "https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.t1134", "attack.t1134.002",
    "attack.t1134.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Ecco";
  <http://purl.org/dc/terms/description> "Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting";
  <http://purl.org/dc/terms/id> "15619216-e993-4721-b590-4c520615a67d";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/title> "Meterpreter or Cobalt Strike Getsystem Service Start";
  sigma:detectionCondition "selection_1 and selection_2 and not filter1";
  sigma:falsePositive "Commandlines containing components like cmd accidentally", "Jobs and services started with cmd";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
    "https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.t1134", "attack.t1134.002",
    "attack.t1134.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Ecco";
  <http://purl.org/dc/terms/description> "Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting";
  <http://purl.org/dc/terms/id> "15619216-e993-4721-b590-4c520615a67d";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/title> "Meterpreter or Cobalt Strike Getsystem Service Start";
  sigma:detectionCondition "selection_1 and selection_2 and not filter1";
  sigma:falsePositive "Commandlines containing components like cmd accidentally", "Jobs and services started with cmd";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
    "https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.t1134", "attack.t1134.002",
    "attack.t1134.001";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/26";
  <http://purl.org/dc/terms/creator> "Teymur Kheirkhabarov, Ecco";
  <http://purl.org/dc/terms/description> "Detects the use of getsystem Meterpreter/Cobalt Strike command by detecting a specific service starting";
  <http://purl.org/dc/terms/id> "15619216-e993-4721-b590-4c520615a67d";
  <http://purl.org/dc/terms/modified> "2020/09/01";
  <http://purl.org/dc/terms/title> "Meterpreter or Cobalt Strike Getsystem Service Start";
  sigma:detectionCondition "selection_1 and selection_2 and not filter1";
  sigma:falsePositive "Commandlines containing components like cmd accidentally", "Jobs and services started with cmd";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://speakerdeck.com/heirhabarov/hunting-for-privilege-escalation-in-windows-environment",
    "https://blog.cobaltstrike.com/2014/04/02/what-happens-when-i-type-getsystem/";
  rule:hasDetectedRule "attack.privilege_escalation", "attack.t1134", "attack.t1134.002",
    "attack.t1134.001" .

<http://w3id.org/sepses/resource/sigma/sigma-83865853-59aa-449e-9600-74b9d89a6d6e>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Detect attacker collecting audio via SoundRecorder application";
  <http://purl.org/dc/terms/id> "83865853-59aa-449e-9600-74b9d89a6d6e";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Audio Capture via SoundRecorder";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate audio capture by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"/FILE\")
FILTER regex(str(?cmdLine),\"\\\\SoundRecorder.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1123/T1123.yaml",
    "https://eqllib.readthedocs.io/en/latest/analytics/f72a98cb-7b3d-4100-99c3-a138b6e9ff6e.html";
  rule:hasDetectedRule "attack.collection", "attack.t1123";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/10/24";
  <http://purl.org/dc/terms/creator> "E.M. Anhaus (orignally from Atomic Blue Detections, Endgame), oscd.community";
  <http://purl.org/dc/terms/description> "Detect attacker collecting audio via SoundRecorder application";
  <http://purl.org/dc/terms/id> "83865853-59aa-449e-9600-74b9d89a6d6e";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Audio Capture via SoundRecorder";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Legitimate audio capture by legitimate user";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"/FILE\")
FILTER regex(str(?cmdLine),\"\\\\SoundRecorder.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1123/T1123.yaml",
    "https://eqllib.readthedocs.io/en/latest/analytics/f72a98cb-7b3d-4100-99c3-a138b6e9ff6e.html";
  rule:hasDetectedRule "attack.collection", "attack.t1123" .

<http://w3id.org/sepses/resource/sigma/sigma-cc7abbd0-762b-41e3-8a26-57ad50d2eea3>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/22";
  <http://purl.org/dc/terms/creator> "Diego Perez (@darkquassar), Markus Neis, Swisscom (Improve Rule)";
  <http://purl.org/dc/terms/description> "Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism";
  <http://purl.org/dc/terms/id> "cc7abbd0-762b-41e3-8a26-57ad50d2eea3";
  <http://purl.org/dc/terms/modified> "2020/08/23";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "MSHTA Suspicious Execution 01";
  sigma:detectionCondition "selection1";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*vbscript.*\")
|| regex(str(?cmdLine),\".*.jpg.*\")
|| regex(str(?cmdLine),\".*.png.*\")
|| regex(str(?cmdLine),\".*.lnk.*\")
|| regex(str(?cmdLine),\".*.xls.*\")
|| regex(str(?cmdLine),\".*.doc.*\")
|| regex(str(?cmdLine),\".*.zip.*\")
)
FILTER regex(str(?cmdLine),\"mshta.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://blog.sevagas.com/?Hacking-around-HTA-files", "https://0x00sec.org/t/clientside-exploitation-in-2018-how-pentesting-has-changed/7356",
    "https://docs.microsoft.com/en-us/dotnet/standard/data/xml/xslt-stylesheet-scripting-using-msxsl-script",
    "https://medium.com/tsscyber/pentesting-and-hta-bypassing-powershell-constrained-language-mode-53a42856c997";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1140", "attack.t1218.005";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/22";
  <http://purl.org/dc/terms/creator> "Diego Perez (@darkquassar), Markus Neis, Swisscom (Improve Rule)";
  <http://purl.org/dc/terms/description> "Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism";
  <http://purl.org/dc/terms/id> "cc7abbd0-762b-41e3-8a26-57ad50d2eea3";
  <http://purl.org/dc/terms/modified> "2020/08/23";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "MSHTA Suspicious Execution 01";
  sigma:detectionCondition "selection1";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*vbscript.*\")
|| regex(str(?cmdLine),\".*.jpg.*\")
|| regex(str(?cmdLine),\".*.png.*\")
|| regex(str(?cmdLine),\".*.lnk.*\")
|| regex(str(?cmdLine),\".*.xls.*\")
|| regex(str(?cmdLine),\".*.doc.*\")
|| regex(str(?cmdLine),\".*.zip.*\")
)
FILTER regex(str(?cmdLine),\"mshta.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://blog.sevagas.com/?Hacking-around-HTA-files", "https://0x00sec.org/t/clientside-exploitation-in-2018-how-pentesting-has-changed/7356",
    "https://docs.microsoft.com/en-us/dotnet/standard/data/xml/xslt-stylesheet-scripting-using-msxsl-script",
    "https://medium.com/tsscyber/pentesting-and-hta-bypassing-powershell-constrained-language-mode-53a42856c997";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1140", "attack.t1218.005";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2019/02/22";
  <http://purl.org/dc/terms/creator> "Diego Perez (@darkquassar), Markus Neis, Swisscom (Improve Rule)";
  <http://purl.org/dc/terms/description> "Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism";
  <http://purl.org/dc/terms/id> "cc7abbd0-762b-41e3-8a26-57ad50d2eea3";
  <http://purl.org/dc/terms/modified> "2020/08/23";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "MSHTA Suspicious Execution 01";
  sigma:detectionCondition "selection1";
  sigma:falsePositive "False positives depend on scripts and administrative tools used in the monitored environment";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\".*vbscript.*\")
|| regex(str(?cmdLine),\".*.jpg.*\")
|| regex(str(?cmdLine),\".*.png.*\")
|| regex(str(?cmdLine),\".*.lnk.*\")
|| regex(str(?cmdLine),\".*.xls.*\")
|| regex(str(?cmdLine),\".*.doc.*\")
|| regex(str(?cmdLine),\".*.zip.*\")
)
FILTER regex(str(?cmdLine),\"mshta.exe\")
}""";
  sigma:level "high";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "http://blog.sevagas.com/?Hacking-around-HTA-files", "https://0x00sec.org/t/clientside-exploitation-in-2018-how-pentesting-has-changed/7356",
    "https://docs.microsoft.com/en-us/dotnet/standard/data/xml/xslt-stylesheet-scripting-using-msxsl-script",
    "https://medium.com/tsscyber/pentesting-and-hta-bypassing-powershell-constrained-language-mode-53a42856c997";
  rule:hasDetectedRule "attack.defense_evasion", "attack.t1140", "attack.t1218.005" .

<http://w3id.org/sepses/resource/sigma/sigma-f0b70adb-0075-43b0-9745-e82a1c608fcc>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/07/20";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a ZxShell start by the called and well-known function name";
  <http://purl.org/dc/terms/id> "f0b70adb-0075-43b0-9745-e82a1c608fcc";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/title> "ZxShell Malware";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe .*,zxFunction.*\")
|| regex(str(?cmdLine),\"rundll32.exe .*,RemoteDiskXXXXX\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/5d2a4cde9fa7c2fdbf39b2e2ffd23378d0c50701a3095d1e91e3cf922d7b0b16?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0001", "attack.s0412";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/07/20";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a ZxShell start by the called and well-known function name";
  <http://purl.org/dc/terms/id> "f0b70adb-0075-43b0-9745-e82a1c608fcc";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/title> "ZxShell Malware";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe .*,zxFunction.*\")
|| regex(str(?cmdLine),\"rundll32.exe .*,RemoteDiskXXXXX\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/5d2a4cde9fa7c2fdbf39b2e2ffd23378d0c50701a3095d1e91e3cf922d7b0b16?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0001", "attack.s0412";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/07/20";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a ZxShell start by the called and well-known function name";
  <http://purl.org/dc/terms/id> "f0b70adb-0075-43b0-9745-e82a1c608fcc";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/title> "ZxShell Malware";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe .*,zxFunction.*\")
|| regex(str(?cmdLine),\"rundll32.exe .*,RemoteDiskXXXXX\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/5d2a4cde9fa7c2fdbf39b2e2ffd23378d0c50701a3095d1e91e3cf922d7b0b16?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0001", "attack.s0412";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/07/20";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a ZxShell start by the called and well-known function name";
  <http://purl.org/dc/terms/id> "f0b70adb-0075-43b0-9745-e82a1c608fcc";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/title> "ZxShell Malware";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe .*,zxFunction.*\")
|| regex(str(?cmdLine),\"rundll32.exe .*,RemoteDiskXXXXX\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/5d2a4cde9fa7c2fdbf39b2e2ffd23378d0c50701a3095d1e91e3cf922d7b0b16?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0001", "attack.s0412";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/07/20";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a ZxShell start by the called and well-known function name";
  <http://purl.org/dc/terms/id> "f0b70adb-0075-43b0-9745-e82a1c608fcc";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/title> "ZxShell Malware";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe .*,zxFunction.*\")
|| regex(str(?cmdLine),\"rundll32.exe .*,RemoteDiskXXXXX\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/5d2a4cde9fa7c2fdbf39b2e2ffd23378d0c50701a3095d1e91e3cf922d7b0b16?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0001", "attack.s0412";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/07/20";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a ZxShell start by the called and well-known function name";
  <http://purl.org/dc/terms/id> "f0b70adb-0075-43b0-9745-e82a1c608fcc";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/title> "ZxShell Malware";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe .*,zxFunction.*\")
|| regex(str(?cmdLine),\"rundll32.exe .*,RemoteDiskXXXXX\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/5d2a4cde9fa7c2fdbf39b2e2ffd23378d0c50701a3095d1e91e3cf922d7b0b16?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0001", "attack.s0412";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/07/20";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a ZxShell start by the called and well-known function name";
  <http://purl.org/dc/terms/id> "f0b70adb-0075-43b0-9745-e82a1c608fcc";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/title> "ZxShell Malware";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe .*,zxFunction.*\")
|| regex(str(?cmdLine),\"rundll32.exe .*,RemoteDiskXXXXX\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/5d2a4cde9fa7c2fdbf39b2e2ffd23378d0c50701a3095d1e91e3cf922d7b0b16?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0001", "attack.s0412";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2017/07/20";
  <http://purl.org/dc/terms/creator> "Florian Roth";
  <http://purl.org/dc/terms/description> "Detects a ZxShell start by the called and well-known function name";
  <http://purl.org/dc/terms/id> "f0b70adb-0075-43b0-9745-e82a1c608fcc";
  <http://purl.org/dc/terms/modified> "2020/08/26";
  <http://purl.org/dc/terms/title> "ZxShell Malware";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unlikely";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
FILTER (regex(str(?cmdLine),\"rundll32.exe .*,zxFunction.*\")
|| regex(str(?cmdLine),\"rundll32.exe .*,RemoteDiskXXXXX\")
)
}""";
  sigma:level "critical";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://www.hybrid-analysis.com/sample/5d2a4cde9fa7c2fdbf39b2e2ffd23378d0c50701a3095d1e91e3cf922d7b0b16?environmentId=100";
  rule:hasDetectedRule "attack.defense_evasion", "attack.execution", "attack.t1085",
    "attack.t1218.011", "attack.t1059", "attack.t1059.003", "attack.g0001", "attack.s0412" .

<http://w3id.org/sepses/resource/sigma/sigma-f67dbfce-93bc-440d-86ad-a95ae8858c90>
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/10/30";
  <http://purl.org/dc/terms/creator> "Endgame, JHasenbusch (ported to sigma for oscd.community)";
  <http://purl.org/dc/terms/description> "Detect download by BITS jobs via PowerShell";
  <http://purl.org/dc/terms/id> "f67dbfce-93bc-440d-86ad-a95ae8858c90";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Bitsadmin Job via PowerShell";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"Start-BitsTransfer\")
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/ec5180c9-721a-460f-bddc-27539a284273.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1197/T1197.md";
  rule:hasDetectedRule "attack.defense_evasion", "attack.persistence", "attack.t1197";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/10/30";
  <http://purl.org/dc/terms/creator> "Endgame, JHasenbusch (ported to sigma for oscd.community)";
  <http://purl.org/dc/terms/description> "Detect download by BITS jobs via PowerShell";
  <http://purl.org/dc/terms/id> "f67dbfce-93bc-440d-86ad-a95ae8858c90";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Bitsadmin Job via PowerShell";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"Start-BitsTransfer\")
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/ec5180c9-721a-460f-bddc-27539a284273.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1197/T1197.md";
  rule:hasDetectedRule "attack.defense_evasion", "attack.persistence", "attack.t1197";
  a sigma:SigmaRule;
  <http://purl.org/dc/terms/created> "2018/10/30";
  <http://purl.org/dc/terms/creator> "Endgame, JHasenbusch (ported to sigma for oscd.community)";
  <http://purl.org/dc/terms/description> "Detect download by BITS jobs via PowerShell";
  <http://purl.org/dc/terms/id> "f67dbfce-93bc-440d-86ad-a95ae8858c90";
  <http://purl.org/dc/terms/modified> "2019/11/11";
  <http://purl.org/dc/terms/status> "experimental";
  <http://purl.org/dc/terms/title> "Suspicious Bitsadmin Job via PowerShell";
  sigma:detectionCondition "selection";
  sigma:falsePositive "Unknown";
  sigma:hasDetection """prefix : <http://w3id.org/sepses/vocab/event/log#>
SELECT ?s WHERE {
 ?s :cmdLine ?cmdLine.
?s :cmdLine ?cmdLine.
FILTER regex(str(?cmdLine),\"Start-BitsTransfer\")
FILTER regex(str(?cmdLine),\"\\\\powershell.exe\")
}""";
  sigma:level "medium";
  sigma:logSourceCategory "process_creation";
  sigma:logSourceProduct "windows";
  sigma:references "https://eqllib.readthedocs.io/en/latest/analytics/ec5180c9-721a-460f-bddc-27539a284273.html",
    "https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1197/T1197.md";
  rule:hasDetectedRule "attack.defense_evasion", "attack.persistence", "attack.t1197" .
